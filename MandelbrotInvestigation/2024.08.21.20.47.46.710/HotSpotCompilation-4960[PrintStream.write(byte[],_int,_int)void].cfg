begin_compilation
  name " HotSpotCompilation-4960[java.io.PrintStream.write(byte[], int, int)]"
  method "HotSpotCompilation-4960[java.io.PrintStream.write(byte[], int, int)]"
  date 1724269736589
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a431 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a431  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.io.PrintStream
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v461 v468 ?35 ?16 v465 ?146 ?128 ?397 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a431 a441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a431 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# jdk.internal.misc.InternalLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:620) [bci: 1]
stamp: n# jdk.internal.misc.InternalLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v461 
lastLocationAccess: - 
=== Succesors ===
next: a432 
=== Usages ===
a236 v462 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v461 lastLocationAccess: - #next: a432  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v261 ?16 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v261 ?16 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v261 ?16 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<PrintStream.write(byte[], int, int)>
localsSize: 6
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 620
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v457 a432 a433 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a431 
=== Succesors ===
=== Usages ===
a432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a432 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: int[-60683|0xffffffffffff12f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v462 
lastLocationAccess: - 
=== Succesors ===
next: a433 
=== Usages ===
v463 
=== Predecessor ===
a431 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v462 lastLocationAccess: - #next: a433  <|@  <|@
f <@~|@floating>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a432 
=== Succesors ===
=== Usages ===
a433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a433 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-61707|0xffffffffffff0ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v463 
lastLocationAccess: - 
=== Succesors ===
next: v457 
=== Usages ===
a244 v464 v477 v480 
=== Predecessor ===
a432 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v463 lastLocationAccess: - #next: v457  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a433 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?5 
object: v480 
=== Succesors ===
next: j434 
=== Usages ===
=== Predecessor ===
a433 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: v480 #next: j434  <|@  <|@
f <@~|@floating>@ <|@
tid j91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@jdk.graal.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
displacement: 896
stamp: void*
stride: S1
=== Inputs ===
base: j91 
index: - 
=== Succesors ===
=== Usages ===
j434 j445 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j91 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j434 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v458 
lastLocationAccess: - 
=== Succesors ===
next: a435 
=== Usages ===
v459 
=== Predecessor ===
v457 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v458 lastLocationAccess: - #next: a435  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j434 
index: - 
=== Succesors ===
=== Usages ===
a435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j434 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a435 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v459 
lastLocationAccess: - 
=== Succesors ===
next: i247 
=== Usages ===
v109 a319 v425 
=== Predecessor ===
j434 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v459 lastLocationAccess: - #next: i247  <|@  <|@
f <@~|@floating>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a433 
=== Succesors ===
=== Usages ===
i247 i315 v316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a433  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v212 v194 v76 v318 v318 v318 i247 v101 v117 ?211 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 4]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 ?207 v317 ?395 v318 i247 i116 ?149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i247 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.compareAndSetInt(Object, long, int, int) [bci: -1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 7]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v464 
lastLocationAccess: - 
expectedValue: i51 
newValue: i41 
stateAfter: - 
=== Succesors ===
next: v104 
=== Usages ===
v101 
=== Predecessor ===
a435 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v464 lastLocationAccess: - expectedValue: i51 newValue: i41 stateAfter: - #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i247 
y: i51 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i247 y: i51  <|@  <|@
f <@~|@floating>@ <|@
tid a244 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a433 
=== Succesors ===
=== Usages ===
v425 ?122 v317 ?74 ?395 v318 ?115 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a433  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a433 
=== Succesors ===
=== Usages ===
a436 v320 v423 v425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a433  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 11
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(byte[], int, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
sourceFile: PrintStream.java
sourceLine: 621
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid a236 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:620) [bci: 1]
op: Uncompress
stamp: a# jdk.internal.misc.InternalLock
=== Inputs ===
value: a431 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a431  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
sourceFile: InternalLock.java
sourceLine: 74
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?16 
values: a236 
=== Succesors ===
=== Usages ===
?124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?16 values: a236  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 322
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?24 
=== Succesors ===
=== Usages ===
?74 ?88 ?122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?24  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.13475912048564476
stamp: void
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v102 
=== Usages ===
=== Predecessor ===
i247 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v103 #falseSuccessor: v102  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 20]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a436 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a436 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v477 
lastLocationAccess: - 
=== Succesors ===
next: v112 
=== Usages ===
a314 
=== Predecessor ===
v103 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v477 lastLocationAccess: - #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid a314 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a436 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a436  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a314 
y: a435 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a314 y: a435  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.9997028739455198
stamp: void
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v110 
=== Usages ===
=== Predecessor ===
a436 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v111 #falseSuccessor: v110  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 28]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i315 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i315 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v464 
lastLocationAccess: - 
=== Succesors ===
next: v394 
=== Usages ===
i116 ?115 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v464 lastLocationAccess: - #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 33]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: i32
=== Inputs ===
x: i315 
y: i41 
=== Succesors ===
=== Usages ===
v117 v316 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i315 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i116 
y: i51 
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i116 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v393 
=== Usages ===
=== Predecessor ===
i315 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v392 #falseSuccessor: v393  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v391  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 152
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?124 
values: a244 
=== Succesors ===
=== Usages ===
?115 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?124 values: a244  <|@  <|@
tid ?115 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<ReentrantLock$NonfairSync.initialTryLock()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
sourceFile: ReentrantLock.java
sourceLine: 229
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: i315 a244 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: i315 a244  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xbb20e35b]: UnreachedCode@6[HotSpotMethod<ReentrantLock$NonfairSync.initialTryLock()>, 39]}
stamp: void
=== Inputs ===
stateBefore: ?115 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?115  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 49]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 51]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v464 
lastLocationAccess: - 
value: i116 
stateAfter: - 
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v464 lastLocationAccess: - value: i116 stateAfter: - #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 4]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v316 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:235) [bci: 56]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i73 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i73  <|@  <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>
=== Inputs ===
arguments: a244 i41 
=== Succesors ===
=== Usages ===
i73 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a244 i41  <|@  <|@
tid ?74 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
sourceFile: ReentrantLock.java
sourceLine: 153
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?124 
values: a244 
=== Succesors ===
=== Usages ===
?395 ?396 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?124 values: a244  <|@  <|@
tid ?395 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 989
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?74 
values: a244 i41 
=== Succesors ===
=== Usages ===
i73 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?74 values: a244 i41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#ReentrantLock$NonfairSync.tryAcquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v317 
stateDuring: ?395 
=== Succesors ===
next: v79 
=== Usages ===
v76 
=== Predecessor ===
v110 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v317 stateDuring: ?395 #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i73 
y: i51 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i73 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.7320887991927346
stamp: void
=== Inputs ===
condition: v76 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v77 
=== Usages ===
=== Predecessor ===
i73 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v76 #trueSuccessor: v78 #falseSuccessor: v77  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 8]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i83 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i83  <|@  <|@
f <@~|@floating>@ <|@
tid a80 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j81 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 14]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;, resolved>, UnresolvedJavaType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<long>]
stamp: void
targetMethod: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>
=== Inputs ===
arguments: a244 a80 i41 i51 i51 i51 j81 
=== Succesors ===
=== Usages ===
i83 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a244 a80 i41 i51 i51 i51 j81  <|@  <|@
tid ?396 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 990
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?74 
=== Succesors ===
=== Usages ===
i83 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?74  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractQueuedSynchronizer.acquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v318 
stateDuring: ?396 
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v318 stateDuring: ?396 #next: v90  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
i83 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v87  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v77 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 13]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
precise: true
stamp: void
=== Inputs ===
address: v477 
value: - 
stateBefore: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v477 value: - stateBefore: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid a319 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
op: Compress
stamp: n! java.lang.Thread
=== Inputs ===
value: a435 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v477 
lastLocationAccess: - 
value: a319 
stateAfter: - 
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v477 lastLocationAccess: - value: a319 stateAfter: - #next: v425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
precise: false
stamp: void
=== Inputs ===
address: v477 
value: a435 
object: a244 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v477 value: a435 object: a244 #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v425 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v85 v87 v90 v123 
=== Succesors ===
next: a437 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v85 v87 v90 v123 #next: a437  <|@  <|@
f <@~|@floating>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a437 a440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a437 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.io.OutputStream
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: FilterOutputStream.out
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.ensureOpen(PrintStream.java:435) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:642) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: n java.io.OutputStream
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v465 
lastLocationAccess: - 
=== Succesors ===
next: v438 
=== Usages ===
a250 v478 
=== Predecessor ===
v86 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v465 lastLocationAccess: - #next: v438  <|@  <|@
tid ?88 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: return
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 154
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?124 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?124  <|@  <|@
f <@~|@floating>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a437 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-64523|0xffffffffffff03f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?88 
guard: - 
address: v478 
lastLocationAccess: - 
=== Succesors ===
next: v257 
=== Usages ===
v429 
=== Predecessor ===
a437 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?88 guard: - address: v478 lastLocationAccess: - #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v438 
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
displacement: 512
stamp: void*
stride: S1
=== Inputs ===
base: v429 
index: - 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v466 
lastLocationAccess: - 
=== Succesors ===
next: j260 
=== Usages ===
v467 v261 
=== Predecessor ===
v438 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v466 lastLocationAccess: - #next: j260  <|@  <|@
f <@~|@floating>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v257 
index: - 
=== Succesors ===
=== Usages ===
j260 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v257 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j260 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v467 
lastLocationAccess: - 
=== Succesors ===
next: v127 
=== Usages ===
v261 
=== Predecessor ===
v257 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v467 lastLocationAccess: - #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid a250 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.ensureOpen(PrintStream.java:435) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:642) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
op: Uncompress
stamp: a java.io.OutputStream
=== Inputs ===
value: a437 
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a437  <|@  <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/OutputStream;, resolved>, UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<OutputStream.write(byte[], int, int)>
=== Inputs ===
computedAddress: j260 
metaspaceMethod: v257 
arguments: a250 a2 i3 i4 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j260 metaspaceMethod: v257 arguments: a250 a2 i3 i4  <|@  <|@
tid ?146 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(byte[], int, int)>
localsSize: 6
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 623
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?128 ?398 ?141 ?397 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?397 <|@
d <@d|@=== Debug Properties ===
bci: 11
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(byte[], int, int)>
localsSize: 4
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 643
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?146 
values: a1 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?146 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
bci: 11
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
polymorphic: true
stamp: void
targetMethod: Indirect#OutputStream.write
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v261 
stateDuring: ?397 
=== Succesors ===
next: i439 
=== Usages ===
=== Predecessor ===
j260 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v261 stateDuring: ?397 #next: i439  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
displacement: 13
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i439 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.autoFlush
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 15]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v468 
lastLocationAccess: - 
=== Succesors ===
next: v133 
=== Usages ===
v325 
=== Predecessor ===
v127 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v468 lastLocationAccess: - #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 18]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 18]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i439 
y: i324 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i439 y: i324  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 18]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
profileData: PROFILED designatedSuccessorProbability: 0.9998969407614273
stamp: void
=== Inputs ===
condition: v325 
=== Succesors ===
trueSuccessor: v132 
falseSuccessor: v131 
=== Usages ===
=== Predecessor ===
i439 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v325 #trueSuccessor: v132 #falseSuccessor: v131  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v138 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v138  <|@  <|@
f <@*|@fixed>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
v132 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 21]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a440 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a440 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.io.OutputStream
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: FilterOutputStream.out
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 22]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: n java.io.OutputStream
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v465 
lastLocationAccess: - 
=== Succesors ===
next: v451 
=== Usages ===
a307 v479 
=== Predecessor ===
v131 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v465 lastLocationAccess: - #next: v451  <|@  <|@
tid ?128 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: aload_0
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(byte[], int, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
sourceFile: PrintStream.java
sourceLine: 644
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?146 
values: a1 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?146 values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a440 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?128 
object: v479 
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
a440 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?128 object: v479 #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid a307 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 22]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
op: Uncompress
stamp: a java.io.OutputStream
=== Inputs ===
value: a440 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a440  <|@  <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/OutputStream;, resolved>]
stamp: void
targetMethod: HotSpotMethod<OutputStream.flush()>
=== Inputs ===
arguments: a307 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a307  <|@  <|@
tid ?398 <|@
d <@d|@=== Debug Properties ===
bci: 25
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(byte[], int, int)>
localsSize: 4
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 645
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?146 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
bci: 25
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
polymorphic: false
stamp: void
targetMethod: Direct#OutputStream.flush
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v311 
stateDuring: ?398 
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v311 stateDuring: ?398 #next: v140  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
v136 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v138 v140 
=== Succesors ===
next: a441 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v138 v140 #next: a441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a441 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# jdk.internal.misc.InternalLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:625) [bci: 22]
stamp: n# jdk.internal.misc.InternalLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v461 
lastLocationAccess: - 
=== Succesors ===
next: a442 
=== Usages ===
a267 v469 
=== Predecessor ===
v139 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v461 lastLocationAccess: - #next: a442  <|@  <|@
tid ?141 <|@
d <@d|@=== Debug Properties ===
bci: 28
bytecode: return
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(byte[], int, int)>
localsSize: 4
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 646
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?146 
=== Succesors ===
=== Usages ===
i278 a442 a443 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?146  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a441 
=== Succesors ===
=== Usages ===
a442 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a442 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: int[-68619|0xfffffffffffef3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?141 
guard: - 
address: v469 
lastLocationAccess: - 
=== Succesors ===
next: a443 
=== Usages ===
a271 v470 
=== Predecessor ===
a441 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?141 guard: - address: v469 lastLocationAccess: - #next: a443  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a442 
=== Succesors ===
=== Usages ===
a443 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a443 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-69643|0xfffffffffffeeff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?141 
guard: - 
address: v470 
lastLocationAccess: - 
=== Succesors ===
next: i278 
=== Usages ===
a275 v471 v472 v473 
=== Predecessor ===
a442 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?141 guard: - address: v470 lastLocationAccess: - #next: i278  <|@  <|@
f <@~|@floating>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a443 
=== Succesors ===
=== Usages ===
i278 v282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i278 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-70667|0xfffffffffffeebf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?141 
guard: - 
address: v471 
lastLocationAccess: - 
=== Succesors ===
next: a444 
=== Usages ===
i174 v157 ?149 
=== Predecessor ===
a443 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?141 guard: - address: v471 lastLocationAccess: - #next: a444  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a443 
=== Succesors ===
=== Usages ===
a444 v305 v422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a444 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v472 
lastLocationAccess: - 
=== Succesors ===
next: j445 
=== Usages ===
a281 
=== Predecessor ===
i278 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v472 lastLocationAccess: - #next: j445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j445 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v458 
lastLocationAccess: - 
=== Succesors ===
next: a446 
=== Usages ===
v460 
=== Predecessor ===
a444 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v458 lastLocationAccess: - #next: a446  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
a446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a446 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v460 
lastLocationAccess: - 
=== Succesors ===
next: v389 
=== Usages ===
v155 
=== Predecessor ===
j445 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v460 lastLocationAccess: - #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid a281 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a444 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a444  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a281 
y: a446 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a281 y: a446  <|@  <|@
f <@~|@floating>@ <|@
tid a271 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
op: Uncompress
stamp: a java.util.concurrent.locks.ReentrantLock
=== Inputs ===
value: a442 
=== Succesors ===
=== Usages ===
?49 ?58 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a442  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
bci: 25
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(byte[], int, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
sourceFile: PrintStream.java
sourceLine: 625
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?42 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid a267 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:625) [bci: 22]
op: Uncompress
stamp: a# jdk.internal.misc.InternalLock
=== Inputs ===
value: a441 
=== Succesors ===
=== Usages ===
?42 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a441  <|@  <|@
tid ?42 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
sourceFile: InternalLock.java
sourceLine: 78
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?35 
values: a267 
=== Succesors ===
=== Usages ===
?58 ?49 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?35 values: a267  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v155 
=== Succesors ===
trueSuccessor: v387 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
a446 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v155 #trueSuccessor: v387 #falseSuccessor: v388  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 25]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 26]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i278 
y: i41 
=== Succesors ===
=== Usages ===
v55 v161 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i278 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:177) [bci: 36]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.8652302759969847
stamp: void
=== Inputs ===
condition: v157 
=== Succesors ===
trueSuccessor: v160 
falseSuccessor: v159 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v157 #trueSuccessor: v160 #falseSuccessor: v159  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 39]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
precise: true
stamp: void
=== Inputs ===
address: v472 
value: - 
stateBefore: - 
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v472 value: - stateBefore: - #next: v305  <|@  <|@
f <@~|@floating>@ <|@
tid a329 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v472 
lastLocationAccess: - 
value: a329 
stateAfter: - 
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v472 lastLocationAccess: - value: a329 stateAfter: - #next: v167  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
v305 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v165  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
v159 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v165 v167 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v165 v167 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i174 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: i32
=== Inputs ===
x: i278 
y: i173 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i278 y: i173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 46]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v471 
lastLocationAccess: - 
value: i174 
stateAfter: - 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v471 lastLocationAccess: - value: i174 stateAfter: - #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.8620985379543946
stamp: void
=== Inputs ===
condition: v157 
=== Succesors ===
trueSuccessor: v53 
falseSuccessor: v54 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v157 #trueSuccessor: v53 #falseSuccessor: v54  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 8]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: a285 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a285  <|@  <|@
f <@~|@floating>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a443 
=== Succesors ===
=== Usages ===
a285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a285 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v473 
lastLocationAccess: - 
=== Succesors ===
next: v180 
=== Usages ===
v474 v420 
=== Predecessor ===
v53 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v473 lastLocationAccess: - #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a285 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a285  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.9993015402267503
stamp: void
=== Inputs ===
condition: v420 
=== Succesors ===
trueSuccessor: v179 
falseSuccessor: v178 
=== Usages ===
=== Predecessor ===
a285 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v420 #trueSuccessor: v179 #falseSuccessor: v178  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v179 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: a290 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a290  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a285 
=== Succesors ===
=== Usages ===
a290 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a290 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.next
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v474 
lastLocationAccess: - 
=== Succesors ===
next: v190 
=== Usages ===
a291 v421 v475 v476 
=== Predecessor ===
v178 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v474 lastLocationAccess: - #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a290 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a290  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.899215972285532
stamp: void
=== Inputs ===
condition: v421 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v185 
=== Usages ===
=== Predecessor ===
a290 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v421 #trueSuccessor: v189 #falseSuccessor: v185  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v231  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v189 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 13]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: i295 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i295  <|@  <|@
f <@~|@floating>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a290 
=== Succesors ===
=== Usages ===
i297 i298 i295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i295 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v475 
lastLocationAccess: - 
=== Succesors ===
next: v198 
=== Usages ===
v194 
=== Predecessor ===
v185 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v475 lastLocationAccess: - #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i295 
y: i51 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i295 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.89280868385346
stamp: void
=== Inputs ===
condition: v194 
=== Succesors ===
trueSuccessor: v197 
falseSuccessor: v195 
=== Usages ===
=== Predecessor ===
i295 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v194 #trueSuccessor: v197 #falseSuccessor: v195  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v230  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v197 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 20]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?42 
values: a271 
=== Succesors ===
=== Usages ===
?228 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?42 values: a271  <|@  <|@
tid ?228 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1060
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?58 
=== Succesors ===
=== Usages ===
?204 ?399 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?58  <|@  <|@
f <@~|@floating>@ <|@
tid a291 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
op: Uncompress
stamp: a java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
=== Inputs ===
value: a290 
=== Succesors ===
=== Usages ===
?204 ?211 ?207 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a290  <|@  <|@
tid ?204 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?228 
values: - a291 
=== Succesors ===
=== Usages ===
?207 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?228 values: - a291  <|@  <|@
tid ?207 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer$Node.getAndUnsetStatus(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 481
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?204 
values: a291 i41 
=== Succesors ===
=== Usages ===
?211 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?204 values: a291 i41  <|@  <|@
f <@~|@floating>@ <|@
tid a201 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
rawvalue: Unsafe@679697080
stableDimension: 0
stamp: a!# jdk.internal.misc.Unsafe
stampKind: a java.lang.Object
value: Object[Unsafe@679697080]
=== Inputs ===
=== Succesors ===
=== Usages ===
?211 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j202 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
rawvalue: 12
stableDimension: 0
stamp: i64 [12]
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
?211 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 9]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
?211 i209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
v195 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 39
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v205 
=== Succesors ===
next: i297 
=== Usages ===
v213 v217 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v205 #next: i297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i297 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.getIntVolatile(Object, long) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 3]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v475 
lastLocationAccess: - 
=== Succesors ===
next: i298 
=== Usages ===
i209 i298 ?211 
=== Predecessor ===
v206 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v475 lastLocationAccess: - #next: i298  <|@  <|@
f <@~|@floating>@ <|@
tid i209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i297 
y: i203 
=== Succesors ===
=== Usages ===
i298 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i297 y: i203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i298 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v475 
lastLocationAccess: - 
expectedValue: i297 
newValue: i209 
stateAfter: - 
=== Succesors ===
next: v219 
=== Usages ===
v212 
=== Predecessor ===
i297 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v475 lastLocationAccess: - expectedValue: i297 newValue: i209 stateAfter: - #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i298 
y: i51 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i298 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v212 
=== Succesors ===
trueSuccessor: v218 
falseSuccessor: v213 
=== Usages ===
=== Predecessor ===
i298 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v212 #trueSuccessor: v218 #falseSuccessor: v213  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
tid ?211 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Unsafe.getAndBitwiseAndInt(Object, long, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
sourceFile: Unsafe.java
sourceLine: 3233
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?207 
values: i51 a201 a291 j202 - i203 i297 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?207 values: i51 a201 a291 j202 - i203 i297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
stateBefore: ?211 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?211 #next: v217  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
loopBegin: v206 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v206  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3235) [bci: 24]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v206 
=== Succesors ===
next: a447 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v206 #next: a447  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a290 
=== Succesors ===
=== Usages ===
a447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a447 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.waiter
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v476 
lastLocationAccess: - 
=== Succesors ===
next: v222 
=== Usages ===
a302 
=== Predecessor ===
v213 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v476 lastLocationAccess: - #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid a302 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a447 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a447  <|@  <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Thread;>]
stamp: void
targetMethod: HotSpotMethod<LockSupport.unpark(Thread)>
=== Inputs ===
arguments: a302 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a302  <|@  <|@
tid ?399 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 645
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?228 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
bci: 30
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
polymorphic: false
stamp: void
targetMethod: Direct#LockSupport.unpark
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v303 
stateDuring: ?399 
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
a447 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v303 stateDuring: ?399 #next: v229  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v222 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1063) [bci: 17]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v54 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v64 v66 v229 v230 v231 
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v64 v66 v229 v230 v231 #next: v68  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:639) [bci: 93]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
tid ?49 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?42 
values: a271 
=== Succesors ===
=== Usages ===
?175 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?42 values: a271  <|@  <|@
f <@~|@floating>@ <|@
tid a275 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a443 
=== Succesors ===
=== Usages ===
?175 ?149 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a443  <|@  <|@
tid ?175 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1059
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?49 
values: a275 
=== Succesors ===
=== Usages ===
?149 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?49 values: a275  <|@  <|@
tid ?149 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: iload_1
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.tryRelease(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
sourceFile: ReentrantLock.java
sourceLine: 173
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?175 
values: i278 a275 i41 
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?175 values: i278 a275 i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
reason: UnreachedCode
speculation: {0x0000000000003c14[index: 480, len: 20, hash: 0xadceab53]: UnreachedCode@6[HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>, 17]}
stamp: void
=== Inputs ===
stateBefore: ?149 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?149  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV input: [v25|QWORD + 512] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v34|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|QWORD[.], y: [v37|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v34|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v41|QWORD, temp2: v42|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = DEC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v44|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v30|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v45|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV input: [v45|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = AND x: v47|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v45|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v48|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v46|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v47|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v46|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v46|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v45|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v35|DWORD 
locals: v52|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v52|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a431 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a431  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.io.PrintStream
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v461 v468 ?35 ?16 v465 ?146 ?128 ?397 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a431 a441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a431 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# jdk.internal.misc.InternalLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:620) [bci: 1]
stamp: n# jdk.internal.misc.InternalLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v461 
lastLocationAccess: - 
=== Succesors ===
next: a432 
=== Usages ===
a236 v462 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v461 lastLocationAccess: - #next: a432  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v261 ?16 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v261 ?16 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v261 ?16 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<PrintStream.write(byte[], int, int)>
localsSize: 6
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 620
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v457 a432 a433 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
result [v4|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a431 
=== Succesors ===
=== Usages ===
a432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a432 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: int[-60683|0xffffffffffff12f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v462 
lastLocationAccess: - 
=== Succesors ===
next: a433 
=== Usages ===
v463 
=== Predecessor ===
a431 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v462 lastLocationAccess: - #next: a433  <|@  <|@
f <@~|@floating>@ <|@
tid v463 <|@
result [v5|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a432 
=== Succesors ===
=== Usages ===
a433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a433 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-61707|0xffffffffffff0ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v463 
lastLocationAccess: - 
=== Succesors ===
next: v457 
=== Usages ===
a244 v464 v477 v480 
=== Predecessor ===
a432 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v463 lastLocationAccess: - #next: v457  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
result [v6|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a433 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?5 
object: v480 
=== Succesors ===
next: j434 
=== Usages ===
=== Predecessor ===
a433 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: v480 #next: j434  <|@  <|@
f <@~|@floating>@ <|@
tid j91 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@jdk.graal.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v458 <|@
result [r15|QWORD + 896] <|@
d <@d|@=== Debug Properties ===
displacement: 896
stamp: void*
stride: S1
=== Inputs ===
base: j91 
index: - 
=== Succesors ===
=== Usages ===
j434 j445 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j91 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j434 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v458 
lastLocationAccess: - 
=== Succesors ===
next: a435 
=== Usages ===
v459 
=== Predecessor ===
v457 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v458 lastLocationAccess: - #next: a435  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
result [v7|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j434 
index: - 
=== Succesors ===
=== Usages ===
a435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j434 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a435 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v459 
lastLocationAccess: - 
=== Succesors ===
next: i247 
=== Usages ===
v109 a319 v425 
=== Predecessor ===
j434 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v459 lastLocationAccess: - #next: i247  <|@  <|@
f <@~|@floating>@ <|@
tid v464 <|@
result [v6|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a433 
=== Succesors ===
=== Usages ===
i247 i315 v316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a433  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v212 v194 v76 v318 v318 v318 i247 v101 v117 ?211 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 4]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 ?207 v317 ?395 v318 i247 i116 ?149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i247 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.compareAndSetInt(Object, long, int, int) [bci: -1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 7]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v464 
lastLocationAccess: - 
expectedValue: i51 
newValue: i41 
stateAfter: - 
=== Succesors ===
next: v104 
=== Usages ===
v101 
=== Predecessor ===
a435 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v464 lastLocationAccess: - expectedValue: i51 newValue: i41 stateAfter: - #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i247 
y: i51 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i247 y: i51  <|@  <|@
f <@~|@floating>@ <|@
tid a244 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a433 
=== Succesors ===
=== Usages ===
v425 ?122 v317 ?74 ?395 v318 ?115 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a433  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
result [v6|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a433 
=== Succesors ===
=== Usages ===
a436 v320 v423 v425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a433  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 11
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(byte[], int, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
sourceFile: PrintStream.java
sourceLine: 621
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid a236 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:620) [bci: 1]
op: Uncompress
stamp: a# jdk.internal.misc.InternalLock
=== Inputs ===
value: a431 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a431  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
sourceFile: InternalLock.java
sourceLine: 74
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?16 
values: a236 
=== Succesors ===
=== Usages ===
?124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?16 values: a236  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 322
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?24 
=== Succesors ===
=== Usages ===
?74 ?88 ?122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?24  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.13475912048564476
stamp: void
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v102 
=== Usages ===
=== Predecessor ===
i247 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v103 #falseSuccessor: v102  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 20]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a436 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a436 <|@
result v12|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v477 
lastLocationAccess: - 
=== Succesors ===
next: v112 
=== Usages ===
a314 
=== Predecessor ===
v103 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v477 lastLocationAccess: - #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid a314 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a436 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a436  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a314 
y: a435 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a314 y: a435  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.9997028739455198
stamp: void
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v110 
=== Usages ===
=== Predecessor ===
a436 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v111 #falseSuccessor: v110  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 28]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i315 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i315 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v464 
lastLocationAccess: - 
=== Succesors ===
next: v394 
=== Usages ===
i116 ?115 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v464 lastLocationAccess: - #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 33]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: i32
=== Inputs ===
x: i315 
y: i41 
=== Succesors ===
=== Usages ===
v117 v316 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i315 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i116 
y: i51 
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i116 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v393 
=== Usages ===
=== Predecessor ===
i315 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v392 #falseSuccessor: v393  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v391  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 152
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?124 
values: a244 
=== Succesors ===
=== Usages ===
?115 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?124 values: a244  <|@  <|@
tid ?115 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<ReentrantLock$NonfairSync.initialTryLock()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
sourceFile: ReentrantLock.java
sourceLine: 229
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: i315 a244 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: i315 a244  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xbb20e35b]: UnreachedCode@6[HotSpotMethod<ReentrantLock$NonfairSync.initialTryLock()>, 39]}
stamp: void
=== Inputs ===
stateBefore: ?115 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?115  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 49]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 51]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v464 
lastLocationAccess: - 
value: i116 
stateAfter: - 
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v464 lastLocationAccess: - value: i116 stateAfter: - #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 4]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v316 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:235) [bci: 56]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i73 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i73  <|@  <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>
=== Inputs ===
arguments: a244 i41 
=== Succesors ===
=== Usages ===
i73 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a244 i41  <|@  <|@
tid ?74 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
sourceFile: ReentrantLock.java
sourceLine: 153
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?124 
values: a244 
=== Succesors ===
=== Usages ===
?395 ?396 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?124 values: a244  <|@  <|@
tid ?395 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 989
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?74 
values: a244 i41 
=== Succesors ===
=== Usages ===
i73 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?74 values: a244 i41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i73 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#ReentrantLock$NonfairSync.tryAcquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v317 
stateDuring: ?395 
=== Succesors ===
next: v79 
=== Usages ===
v76 
=== Predecessor ===
v110 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v317 stateDuring: ?395 #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i73 
y: i51 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i73 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.7320887991927346
stamp: void
=== Inputs ===
condition: v76 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v77 
=== Usages ===
=== Predecessor ===
i73 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v76 #trueSuccessor: v78 #falseSuccessor: v77  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 8]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i83 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i83  <|@  <|@
f <@~|@floating>@ <|@
tid a80 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j81 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 14]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;, resolved>, UnresolvedJavaType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<long>]
stamp: void
targetMethod: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>
=== Inputs ===
arguments: a244 a80 i41 i51 i51 i51 j81 
=== Succesors ===
=== Usages ===
i83 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a244 a80 i41 i51 i51 i51 j81  <|@  <|@
tid ?396 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 990
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?74 
=== Succesors ===
=== Usages ===
i83 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?74  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i83 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractQueuedSynchronizer.acquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v318 
stateDuring: ?396 
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v318 stateDuring: ?396 #next: v90  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
i83 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v87  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v77 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 13]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
precise: true
stamp: void
=== Inputs ===
address: v477 
value: - 
stateBefore: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v477 value: - stateBefore: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid a319 <|@
result v20|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
op: Compress
stamp: n! java.lang.Thread
=== Inputs ===
value: a435 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v477 
lastLocationAccess: - 
value: a319 
stateAfter: - 
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v477 lastLocationAccess: - value: a319 stateAfter: - #next: v425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
precise: false
stamp: void
=== Inputs ===
address: v477 
value: a435 
object: a244 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v477 value: a435 object: a244 #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v425 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v85 v87 v90 v123 
=== Succesors ===
next: a437 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v85 v87 v90 v123 #next: a437  <|@  <|@
f <@~|@floating>@ <|@
tid v465 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a437 a440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a437 <|@
result v23|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.io.OutputStream
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: FilterOutputStream.out
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.ensureOpen(PrintStream.java:435) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:642) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: n java.io.OutputStream
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v465 
lastLocationAccess: - 
=== Succesors ===
next: v438 
=== Usages ===
a250 v478 
=== Predecessor ===
v86 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v465 lastLocationAccess: - #next: v438  <|@  <|@
tid ?88 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: return
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 154
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?124 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?124  <|@  <|@
f <@~|@floating>@ <|@
tid v478 <|@
result [v23|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a437 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v438 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-64523|0xffffffffffff03f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?88 
guard: - 
address: v478 
lastLocationAccess: - 
=== Succesors ===
next: v257 
=== Usages ===
v429 
=== Predecessor ===
a437 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?88 guard: - address: v478 lastLocationAccess: - #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v438 
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
result [v25|QWORD + 512] <|@
d <@d|@=== Debug Properties ===
displacement: 512
stamp: void*
stride: S1
=== Inputs ===
base: v429 
index: - 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v257 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v466 
lastLocationAccess: - 
=== Succesors ===
next: j260 
=== Usages ===
v467 v261 
=== Predecessor ===
v438 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v466 lastLocationAccess: - #next: j260  <|@  <|@
f <@~|@floating>@ <|@
tid v467 <|@
result [v27|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v257 
index: - 
=== Succesors ===
=== Usages ===
j260 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v257 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j260 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v467 
lastLocationAccess: - 
=== Succesors ===
next: v127 
=== Usages ===
v261 
=== Predecessor ===
v257 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v467 lastLocationAccess: - #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid a250 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.ensureOpen(PrintStream.java:435) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:642) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
op: Uncompress
stamp: a java.io.OutputStream
=== Inputs ===
value: a437 
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a437  <|@  <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/OutputStream;, resolved>, UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<OutputStream.write(byte[], int, int)>
=== Inputs ===
computedAddress: j260 
metaspaceMethod: v257 
arguments: a250 a2 i3 i4 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j260 metaspaceMethod: v257 arguments: a250 a2 i3 i4  <|@  <|@
tid ?146 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(byte[], int, int)>
localsSize: 6
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 623
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?128 ?398 ?141 ?397 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?397 <|@
d <@d|@=== Debug Properties ===
bci: 11
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(byte[], int, int)>
localsSize: 4
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 643
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?146 
values: a1 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?146 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
bci: 11
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
polymorphic: true
stamp: void
targetMethod: Indirect#OutputStream.write
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v261 
stateDuring: ?397 
=== Succesors ===
next: i439 
=== Usages ===
=== Predecessor ===
j260 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v261 stateDuring: ?397 #next: i439  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
result [v0|QWORD[.] + 13] <|@
d <@d|@=== Debug Properties ===
displacement: 13
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i439 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.autoFlush
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 15]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v468 
lastLocationAccess: - 
=== Succesors ===
next: v133 
=== Usages ===
v325 
=== Predecessor ===
v127 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v468 lastLocationAccess: - #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 18]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 18]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i439 
y: i324 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i439 y: i324  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 18]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
profileData: PROFILED designatedSuccessorProbability: 0.9998969407614273
stamp: void
=== Inputs ===
condition: v325 
=== Succesors ===
trueSuccessor: v132 
falseSuccessor: v131 
=== Usages ===
=== Predecessor ===
i439 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v325 #trueSuccessor: v132 #falseSuccessor: v131  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV input: [v25|QWORD + 512] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v138 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v138  <|@  <|@
f <@*|@fixed>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
v132 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 21]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a440 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a440 <|@
result v30|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.io.OutputStream
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: FilterOutputStream.out
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 22]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: n java.io.OutputStream
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v465 
lastLocationAccess: - 
=== Succesors ===
next: v451 
=== Usages ===
a307 v479 
=== Predecessor ===
v131 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v465 lastLocationAccess: - #next: v451  <|@  <|@
tid ?128 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: aload_0
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(byte[], int, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
sourceFile: PrintStream.java
sourceLine: 644
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?146 
values: a1 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?146 values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
result [v30|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a440 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?128 
object: v479 
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
a440 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?128 object: v479 #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid a307 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 22]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
op: Uncompress
stamp: a java.io.OutputStream
=== Inputs ===
value: a440 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a440  <|@  <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/OutputStream;, resolved>]
stamp: void
targetMethod: HotSpotMethod<OutputStream.flush()>
=== Inputs ===
arguments: a307 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a307  <|@  <|@
tid ?398 <|@
d <@d|@=== Debug Properties ===
bci: 25
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(byte[], int, int)>
localsSize: 4
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 645
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?146 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
bci: 25
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
polymorphic: false
stamp: void
targetMethod: Direct#OutputStream.flush
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v311 
stateDuring: ?398 
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v311 stateDuring: ?398 #next: v140  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
v136 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v30|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
at java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v138 v140 
=== Succesors ===
next: a441 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v138 v140 #next: a441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a441 <|@
result v32|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# jdk.internal.misc.InternalLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:625) [bci: 22]
stamp: n# jdk.internal.misc.InternalLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v461 
lastLocationAccess: - 
=== Succesors ===
next: a442 
=== Usages ===
a267 v469 
=== Predecessor ===
v139 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v461 lastLocationAccess: - #next: a442  <|@  <|@
tid ?141 <|@
d <@d|@=== Debug Properties ===
bci: 28
bytecode: return
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(byte[], int, int)>
localsSize: 4
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 646
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?146 
=== Succesors ===
=== Usages ===
i278 a442 a443 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?146  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
result [v32|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a441 
=== Succesors ===
=== Usages ===
a442 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a442 <|@
result v33|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: int[-68619|0xfffffffffffef3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?141 
guard: - 
address: v469 
lastLocationAccess: - 
=== Succesors ===
next: a443 
=== Usages ===
a271 v470 
=== Predecessor ===
a441 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?141 guard: - address: v469 lastLocationAccess: - #next: a443  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
result [v33|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a442 
=== Succesors ===
=== Usages ===
a443 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a443 <|@
result v34|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-69643|0xfffffffffffeeff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?141 
guard: - 
address: v470 
lastLocationAccess: - 
=== Succesors ===
next: i278 
=== Usages ===
a275 v471 v472 v473 
=== Predecessor ===
a442 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?141 guard: - address: v470 lastLocationAccess: - #next: i278  <|@  <|@
f <@~|@floating>@ <|@
tid v471 <|@
result [v34|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a443 
=== Succesors ===
=== Usages ===
i278 v282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i278 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-70667|0xfffffffffffeebf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?141 
guard: - 
address: v471 
lastLocationAccess: - 
=== Succesors ===
next: a444 
=== Usages ===
i174 v157 ?149 
=== Predecessor ===
a443 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?141 guard: - address: v471 lastLocationAccess: - #next: a444  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
result [v34|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a443 
=== Succesors ===
=== Usages ===
a444 v305 v422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a444 <|@
result v36|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v472 
lastLocationAccess: - 
=== Succesors ===
next: j445 
=== Usages ===
a281 
=== Predecessor ===
i278 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v472 lastLocationAccess: - #next: j445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j445 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v458 
lastLocationAccess: - 
=== Succesors ===
next: a446 
=== Usages ===
v460 
=== Predecessor ===
a444 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v458 lastLocationAccess: - #next: a446  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
result [v37|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
a446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a446 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v460 
lastLocationAccess: - 
=== Succesors ===
next: v389 
=== Usages ===
v155 
=== Predecessor ===
j445 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v460 lastLocationAccess: - #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid a281 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a444 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a444  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a281 
y: a446 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a281 y: a446  <|@  <|@
f <@~|@floating>@ <|@
tid a271 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
op: Uncompress
stamp: a java.util.concurrent.locks.ReentrantLock
=== Inputs ===
value: a442 
=== Succesors ===
=== Usages ===
?49 ?58 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a442  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
bci: 25
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(byte[], int, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
sourceFile: PrintStream.java
sourceLine: 625
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?42 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid a267 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:625) [bci: 22]
op: Uncompress
stamp: a# jdk.internal.misc.InternalLock
=== Inputs ===
value: a441 
=== Succesors ===
=== Usages ===
?42 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a441  <|@  <|@
tid ?42 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
sourceFile: InternalLock.java
sourceLine: 78
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?35 
values: a267 
=== Succesors ===
=== Usages ===
?58 ?49 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?35 values: a267  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v155 
=== Succesors ===
trueSuccessor: v387 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
a446 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v155 #trueSuccessor: v387 #falseSuccessor: v388  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v34|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|QWORD[.], y: [v37|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 25]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 26]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i278 
y: i41 
=== Succesors ===
=== Usages ===
v55 v161 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i278 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:177) [bci: 36]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.8652302759969847
stamp: void
=== Inputs ===
condition: v157 
=== Succesors ===
trueSuccessor: v160 
falseSuccessor: v159 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v157 #trueSuccessor: v160 #falseSuccessor: v159  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 39]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
precise: true
stamp: void
=== Inputs ===
address: v472 
value: - 
stateBefore: - 
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v472 value: - stateBefore: - #next: v305  <|@  <|@
f <@~|@floating>@ <|@
tid a329 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v472 
lastLocationAccess: - 
value: a329 
stateAfter: - 
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v472 lastLocationAccess: - value: a329 stateAfter: - #next: v167  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
v305 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v34|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v41|QWORD, temp2: v42|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v165  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
v159 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v165 v167 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v165 v167 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i174 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: i32
=== Inputs ===
x: i278 
y: i173 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i278 y: i173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 46]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v471 
lastLocationAccess: - 
value: i174 
stateAfter: - 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v471 lastLocationAccess: - value: i174 stateAfter: - #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.8620985379543946
stamp: void
=== Inputs ===
condition: v157 
=== Succesors ===
trueSuccessor: v53 
falseSuccessor: v54 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v157 #trueSuccessor: v53 #falseSuccessor: v54  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = DEC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 8]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: a285 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a285  <|@  <|@
f <@~|@floating>@ <|@
tid v473 <|@
result [v34|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a443 
=== Succesors ===
=== Usages ===
a285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a285 <|@
result v44|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v473 
lastLocationAccess: - 
=== Succesors ===
next: v180 
=== Usages ===
v474 v420 
=== Predecessor ===
v53 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v473 lastLocationAccess: - #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a285 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a285  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.9993015402267503
stamp: void
=== Inputs ===
condition: v420 
=== Succesors ===
trueSuccessor: v179 
falseSuccessor: v178 
=== Usages ===
=== Predecessor ===
a285 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v420 #trueSuccessor: v179 #falseSuccessor: v178  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v179 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: a290 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a290  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
result [v44|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a285 
=== Succesors ===
=== Usages ===
a290 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a290 <|@
result v45|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.next
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v474 
lastLocationAccess: - 
=== Succesors ===
next: v190 
=== Usages ===
a291 v421 v475 v476 
=== Predecessor ===
v178 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v474 lastLocationAccess: - #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a290 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a290  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.899215972285532
stamp: void
=== Inputs ===
condition: v421 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v185 
=== Usages ===
=== Predecessor ===
a290 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v421 #trueSuccessor: v189 #falseSuccessor: v185  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v44|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v231  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v189 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 13]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: i295 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i295  <|@  <|@
f <@~|@floating>@ <|@
tid v475 <|@
result [v45|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a290 
=== Succesors ===
=== Usages ===
i297 i298 i295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i295 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v475 
lastLocationAccess: - 
=== Succesors ===
next: v198 
=== Usages ===
v194 
=== Predecessor ===
v185 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v475 lastLocationAccess: - #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i295 
y: i51 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i295 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.89280868385346
stamp: void
=== Inputs ===
condition: v194 
=== Succesors ===
trueSuccessor: v197 
falseSuccessor: v195 
=== Usages ===
=== Predecessor ===
i295 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v194 #trueSuccessor: v197 #falseSuccessor: v195  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v45|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v230  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v197 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 20]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?42 
values: a271 
=== Succesors ===
=== Usages ===
?228 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?42 values: a271  <|@  <|@
tid ?228 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1060
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?58 
=== Succesors ===
=== Usages ===
?204 ?399 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?58  <|@  <|@
f <@~|@floating>@ <|@
tid a291 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
op: Uncompress
stamp: a java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
=== Inputs ===
value: a290 
=== Succesors ===
=== Usages ===
?204 ?211 ?207 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a290  <|@  <|@
tid ?204 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?228 
values: - a291 
=== Succesors ===
=== Usages ===
?207 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?228 values: - a291  <|@  <|@
tid ?207 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer$Node.getAndUnsetStatus(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 481
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?204 
values: a291 i41 
=== Succesors ===
=== Usages ===
?211 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?204 values: a291 i41  <|@  <|@
f <@~|@floating>@ <|@
tid a201 <|@
result Object[Unsafe@679697080] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
rawvalue: Unsafe@679697080
stableDimension: 0
stamp: a!# jdk.internal.misc.Unsafe
stampKind: a java.lang.Object
value: Object[Unsafe@679697080]
=== Inputs ===
=== Succesors ===
=== Usages ===
?211 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j202 <|@
result long[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
rawvalue: 12
stableDimension: 0
stamp: i64 [12]
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
?211 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 9]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
?211 i209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
v195 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 39
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v205 
=== Succesors ===
next: i297 
=== Usages ===
v213 v217 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v205 #next: i297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i297 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.getIntVolatile(Object, long) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 3]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v475 
lastLocationAccess: - 
=== Succesors ===
next: i298 
=== Usages ===
i209 i298 ?211 
=== Predecessor ===
v206 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v475 lastLocationAccess: - #next: i298  <|@  <|@
f <@~|@floating>@ <|@
tid i209 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i297 
y: i203 
=== Succesors ===
=== Usages ===
i298 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i297 y: i203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i298 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v475 
lastLocationAccess: - 
expectedValue: i297 
newValue: i209 
stateAfter: - 
=== Succesors ===
next: v219 
=== Usages ===
v212 
=== Predecessor ===
i297 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v475 lastLocationAccess: - expectedValue: i297 newValue: i209 stateAfter: - #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i298 
y: i51 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i298 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v212 
=== Succesors ===
trueSuccessor: v218 
falseSuccessor: v213 
=== Usages ===
=== Predecessor ===
i298 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v212 #trueSuccessor: v218 #falseSuccessor: v213  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV input: [v45|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = AND x: v47|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v45|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v48|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
tid ?211 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Unsafe.getAndBitwiseAndInt(Object, long, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
sourceFile: Unsafe.java
sourceLine: 3233
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?207 
values: i51 a201 a291 j202 - i203 i297 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?207 values: i51 a201 a291 j202 - i203 i297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
stateBefore: ?211 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?211 #next: v217  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
loopBegin: v206 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v206  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v46|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v47|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v46|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v46|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3235) [bci: 24]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v206 
=== Succesors ===
next: a447 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v206 #next: a447  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
result [v45|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a290 
=== Succesors ===
=== Usages ===
a447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a447 <|@
result v50|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.waiter
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v476 
lastLocationAccess: - 
=== Succesors ===
next: v222 
=== Usages ===
a302 
=== Predecessor ===
v213 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v476 lastLocationAccess: - #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid a302 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a447 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a447  <|@  <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Thread;>]
stamp: void
targetMethod: HotSpotMethod<LockSupport.unpark(Thread)>
=== Inputs ===
arguments: a302 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a302  <|@  <|@
tid ?399 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 645
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?228 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
bci: 30
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
polymorphic: false
stamp: void
targetMethod: Direct#LockSupport.unpark
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v303 
stateDuring: ?399 
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
a447 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v303 stateDuring: ?399 #next: v229  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v222 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v45|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1063) [bci: 17]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v54 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v64 v66 v229 v230 v231 
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v64 v66 v229 v230 v231 #next: v68  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:639) [bci: 93]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
tid ?49 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?42 
values: a271 
=== Succesors ===
=== Usages ===
?175 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?42 values: a271  <|@  <|@
f <@~|@floating>@ <|@
tid a275 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a443 
=== Succesors ===
=== Usages ===
?175 ?149 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a443  <|@  <|@
tid ?175 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1059
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?49 
values: a275 
=== Succesors ===
=== Usages ===
?149 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?49 values: a275  <|@  <|@
tid ?149 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: iload_1
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.tryRelease(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
sourceFile: ReentrantLock.java
sourceLine: 173
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?175 
values: i278 a275 i41 
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?175 values: i278 a275 i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
reason: UnreachedCode
speculation: {0x0000000000003c14[index: 480, len: 20, hash: 0xadceab53]: UnreachedCode@6[HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>, 17]}
stamp: void
=== Inputs ===
stateBefore: ?149 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?149  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v35|DWORD 
locals: v52|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v52|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV input: [v25|QWORD + 512] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v34|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|QWORD[.], y: [v37|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v34|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v41|QWORD, temp2: v42|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = DEC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v44|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v30|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v45|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV input: [v45|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = AND x: v47|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v45|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v48|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v46|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v47|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v46|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v46|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v45|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v35|DWORD 
locals: v52|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v52|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV input: [v25|QWORD + 512] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v34|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|QWORD[.], y: [v37|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v34|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v41|QWORD, temp2: v42|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = DEC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v44|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v30|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v45|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV input: [v45|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = AND x: v47|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v45|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v48|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v46|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v47|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v46|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v46|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v45|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v35|DWORD 
locals: v52|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v52|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV input: [v25|QWORD + 512] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v34|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|QWORD[.], y: [v37|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v34|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v41|QWORD, temp2: v42|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = DEC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v44|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v30|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v45|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV input: [v45|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = AND x: v47|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v45|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v48|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v46|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v47|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v46|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v46|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v45|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v35|DWORD 
locals: v52|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v52|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV input: [v25|QWORD + 512] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v34|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|QWORD[.], y: [v37|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v34|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v41|QWORD, temp2: v42|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = DEC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v44|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v30|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v45|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV input: [v45|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = AND x: v47|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v45|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v48|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v46|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v47|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v46|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v46|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v45|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v35|DWORD 
locals: v52|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v52|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV input: [v25|QWORD + 512] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v34|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|QWORD[.], y: [v37|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v34|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v41|QWORD, temp2: v42|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v34|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = DEC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v44|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v30|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v45|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV input: [v45|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = AND x: v47|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v45|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v48|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v46|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v47|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v46|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v46|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v45|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v35|DWORD 
locals: v52|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v52|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  206  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  324  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  326  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  328  <|@ instruction v27|QWORD = MOV input: [v25|QWORD + 512] size: QWORD <|@ <|@
      nr  330  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr  332  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr  348  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  396  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v34|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr  402  <|@ instruction v36|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  404  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  406  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  410  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v38|QWORD[.], y: [v37|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v34|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v41|QWORD, temp2: v42|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  464  <|@ instruction MOV x: [v34|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction v43|DWORD = DEC value: v35|DWORD size: DWORD <|@ <|@
      nr  496  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr  498  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v44|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction v45|DWORD[_] = MOV input: [v44|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v30|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr  612  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPCONSTBRANCH x: [v45|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  668  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  670  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  708  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  710  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  712  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  716  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  720  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction v47|DWORD = MOV input: [v45|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  776  <|@ instruction v48|DWORD = AND x: v47|DWORD y: -2 size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction rax|DWORD = CAS (address: [v45|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v48|DWORD) accessKind: DWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v46|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v47|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v46|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v46|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction v50|DWORD[_] = MOV input: [v45|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  824  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  852  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  876  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v35|DWORD 
locals: v52|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v52|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  206  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  324  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  326  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  328  <|@ instruction v27|QWORD = MOV input: [v25|QWORD + 512] size: QWORD <|@ <|@
      nr  330  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr  332  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr  348  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  396  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v34|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr  402  <|@ instruction v36|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  404  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  406  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  410  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v38|QWORD[.], y: [v37|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v34|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v41|QWORD, temp2: v42|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  464  <|@ instruction MOV x: [v34|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction v43|DWORD = DEC value: v35|DWORD size: DWORD <|@ <|@
      nr  496  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr  498  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v44|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction v45|DWORD[_] = MOV input: [v44|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v30|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr  612  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPCONSTBRANCH x: [v45|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  668  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  670  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  708  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  710  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  712  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  716  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  720  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction v47|DWORD = MOV input: [v45|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  776  <|@ instruction v48|DWORD = AND x: v47|DWORD y: -2 size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction rax|DWORD = CAS (address: [v45|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v48|DWORD) accessKind: DWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v46|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v47|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v46|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v46|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction v50|DWORD[_] = MOV input: [v45|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  824  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  852  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  876  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v35|DWORD 
locals: v52|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v52|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|- fixed "[rax|-]" rax|- v28|q [0, 1[[82, 87[[344, 347[[616, 617[[668, 670[[718, 720[[778, 781[[828, 829[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|d [0, 62[[338, 347[[616, 617[[668, 669[[708, 719[[828, 829[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 60[[336, 347[[616, 617[[666, 669[[706, 719[[828, 829[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v27|q [0, 1[[342, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 54[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v29|q [0, 58[[334, 347[[614, 617[[664, 669[[704, 719[[826, 829[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[714, 719[[828, 829[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- v3|d [0, 64[[340, 347[[616, 617[[668, 669[[710, 719[[828, 829[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[712, 719[[828, 829[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [58, 518[[556, 572[[582, 632[[642, 829[[832, 853[[854, 881[58 MustHaveRegister 66 MustHaveRegister 320 MustHaveRegister 348 MustHaveRegister 394 MustHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [60, 336[[642, 734[[832, 853[60 MustHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [62, 338[[642, 734[[832, 853[62 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d r8|- [64, 340[[642, 734[[832, 853[64 MustHaveRegister 340 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [66, 80[66 MustHaveRegister 68 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [70, 208[[214, 268[70 MustHaveRegister 72 MustHaveRegister 78 MustHaveRegister 86 MustHaveRegister 204 MustHaveRegister 208 MustHaveRegister 230 MustHaveRegister 250 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [76, 211[[214, 234[76 MustHaveRegister 206 MustHaveRegister 210 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v6|d [78, 211[[214, 256[[642, 719[[832, 853[78 MustHaveRegister 210 MustHaveRegister 664 ShouldHaveRegister 704 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v4|d [80, 323[[642, 734[[832, 853[80 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [84, 86[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [230, 232[230 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v12|d [232, 234[232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [250, 256[[832, 853[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v14|d [252, 268[252 MustHaveRegister 254 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d rax|- [670, 672[670 MustHaveRegister 672 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d rax|- [720, 721[720 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v19|q QWORD "[v19|q]" v19|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v20|d DWORD "[v20|d]" v20|d v8|q [206, 208[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[v22|q]" v22|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v23|d DWORD "[v23|d]" v23|d -1 [320, 332[320 MustHaveRegister 322 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d -1 [322, 326[322 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q v24|d [326, 328[326 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q -1 [324, 327[324 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q -1 [328, 342[328 MustHaveRegister 330 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q -1 [330, 344[330 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v23|d [332, 334[332 MustHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d -1 [608, 612[608 MustHaveRegister 610 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q v30|d [612, 614[612 MustHaveRegister 614 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d -1 [394, 410[394 MustHaveRegister 396 MustHaveRegister 410 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d -1 [396, 408[396 MustHaveRegister 398 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [398, 514[[854, 874[398 MustHaveRegister 400 MustHaveRegister 402 MustHaveRegister 462 MustHaveRegister 464 MustHaveRegister 496 MustHaveRegister 514 MustHaveRegister 874 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d -1 [400, 500[[854, 881[400 MustHaveRegister 424 ShouldHaveRegister 494 ShouldHaveRegister 500 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d -1 [402, 406[402 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [404, 412[404 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q v36|d [406, 412[406 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q v33|d [408, 518[[556, 572[[620, 632[[734, 829[[854, 881[408 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v32|d [410, 518[[556, 572[[620, 632[[734, 829[[854, 881[410 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [462, 463[462 MustHaveRegister  "NoDefinitionFound"
  v42|q QWORD "[v42|q]" v42|q -1 [462, 463[462 MustHaveRegister  "NoDefinitionFound"
  v43|d DWORD "[v43|d]" v43|d v35|d [494, 496[494 MustHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d -1 [514, 518[[556, 568[514 MustHaveRegister 516 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d -1 [568, 572[[620, 632[[734, 822[568 MustHaveRegister 570 MustHaveRegister 630 MustHaveRegister 746 MustHaveRegister 774 MustHaveRegister 780 MustHaveRegister 799 LiveAtLoopEnd 822 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v45|d [746, 800[746 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d -1 [774, 797[774 MustHaveRegister 776 MustHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d v47|d [776, 780[776 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q -1 [796, 797[796 MustHaveRegister  "NoDefinitionFound"
  v50|d DWORD "[v50|d]" v50|d -1 [822, 824[822 MustHaveRegister 824 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q v50|d [824, 826[824 MustHaveRegister 826 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q v34|d [874, 881[874 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|- fixed "[rax|-]" rax|- v28|q [0, 1[[82, 87[[344, 347[[616, 617[[668, 670[[718, 720[[778, 781[[828, 829[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|d [0, 62[[338, 347[[616, 617[[668, 669[[708, 719[[828, 829[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 60[[336, 347[[616, 617[[666, 669[[706, 719[[828, 829[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v27|q [0, 1[[342, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 54[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v29|q [0, 58[[334, 347[[614, 617[[664, 669[[704, 719[[826, 829[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[714, 719[[828, 829[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- v3|d [0, 64[[340, 347[[616, 617[[668, 669[[710, 719[[828, 829[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[712, 719[[828, 829[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [58, 333[58 MustHaveRegister 66 MustHaveRegister 320 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [60, 336[60 MustHaveRegister 336 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [62, 338[62 MustHaveRegister 338 ShouldHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [64, 340[64 MustHaveRegister 340 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[rax|d]" v4|d -1 [66, 80[66 MustHaveRegister 68 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rbx|d]" v6|d -1 [70, 208[[214, 268[70 MustHaveRegister 72 MustHaveRegister 78 MustHaveRegister 86 MustHaveRegister 204 MustHaveRegister 208 MustHaveRegister 230 MustHaveRegister 250 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[r10|q]" v7|q -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r10|q]" v8|q -1 [76, 211[[214, 234[76 MustHaveRegister 206 MustHaveRegister 210 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q v6|d [78, 211[[214, 256[[642, 667[78 MustHaveRegister 210 MustHaveRegister 664 ShouldHaveRegister  "OneSpillStore"
  v10|q QWORD "[rax|q]" v10|q v4|d [80, 81[80 MustHaveRegister  "OneSpillStore"
  v11|d DWORD "[rdi|d]" v11|d -1 [84, 86[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [230, 232[230 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q v12|d [232, 234[232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [250, 256[[832, 853[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d v14|d [252, 268[252 MustHaveRegister 254 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d rax|- [670, 672[670 MustHaveRegister 672 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|- [720, 721[720 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v19|q QWORD "[rdi|q]" v19|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v20|d DWORD "[rax|d]" v20|d v8|q [206, 208[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rbx|q]" v21|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[rax|q]" v22|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v23|d DWORD "[rbx|d]" v23|d -1 [320, 332[320 MustHaveRegister 322 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d -1 [322, 326[322 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rax|q]" v25|q v24|d [326, 328[326 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[r10|q]" v26|q -1 [324, 327[324 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q -1 [328, 342[328 MustHaveRegister 330 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[r10|q]" v28|q -1 [330, 344[330 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rbx|q]" v29|q v23|d [332, 334[332 MustHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r10|d]" v30|d -1 [608, 612[608 MustHaveRegister 610 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[r10|q]" v31|q v30|d [612, 614[612 MustHaveRegister 614 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d -1 [394, 410[394 MustHaveRegister 396 MustHaveRegister 410 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r11|d]" v33|d -1 [396, 408[396 MustHaveRegister 398 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r8|d]" v34|d -1 [398, 514[[854, 874[398 MustHaveRegister 400 MustHaveRegister 402 MustHaveRegister 462 MustHaveRegister 464 MustHaveRegister 496 MustHaveRegister 514 MustHaveRegister 874 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[r9|d]" v35|d -1 [400, 500[[854, 881[400 MustHaveRegister 424 ShouldHaveRegister 494 ShouldHaveRegister 500 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rcx|d]" v36|d -1 [402, 406[402 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rbx|q]" v37|q -1 [404, 412[404 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rcx|q]" v38|q v36|d [406, 412[406 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r11|q]" v39|q v33|d [408, 518[[556, 572[[620, 632[[734, 800[408 MustHaveRegister  "OneSpillStore"
  v40|q QWORD "[r10|q]" v40|q v32|d [410, 518[[556, 572[[620, 632[[734, 800[410 MustHaveRegister  "OneSpillStore"
  v41|q QWORD "[rcx|q]" v41|q -1 [462, 463[462 MustHaveRegister  "NoDefinitionFound"
  v42|q QWORD "[rbx|q]" v42|q -1 [462, 463[462 MustHaveRegister  "NoDefinitionFound"
  v43|d DWORD "[rcx|d]" v43|d v35|d [494, 496[494 MustHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r8|d]" v44|d -1 [514, 518[[556, 568[514 MustHaveRegister 516 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[r8|d]" v45|d -1 [568, 572[[620, 632[[734, 822[568 MustHaveRegister 570 MustHaveRegister 630 MustHaveRegister 746 MustHaveRegister 774 MustHaveRegister 780 MustHaveRegister 799 LiveAtLoopEnd 822 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q v45|d [746, 800[746 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[r9|d]" v47|d -1 [774, 797[774 MustHaveRegister 776 MustHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[rcx|d]" v48|d v47|d [776, 780[776 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rcx|q]" v49|q -1 [796, 797[796 MustHaveRegister  "NoDefinitionFound"
  v50|d DWORD "[rsi|d]" v50|d -1 [822, 824[822 MustHaveRegister 824 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q v50|d [824, 826[824 MustHaveRegister 826 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[r8|q]" v52|q v34|d [874, 881[874 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[vstack:0|q]" v0|q v0|q [333, 345[ "SpillInDominator"
  v54|q QWORD "[vstack:2|q]" v1|q v1|q [642, 665[ "OneSpillStore"
  v55|d DWORD "[vstack:4|d]" v2|d v2|d [642, 667[ "OneSpillStore"
  v56|d DWORD "[vstack:5|d]" v3|d v3|d [642, 667[ "OneSpillStore"
  v57|q QWORD "[vstack:3|q]" v9|q v9|q [667, 719[704 ShouldHaveRegister  "OneSpillStore"
  v58|q QWORD "[vstack:6|q]" v10|q v10|q [81, 323[ "OneSpillStore"
  v59|q QWORD "[vstack:6|q]" v10|q v10|q [642, 667[ "OneSpillStore"
  v60|q QWORD "[vstack:0|q]" v0|q v0|q [345, 347[ "SpillInDominator"
  v61|q QWORD "[rsi|q]" v0|q v0|q [347, 518[[556, 572[[582, 613[348 MustHaveRegister 394 MustHaveRegister 608 MustHaveRegister  "SpillInDominator"
  v62|q QWORD "[vstack:0|q]" v0|q v0|q [613, 632[[642, 829[[832, 853[ "SpillInDominator"
  v63|q QWORD "[vstack:7|q]" v39|q v39|q [800, 827[ "OneSpillStore"
  v64|q QWORD "[vstack:9|q]" v40|q v40|q [800, 827[ "OneSpillStore"
  v65|q QWORD "[rsi|q]" v0|q v0|q [854, 881[ "SpillInDominator"
  v66|q QWORD "[vstack:6|q]" v10|q v10|q [667, 734[ "OneSpillStore"
  v67|d DWORD "[vstack:5|d]" v3|d v3|d [667, 734[ "OneSpillStore"
  v68|d DWORD "[vstack:4|d]" v2|d v2|d [667, 734[ "OneSpillStore"
  v69|q QWORD "[vstack:2|q]" v1|q v1|q [665, 734[ "OneSpillStore"
  v70|q QWORD "[rdx|q]" v1|q v1|q [832, 853[ "OneSpillStore"
  v71|q QWORD "[r11|q]" v9|q v9|q [832, 853[ "OneSpillStore"
  v72|d DWORD "[rcx|d]" v2|d v2|d [832, 853[ "OneSpillStore"
  v73|d DWORD "[r8|d]" v3|d v3|d [832, 853[ "OneSpillStore"
  v74|q QWORD "[rax|q]" v10|q v10|q [832, 853[ "OneSpillStore"
  v75|q QWORD "[vstack:9|q]" v40|q v40|q [827, 829[ "OneSpillStore"
  v76|q QWORD "[vstack:7|q]" v39|q v39|q [827, 829[ "OneSpillStore"
  v77|q QWORD "[r11|q]" v39|q v39|q [854, 881[ "OneSpillStore"
  v78|q QWORD "[r10|q]" v40|q v40|q [854, 881[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  206  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  324  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  326  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  328  <|@ instruction v27|QWORD = MOV input: [v25|QWORD + 512] size: QWORD <|@ <|@
      nr  330  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr  332  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = STACKMOVE (input: v53|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  348  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  396  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v34|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr  402  <|@ instruction v36|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  404  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  406  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  410  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v38|QWORD[.], y: [v37|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v34|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v41|QWORD, temp2: v42|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  464  <|@ instruction MOV x: [v34|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction v43|DWORD = DEC value: v35|DWORD size: DWORD <|@ <|@
      nr  496  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr  498  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v44|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction v45|DWORD[_] = MOV input: [v44|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v30|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr  612  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPCONSTBRANCH x: [v45|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = STACKMOVE (input: v54|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = STACKMOVE (input: v59|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = STACKMOVE (input: v56|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = STACKMOVE (input: v55|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  670  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  708  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  710  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  712  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  716  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  720  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction v47|DWORD = MOV input: [v45|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  776  <|@ instruction v48|DWORD = AND x: v47|DWORD y: -2 size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction rax|DWORD = CAS (address: [v45|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v48|DWORD) accessKind: DWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v46|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v47|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v46|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v46|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction v50|DWORD[_] = MOV input: [v45|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  824  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = STACKMOVE (input: v64|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = STACKMOVE (input: v63|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  852  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  876  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v35|DWORD 
locals: v52|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v52|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|- fixed "[rax|-]" rax|- v28|q [0, 1[[82, 87[[344, 347[[616, 617[[668, 670[[718, 720[[778, 781[[828, 829[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|d [0, 62[[338, 347[[616, 617[[668, 669[[708, 719[[828, 829[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 60[[336, 347[[616, 617[[666, 669[[706, 719[[828, 829[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v27|q [0, 1[[342, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 54[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v29|q [0, 58[[334, 347[[614, 617[[664, 669[[704, 719[[826, 829[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[714, 719[[828, 829[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- v3|d [0, 64[[340, 347[[616, 617[[668, 669[[710, 719[[828, 829[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[712, 719[[828, 829[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [58, 333[58 MustHaveRegister 66 MustHaveRegister 320 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [60, 336[60 MustHaveRegister 336 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [62, 338[62 MustHaveRegister 338 ShouldHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [64, 340[64 MustHaveRegister 340 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[rax|d]" v4|d -1 [66, 80[66 MustHaveRegister 68 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rbx|d]" v6|d -1 [70, 208[[214, 268[70 MustHaveRegister 72 MustHaveRegister 78 MustHaveRegister 86 MustHaveRegister 204 MustHaveRegister 208 MustHaveRegister 230 MustHaveRegister 250 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[r10|q]" v7|q -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r10|q]" v8|q -1 [76, 211[[214, 234[76 MustHaveRegister 206 MustHaveRegister 210 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q v6|d [78, 211[[214, 256[[642, 667[78 MustHaveRegister 210 MustHaveRegister 664 ShouldHaveRegister  "OneSpillStore"
  v10|q QWORD "[rax|q]" v10|q v4|d [80, 81[80 MustHaveRegister  "OneSpillStore"
  v11|d DWORD "[rdi|d]" v11|d -1 [84, 86[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [230, 232[230 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q v12|d [232, 234[232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [250, 256[[832, 853[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d v14|d [252, 268[252 MustHaveRegister 254 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d rax|- [670, 672[670 MustHaveRegister 672 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|- [720, 721[720 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v19|q QWORD "[rdi|q]" v19|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v20|d DWORD "[rax|d]" v20|d v8|q [206, 208[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rbx|q]" v21|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[rax|q]" v22|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v23|d DWORD "[rbx|d]" v23|d -1 [320, 332[320 MustHaveRegister 322 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d -1 [322, 326[322 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rax|q]" v25|q v24|d [326, 328[326 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[r10|q]" v26|q -1 [324, 327[324 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q -1 [328, 342[328 MustHaveRegister 330 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[r10|q]" v28|q -1 [330, 344[330 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rbx|q]" v29|q v23|d [332, 334[332 MustHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r10|d]" v30|d -1 [608, 612[608 MustHaveRegister 610 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[r10|q]" v31|q v30|d [612, 614[612 MustHaveRegister 614 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d -1 [394, 410[394 MustHaveRegister 396 MustHaveRegister 410 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r11|d]" v33|d -1 [396, 408[396 MustHaveRegister 398 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r8|d]" v34|d -1 [398, 514[[854, 874[398 MustHaveRegister 400 MustHaveRegister 402 MustHaveRegister 462 MustHaveRegister 464 MustHaveRegister 496 MustHaveRegister 514 MustHaveRegister 874 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[r9|d]" v35|d -1 [400, 500[[854, 881[400 MustHaveRegister 424 ShouldHaveRegister 494 ShouldHaveRegister 500 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rcx|d]" v36|d -1 [402, 406[402 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rbx|q]" v37|q -1 [404, 412[404 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rcx|q]" v38|q v36|d [406, 412[406 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r11|q]" v39|q v33|d [408, 518[[556, 572[[620, 632[[734, 800[408 MustHaveRegister  "OneSpillStore"
  v40|q QWORD "[r10|q]" v40|q v32|d [410, 518[[556, 572[[620, 632[[734, 800[410 MustHaveRegister  "OneSpillStore"
  v41|q QWORD "[rcx|q]" v41|q -1 [462, 463[462 MustHaveRegister  "NoDefinitionFound"
  v42|q QWORD "[rbx|q]" v42|q -1 [462, 463[462 MustHaveRegister  "NoDefinitionFound"
  v43|d DWORD "[rcx|d]" v43|d v35|d [494, 496[494 MustHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r8|d]" v44|d -1 [514, 518[[556, 568[514 MustHaveRegister 516 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[r8|d]" v45|d -1 [568, 572[[620, 632[[734, 822[568 MustHaveRegister 570 MustHaveRegister 630 MustHaveRegister 746 MustHaveRegister 774 MustHaveRegister 780 MustHaveRegister 799 LiveAtLoopEnd 822 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q v45|d [746, 800[746 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[r9|d]" v47|d -1 [774, 797[774 MustHaveRegister 776 MustHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[rcx|d]" v48|d v47|d [776, 780[776 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rcx|q]" v49|q -1 [796, 797[796 MustHaveRegister  "NoDefinitionFound"
  v50|d DWORD "[rsi|d]" v50|d -1 [822, 824[822 MustHaveRegister 824 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q v50|d [824, 826[824 MustHaveRegister 826 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[r8|q]" v52|q v34|d [874, 881[874 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[vstack:0|q]" v0|q v0|q [333, 345[ "StoreAtDefinition"
  v54|q QWORD "[vstack:2|q]" v1|q v1|q [642, 665[ "OneSpillStore"
  v55|d DWORD "[vstack:4|d]" v2|d v2|d [642, 667[ "OneSpillStore"
  v56|d DWORD "[vstack:5|d]" v3|d v3|d [642, 667[ "OneSpillStore"
  v57|q QWORD "[vstack:3|q]" v9|q v9|q [667, 719[704 ShouldHaveRegister  "OneSpillStore"
  v58|q QWORD "[vstack:6|q]" v10|q v10|q [81, 323[ "OneSpillStore"
  v59|q QWORD "[vstack:6|q]" v10|q v10|q [642, 667[ "OneSpillStore"
  v60|q QWORD "[vstack:0|q]" v0|q v0|q [345, 347[ "StoreAtDefinition"
  v61|q QWORD "[rsi|q]" v0|q v0|q [347, 518[[556, 572[[582, 613[348 MustHaveRegister 394 MustHaveRegister 608 MustHaveRegister  "StoreAtDefinition"
  v62|q QWORD "[vstack:0|q]" v0|q v0|q [613, 632[[642, 829[[832, 853[ "StoreAtDefinition"
  v63|q QWORD "[vstack:7|q]" v39|q v39|q [800, 827[ "OneSpillStore"
  v64|q QWORD "[vstack:9|q]" v40|q v40|q [800, 827[ "OneSpillStore"
  v65|q QWORD "[rsi|q]" v0|q v0|q [854, 881[ "StoreAtDefinition"
  v66|q QWORD "[vstack:6|q]" v10|q v10|q [667, 734[ "OneSpillStore"
  v67|d DWORD "[vstack:5|d]" v3|d v3|d [667, 734[ "OneSpillStore"
  v68|d DWORD "[vstack:4|d]" v2|d v2|d [667, 734[ "OneSpillStore"
  v69|q QWORD "[vstack:2|q]" v1|q v1|q [665, 734[ "OneSpillStore"
  v70|q QWORD "[rdx|q]" v1|q v1|q [832, 853[ "OneSpillStore"
  v71|q QWORD "[r11|q]" v9|q v9|q [832, 853[ "OneSpillStore"
  v72|d DWORD "[rcx|d]" v2|d v2|d [832, 853[ "OneSpillStore"
  v73|d DWORD "[r8|d]" v3|d v3|d [832, 853[ "OneSpillStore"
  v74|q QWORD "[rax|q]" v10|q v10|q [832, 853[ "OneSpillStore"
  v75|q QWORD "[vstack:9|q]" v40|q v40|q [827, 829[ "OneSpillStore"
  v76|q QWORD "[vstack:7|q]" v39|q v39|q [827, 829[ "OneSpillStore"
  v77|q QWORD "[r11|q]" v39|q v39|q [854, 881[ "OneSpillStore"
  v78|q QWORD "[r10|q]" v40|q v40|q [854, 881[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  206  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  324  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  326  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  328  <|@ instruction v27|QWORD = MOV input: [v25|QWORD + 512] size: QWORD <|@ <|@
      nr  330  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr  332  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = STACKMOVE (input: v53|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  348  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  396  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v34|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr  402  <|@ instruction v36|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  404  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  406  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  410  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v38|QWORD[.], y: [v37|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v34|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v41|QWORD, temp2: v42|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  464  <|@ instruction MOV x: [v34|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction v43|DWORD = DEC value: v35|DWORD size: DWORD <|@ <|@
      nr  496  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr  498  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v44|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction v45|DWORD[_] = MOV input: [v44|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v30|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr  612  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPCONSTBRANCH x: [v45|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = STACKMOVE (input: v54|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = STACKMOVE (input: v59|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = STACKMOVE (input: v56|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = STACKMOVE (input: v55|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  670  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  708  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  710  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  712  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  716  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  720  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction v47|DWORD = MOV input: [v45|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  776  <|@ instruction v48|DWORD = AND x: v47|DWORD y: -2 size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction rax|DWORD = CAS (address: [v45|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v48|DWORD) accessKind: DWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v46|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v47|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v46|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v46|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction v50|DWORD[_] = MOV input: [v45|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  824  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = STACKMOVE (input: v64|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = STACKMOVE (input: v63|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  852  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  876  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v35|DWORD 
locals: v52|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v52|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|- fixed "[rax|-]" rax|- v28|q [0, 1[[82, 87[[344, 347[[616, 617[[668, 670[[718, 720[[778, 781[[828, 829[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|d [0, 62[[338, 347[[616, 617[[668, 669[[708, 719[[828, 829[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 60[[336, 347[[616, 617[[666, 669[[706, 719[[828, 829[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v27|q [0, 1[[342, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 54[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v29|q [0, 58[[334, 347[[614, 617[[664, 669[[704, 719[[826, 829[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[714, 719[[828, 829[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- v3|d [0, 64[[340, 347[[616, 617[[668, 669[[710, 719[[828, 829[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[712, 719[[828, 829[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[346, 347[[616, 617[[668, 669[[718, 719[[828, 829[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [58, 333[58 MustHaveRegister 66 MustHaveRegister 320 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [60, 336[60 MustHaveRegister 336 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [62, 338[62 MustHaveRegister 338 ShouldHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [64, 340[64 MustHaveRegister 340 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[rax|d]" v4|d -1 [66, 80[66 MustHaveRegister 68 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rbx|d]" v6|d -1 [70, 208[[214, 268[70 MustHaveRegister 72 MustHaveRegister 78 MustHaveRegister 86 MustHaveRegister 204 MustHaveRegister 208 MustHaveRegister 230 MustHaveRegister 250 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[r10|q]" v7|q -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r10|q]" v8|q -1 [76, 211[[214, 234[76 MustHaveRegister 206 MustHaveRegister 210 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q v6|d [78, 211[[214, 256[[642, 667[78 MustHaveRegister 210 MustHaveRegister 664 ShouldHaveRegister  "OneSpillStore"
  v10|q QWORD "[rax|q]" v10|q v4|d [80, 81[80 MustHaveRegister  "OneSpillStore"
  v11|d DWORD "[rdi|d]" v11|d -1 [84, 86[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [230, 232[230 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q v12|d [232, 234[232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [250, 256[[832, 853[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d v14|d [252, 268[252 MustHaveRegister 254 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d rax|- [670, 672[670 MustHaveRegister 672 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|- [720, 721[720 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v19|q QWORD "[rdi|q]" v19|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v20|d DWORD "[rax|d]" v20|d v8|q [206, 208[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rbx|q]" v21|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[rax|q]" v22|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v23|d DWORD "[rbx|d]" v23|d -1 [320, 332[320 MustHaveRegister 322 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d -1 [322, 326[322 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rax|q]" v25|q v24|d [326, 328[326 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[r10|q]" v26|q -1 [324, 327[324 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q -1 [328, 342[328 MustHaveRegister 330 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[r10|q]" v28|q -1 [330, 344[330 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rbx|q]" v29|q v23|d [332, 334[332 MustHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r10|d]" v30|d -1 [608, 612[608 MustHaveRegister 610 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[r10|q]" v31|q v30|d [612, 614[612 MustHaveRegister 614 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d -1 [394, 410[394 MustHaveRegister 396 MustHaveRegister 410 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r11|d]" v33|d -1 [396, 408[396 MustHaveRegister 398 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r8|d]" v34|d -1 [398, 514[[854, 874[398 MustHaveRegister 400 MustHaveRegister 402 MustHaveRegister 462 MustHaveRegister 464 MustHaveRegister 496 MustHaveRegister 514 MustHaveRegister 874 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[r9|d]" v35|d -1 [400, 500[[854, 881[400 MustHaveRegister 424 ShouldHaveRegister 494 ShouldHaveRegister 500 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rcx|d]" v36|d -1 [402, 406[402 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rbx|q]" v37|q -1 [404, 412[404 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rcx|q]" v38|q v36|d [406, 412[406 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r11|q]" v39|q v33|d [408, 518[[556, 572[[620, 632[[734, 800[408 MustHaveRegister  "OneSpillStore"
  v40|q QWORD "[r10|q]" v40|q v32|d [410, 518[[556, 572[[620, 632[[734, 800[410 MustHaveRegister  "OneSpillStore"
  v41|q QWORD "[rcx|q]" v41|q -1 [462, 463[462 MustHaveRegister  "NoDefinitionFound"
  v42|q QWORD "[rbx|q]" v42|q -1 [462, 463[462 MustHaveRegister  "NoDefinitionFound"
  v43|d DWORD "[rcx|d]" v43|d v35|d [494, 496[494 MustHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r8|d]" v44|d -1 [514, 518[[556, 568[514 MustHaveRegister 516 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[r8|d]" v45|d -1 [568, 572[[620, 632[[734, 822[568 MustHaveRegister 570 MustHaveRegister 630 MustHaveRegister 746 MustHaveRegister 774 MustHaveRegister 780 MustHaveRegister 799 LiveAtLoopEnd 822 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q v45|d [746, 800[746 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[r9|d]" v47|d -1 [774, 797[774 MustHaveRegister 776 MustHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[rcx|d]" v48|d v47|d [776, 780[776 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rcx|q]" v49|q -1 [796, 797[796 MustHaveRegister  "NoDefinitionFound"
  v50|d DWORD "[rsi|d]" v50|d -1 [822, 824[822 MustHaveRegister 824 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q v50|d [824, 826[824 MustHaveRegister 826 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[r8|q]" v52|q v34|d [874, 881[874 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[vstack:0|q]" v0|q v0|q [333, 345[ "StoreAtDefinition"
  v54|q QWORD "[vstack:2|q]" v1|q v1|q [642, 665[ "OneSpillStore"
  v55|d DWORD "[vstack:4|d]" v2|d v2|d [642, 667[ "OneSpillStore"
  v56|d DWORD "[vstack:5|d]" v3|d v3|d [642, 667[ "OneSpillStore"
  v57|q QWORD "[vstack:3|q]" v9|q v9|q [667, 719[704 ShouldHaveRegister  "OneSpillStore"
  v58|q QWORD "[vstack:6|q]" v10|q v10|q [81, 323[ "OneSpillStore"
  v59|q QWORD "[vstack:6|q]" v10|q v10|q [642, 667[ "OneSpillStore"
  v60|q QWORD "[vstack:0|q]" v0|q v0|q [345, 347[ "StoreAtDefinition"
  v61|q QWORD "[rsi|q]" v0|q v0|q [347, 518[[556, 572[[582, 613[348 MustHaveRegister 394 MustHaveRegister 608 MustHaveRegister  "StoreAtDefinition"
  v62|q QWORD "[vstack:0|q]" v0|q v0|q [613, 632[[642, 829[[832, 853[ "StoreAtDefinition"
  v63|q QWORD "[vstack:7|q]" v39|q v39|q [800, 827[ "OneSpillStore"
  v64|q QWORD "[vstack:9|q]" v40|q v40|q [800, 827[ "OneSpillStore"
  v65|q QWORD "[rsi|q]" v0|q v0|q [854, 881[ "StoreAtDefinition"
  v66|q QWORD "[vstack:6|q]" v10|q v10|q [667, 734[ "OneSpillStore"
  v67|d DWORD "[vstack:5|d]" v3|d v3|d [667, 734[ "OneSpillStore"
  v68|d DWORD "[vstack:4|d]" v2|d v2|d [667, 734[ "OneSpillStore"
  v69|q QWORD "[vstack:2|q]" v1|q v1|q [665, 734[ "OneSpillStore"
  v70|q QWORD "[rdx|q]" v1|q v1|q [832, 853[ "OneSpillStore"
  v71|q QWORD "[r11|q]" v9|q v9|q [832, 853[ "OneSpillStore"
  v72|d DWORD "[rcx|d]" v2|d v2|d [832, 853[ "OneSpillStore"
  v73|d DWORD "[r8|d]" v3|d v3|d [832, 853[ "OneSpillStore"
  v74|q QWORD "[rax|q]" v10|q v10|q [832, 853[ "OneSpillStore"
  v75|q QWORD "[vstack:9|q]" v40|q v40|q [827, 829[ "OneSpillStore"
  v76|q QWORD "[vstack:7|q]" v39|q v39|q [827, 829[ "OneSpillStore"
  v77|q QWORD "[r11|q]" v39|q v39|q [854, 881[ "OneSpillStore"
  v78|q QWORD "[r10|q]" v40|q v40|q [854, 881[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  206  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  324  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  326  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  328  <|@ instruction v27|QWORD = MOV input: [v25|QWORD + 512] size: QWORD <|@ <|@
      nr  330  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr  332  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = STACKMOVE (input: v53|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  348  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  396  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v34|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr  402  <|@ instruction v36|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  404  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  406  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  410  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v38|QWORD[.], y: [v37|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v34|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v41|QWORD, temp2: v42|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  464  <|@ instruction MOV x: [v34|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction v43|DWORD = DEC value: v35|DWORD size: DWORD <|@ <|@
      nr  496  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr  498  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v44|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction v45|DWORD[_] = MOV input: [v44|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v30|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr  612  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPCONSTBRANCH x: [v45|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = STACKMOVE (input: v54|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = STACKMOVE (input: v59|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = STACKMOVE (input: v56|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = STACKMOVE (input: v55|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  670  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  708  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  710  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  712  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  716  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  720  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v67|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v68|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v67|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v68|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction v47|DWORD = MOV input: [v45|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  776  <|@ instruction v48|DWORD = AND x: v47|DWORD y: -2 size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction rax|DWORD = CAS (address: [v45|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v48|DWORD) accessKind: DWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v46|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v47|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v46|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v46|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction v50|DWORD[_] = MOV input: [v45|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  824  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = STACKMOVE (input: v64|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = STACKMOVE (input: v63|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  852  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  876  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v35|DWORD 
locals: v52|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v52|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   60  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  206  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  324  <|@ instruction v26|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  326  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  328  <|@ instruction v27|QWORD = MOV input: [v25|QWORD + 512] size: QWORD <|@ <|@
      nr  330  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr  332  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  348  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  396  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v32|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v34|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr  402  <|@ instruction v36|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  404  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  406  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  410  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v38|QWORD[.], y: [v37|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v34|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v41|QWORD, temp2: v42|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  464  <|@ instruction MOV x: [v34|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction v43|DWORD = DEC value: v35|DWORD size: DWORD <|@ <|@
      nr  496  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr  498  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v44|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction v45|DWORD[_] = MOV input: [v44|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v30|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr  612  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPCONSTBRANCH x: [v45|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = STACKMOVE (input: v54|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = STACKMOVE (input: v59|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = STACKMOVE (input: v56|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = STACKMOVE (input: v55|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  670  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  708  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  710  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  712  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  716  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  720  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v67|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v68|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v67|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v68|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v62|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction v47|DWORD = MOV input: [v45|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  776  <|@ instruction v48|DWORD = AND x: v47|DWORD y: -2 size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction rax|DWORD = CAS (address: [v45|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v48|DWORD) accessKind: DWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v46|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v47|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v46|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v46|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction v50|DWORD[_] = MOV input: [v45|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  824  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = STACKMOVE (input: v64|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = STACKMOVE (input: v63|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  852  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  876  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v35|DWORD 
locals: v52|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v52|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v39|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   66  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [rbx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rdi|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  206  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rbx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rax|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction rax|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  324  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  326  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  328  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 512] size: QWORD <|@ <|@
      nr  330  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  332  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  348  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  396  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr  402  <|@ instruction rcx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  410  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rbx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  464  <|@ instruction MOV x: [r8|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  496  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  498  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr  612  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPCONSTBRANCH x: [r8|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:3|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:3|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:4|DWORD vstack:5|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  708  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  710  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  712  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  716  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:3|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:4|DWORD vstack:5|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  776  <|@ instruction rcx|DWORD = AND x: r9|DWORD y: -2 size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction rax|DWORD = CAS (address: [r8|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r9|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  824  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:9|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  852  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: vstack:0|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  876  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r9|DWORD 
locals: r8|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r8|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   66  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [rbx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rdi|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  206  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rbx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rax|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction rax|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  324  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  326  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  328  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 512] size: QWORD <|@ <|@
      nr  330  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  332  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  348  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  396  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr  402  <|@ instruction rcx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  410  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rbx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  464  <|@ instruction MOV x: [r8|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  496  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  498  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr  612  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPCONSTBRANCH x: [r8|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:3|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:3|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:4|DWORD vstack:5|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  708  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  710  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  712  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  716  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:3|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:4|DWORD vstack:5|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  776  <|@ instruction rcx|DWORD = AND x: r9|DWORD y: -2 size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction rax|DWORD = CAS (address: [r8|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r9|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  824  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:9|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  852  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: vstack:0|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  876  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r9|DWORD 
locals: r8|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r8|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction vstack:6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rbx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rdi|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  398  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rbx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rax|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  456  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  458  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  460  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 512] size: QWORD <|@ <|@
      nr  462  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  464  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: vstack:0|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  572  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  574  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rbx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  632  <|@ instruction MOV x: [r8|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  684  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr  518  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH x: [r8|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction vstack:5|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction vstack:4|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction vstack:2|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  202  <|@ instruction vstack:3|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:3|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:3|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:4|DWORD vstack:5|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  244  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  246  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:3|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:4|DWORD vstack:5|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  254  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = AND x: r9|DWORD y: -2 size: DWORD <|@ <|@
      nr  788  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rax|DWORD = CAS (address: [r8|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r9|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  808  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction vstack:9|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction vstack:7|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:9|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: vstack:0|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r9|DWORD 
locals: r8|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r8|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [58, 840[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [176, 276[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [202, 252[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[vstack:4|d]" vstack:4|d -1 [174, 274[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [172, 272[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[vstack:6|q]" vstack:6|q -1 [76, 454[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[vstack:7|q]" vstack:7|q -1 [814, 840[ "NOT_SUPPORTED"
  vstack:9|q QWORD "[vstack:9|q]" vstack:9|q -1 [812, 840[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:40|q]" vstack:0|q -1 [58, 840[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:56|q]" vstack:2|q -1 [176, 276[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:64|q]" vstack:3|q -1 [202, 252[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[stack:32|d]" vstack:4|d -1 [174, 274[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:28|d]" vstack:5|d -1 [172, 272[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[stack:48|q]" vstack:6|q -1 [76, 454[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[stack:56|q]" vstack:7|q -1 [814, 840[ "NOT_SUPPORTED"
  vstack:9|q QWORD "[stack:48|q]" vstack:9|q -1 [812, 840[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rbx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rdi|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  398  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rbx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rax|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  456  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  458  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  460  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 512] size: QWORD <|@ <|@
      nr  462  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  464  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: stack:40|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  572  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  574  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rbx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  632  <|@ instruction MOV x: [r8|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  684  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr  518  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH x: [r8|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  202  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  244  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  246  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  254  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = AND x: r9|DWORD y: -2 size: DWORD <|@ <|@
      nr  788  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rax|DWORD = CAS (address: [r8|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r9|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  808  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r9|DWORD 
locals: r8|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r8|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rbx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rdi|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  398  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rbx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rax|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  456  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  458  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  460  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 512] size: QWORD <|@ <|@
      nr  462  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  464  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: stack:40|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  572  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  574  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rbx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  632  <|@ instruction MOV x: [r8|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  684  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr  518  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH x: [r8|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  202  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  244  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  246  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  254  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = AND x: r9|DWORD y: -2 size: DWORD <|@ <|@
      nr  788  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rax|DWORD = CAS (address: [r8|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r9|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  808  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r9|DWORD 
locals: r8|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r8|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rbx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rdi|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  398  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rbx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rax|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  456  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  458  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  460  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 512] size: QWORD <|@ <|@
      nr  462  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  464  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: stack:40|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  572  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  574  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rbx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  632  <|@ instruction MOV x: [r8|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  684  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr  518  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH x: [r8|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  202  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  244  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  246  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  254  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = AND x: r9|DWORD y: -2 size: DWORD <|@ <|@
      nr  788  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rax|DWORD = CAS (address: [r8|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r9|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  808  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r9|DWORD 
locals: r8|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r8|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rbx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rdi|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  398  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rbx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rax|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  456  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  458  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  460  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 512] size: QWORD <|@ <|@
      nr  462  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  464  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: stack:40|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  572  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  574  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rbx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  632  <|@ instruction MOV x: [r8|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  684  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr  518  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH x: [r8|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  202  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  244  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  246  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  254  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = AND x: r9|DWORD y: -2 size: DWORD <|@ <|@
      nr  788  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rax|DWORD = CAS (address: [r8|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r9|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  808  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r9|DWORD 
locals: r8|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r8|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rbx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rdi|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  398  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rbx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rax|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  456  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  458  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  460  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 512] size: QWORD <|@ <|@
      nr  462  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  464  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: stack:40|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  572  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  574  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rbx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  632  <|@ instruction MOV x: [r8|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  684  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr  518  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH x: [r8|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  202  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  244  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  246  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  254  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = AND x: r9|DWORD y: -2 size: DWORD <|@ <|@
      nr  788  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rax|DWORD = CAS (address: [r8|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r9|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  808  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r9|DWORD 
locals: r8|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r8|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rbx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rdi|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  398  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rbx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rax|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  456  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  458  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  460  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 512] size: QWORD <|@ <|@
      nr  462  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  464  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: stack:40|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  572  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  574  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rbx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  632  <|@ instruction MOV x: [r8|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  684  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr  518  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH x: [r8|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  202  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  244  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  246  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  254  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = AND x: r9|DWORD y: -2 size: DWORD <|@ <|@
      nr  788  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rax|DWORD = CAS (address: [r8|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r9|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  808  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r9|DWORD 
locals: r8|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r8|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rbx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rdi|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  398  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rbx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  456  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  458  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  460  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 512] size: QWORD <|@ <|@
      nr  462  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  464  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: stack:40|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  572  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  574  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rbx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  632  <|@ instruction MOV x: [r8|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  684  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rax|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr  518  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH x: [r8|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  202  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  244  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  246  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  254  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r9|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  808  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = AND x: r9|DWORD y: -2 size: DWORD <|@ <|@
      nr  788  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rax|DWORD = CAS (address: [r8|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r9|DWORD 
locals: r8|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r8|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rbx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rdi|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  398  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rbx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  456  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  458  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  460  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 512] size: QWORD <|@ <|@
      nr  462  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  464  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: stack:40|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  572  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  574  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rbx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  632  <|@ instruction MOV x: [r8|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  684  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rax|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr  518  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH x: [r8|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  202  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  244  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  246  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  254  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r9|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  808  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = AND x: r9|DWORD y: -2 size: DWORD <|@ <|@
      nr  788  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rax|DWORD = CAS (address: [r8|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r9|DWORD 
locals: r8|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r8|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rbx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rdi|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  398  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rbx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  456  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  458  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  460  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 512] size: QWORD <|@ <|@
      nr  462  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  464  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: stack:40|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  564  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  568  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  572  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  574  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rbx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  632  <|@ instruction MOV x: [r8|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  684  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rax|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr  518  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH x: [r8|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  202  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  244  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  246  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  254  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r9|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  808  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = AND x: r9|DWORD y: -2 size: DWORD <|@ <|@
      nr  788  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rax|DWORD = CAS (address: [r8|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r9|DWORD 
locals: r8|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r8|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:40]
live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:40]
live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rsi:0, stack:40]
live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rbx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rdi|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  398  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rbx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  454  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:32, stack:40]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  456  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  458  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  460  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 512] size: QWORD <|@ <|@
      nr  462  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  464  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [stack:40]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: stack:40|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  564  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:40]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:40]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  568  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r11:0, stack:40]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  572  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  574  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rbx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  632  <|@ instruction MOV x: [r8|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  684  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rax|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:40]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr  518  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ st <@st|@reference-map: [stack:40]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH x: [r8|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  202  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  244  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  246  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  252  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  254  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r11:0, stack:40]
live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r9|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  808  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = AND x: r9|DWORD y: -2 size: DWORD <|@ <|@
      nr  788  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rax|DWORD = CAS (address: [r8|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  840  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:40]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r11:0]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r9|DWORD 
locals: r8|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r8|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  150  <|@ st <@st|@reference-map: [rax:0, rdx:0, r11:0, stack:40]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:40]
live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:40]
live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rsi:0, stack:40]
live-base-pointers: []
java.io.PrintStream.write(PrintStream.java:620) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rbx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rdi|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  398  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rbx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  454  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:32, stack:40]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  456  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  458  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  460  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 512] size: QWORD <|@ <|@
      nr  462  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  464  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [stack:40]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11]
locals: stack:40|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607181490524920542
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B13" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  564  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:40]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:40]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18] <|@ <|@
      nr  568  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r11:0, stack:40]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  572  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  574  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rbx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267 <|@ <|@
      nr  632  <|@ instruction MOV x: [r8|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605940312853852538
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  684  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605934889248540967
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B27" "B26" "B22" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594136444075194904
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rax|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4558692995110619767
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4558133263615673290
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4547232853982986240
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:40]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 18] <|@ <|@
      nr  518  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ st <@st|@reference-map: [stack:40]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25]
locals: - - - - 
java.io.PrintStream.write(PrintStream.java:623) [bci: 18]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18] <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4544080528681233106
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH x: [r8|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543120554991121374
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  202  <|@ instruction stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:64|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539272943453843553
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  242  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  244  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  246  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  248  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  252  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:64|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] stack:56|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  254  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532449896255046826
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529293815400871843
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r11:0, stack:40]
live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r9|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  808  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533797415028242339
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = AND x: r9|DWORD y: -2 size: DWORD <|@ <|@
      nr  788  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rax|DWORD = CAS (address: [r8|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529293815400871843
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  840  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:40]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: stack:40|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3 <|@ <|@
      nr  894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r11:0]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r9|DWORD 
locals: r8|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r8|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r11|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: r10|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:625) [bci: 25]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  150  <|@ st <@st|@reference-map: [rax:0, rdx:0, r11:0, stack:40]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:621) [bci: 11]
locals: stack:40|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #17         // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #17         // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #27         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #41         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #17         // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #17         // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #29         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #41         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: goto          93
    75: astore        4
    77: invokestatic  #38         // java.lang.Thread.currentThread:()java.lang.Thread
    80: invokevirtual #39         // java.lang.Thread.interrupt:()void
    83: goto          93
    86: astore        4
    88: aload_0       
    89: iconst_1      
    90: putfield      #5          // trouble:boolean
    93: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec489041817f20000000000f854e050000909090909090909090909090909090909090909090909090909048896c244048897424288b46188b1cc50c0000008b1cdd0c0000008504dd000000004d8b97800300004d8b12448bdb49c1e30348c1e0034889442420b800000000bf01000000f00fb13cdd100000000f8581020000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f84310000008b3cdd0c00000048c1e7034885ff0f841d000000498b47284883f8000f848a0400004883e8084989472849034738488938498bc248c1e8038904dd0c000000498bdb4933da48c1eb160f8442000000498bdb48c1eb0948b800e0368d787f00004803d8803b027429f083042400803b00741fc60300498b47484885c00f84390400004883e8084989474849034758488918909090909090909090909090909090909090909090908b5e108b04dd0800000049ba0000002b787f0000498d0402488b80000200004c8b504048c1e303488bf3488bd8498bc2ffd00f1f840000000000488b742428807e0d000f85b801000090909090909090909090909090909090909090448b5618468b1cd50c000000468b04dd0c000000468b0cc510000000428b0cc50c000000498b9f8003000048c1e10349c1e30349c1e203483b0b0f85fa020000909090904183f9010f85e5000000909090909090909090909090909090909041807f40000f8432000000428b1cc50c00000048c1e3034885db0f841d000000498b4f284883f9000f843a0300004883e90849894f2849034f3848891942c704c50c0000000000000090909090909090418bc9ffc942890cc510000000f0830424004183f9010f85630000009090909090468b04c5140000004585c00f85a600000090909090909090909090488b6c24404883c448493ba7d804000072234883ec08498bff48b90000000000000000ffd14883c40848b90000000000000000ffe1493ba7500400000f87a9020000c3909090ebb1909090e96dffffff909090909090908b04dd0c00000048c1e0034c3bd00f85ac000000909090909090448b14dd10000000418bc2ffc085c00f8cf901000090909090908904dd10000000f083042400e907feffff9090909090468b04c5140000004585c00f854a000000909090e93fffffff909090909090909090909090448b5610428504d50000000049c1e203498bf2669048b8ffffffffffffffffe8000000000f1f840000000000488b742428e909feffff9090909042833cc50c000000000f85be000000909090e9e2feffff4489442434894c2430488954241890909090909090909090498bf3ba010000004c895c241090e8000000000f1f84000000000085c00f85600000009090909090909090909090909090488b74241048c7c200000000b90100000041b80000000041b900000000bf0000000048c7042400000000666690e8000000000f1f840000000000448b4424348b4c2430488b542418488b742428e9f1fcffff909090448b4424348b4c2430488b542418488b742428e9d6fcffff9090909090418bf048c1e603e9160000000f1f8400000000009090909090498b8f5804000085019090909090909090909090468b0cc50c000000418bc983e1fe418bc1f0420fb10cc50c00000075ca4c895424204c895c241890909090909090909090428b34c51800000048c1e60390e8000000000f1f840000000000e9aafdffff90909090909090909049c1e00341c78784040000ed7dfeff49c78790040000143c0000e8000000000f1f840000000000488b4424209090909090909041c78784040000ed78feff49c7879004000094020000e8000000000f1f84000000000048896c2440e800000000e9a3fafffff448893c24e800000000e977fbfffff448891c24e800000000e9c8fbfffff448891c24e800000000e9c7fcfffff4488d0d43fdffff49898f68040000e928fafffff441c78784040000f512ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f50effff49c7879004000000000000e8000000000f1f84000000000041c78784040000f503ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5f3feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5effeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5ebfeff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 89 56 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD  <||@
  Comment 89 58 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 94 60 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 97 62 rbx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 97 [rax:0, rdx:0, rsi:0, stack:40]at java.io.PrintStream.write(PrintStream.java:620) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 97 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 104 64 rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 104 [rax:0, rdx:0, rsi:0, stack:40]at java.io.PrintStream.write(PrintStream.java:620) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 104 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 111 66 NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0]  <||@
  Comment 111 [rax:0, rdx:0, rbx:0, rsi:0, stack:40]at java.io.PrintStream.write(PrintStream.java:620) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 111 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 118 68 r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 125 70 r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD  <||@
  Comment 128 72 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 135 74 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 139 76 stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 144 78 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 149 80 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 154 82 rax|DWORD = CAS (address: [rbx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rdi|DWORD) accessKind: DWORD  <||@
  Comment 163 84 BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8  <||@
  Comment 169 block B8 null  <||@
  Comment 169 282 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 169 284 NOP  <||@
  Comment 170 286 NOP  <||@
  Comment 171 288 NOP  <||@
  Comment 172 290 NOP  <||@
  Comment 173 292 NOP  <||@
  Comment 174 294 NOP  <||@
  Comment 175 296 NOP  <||@
  Comment 176 298 NOP  <||@
  Comment 177 300 NOP  <||@
  Comment 178 302 NOP  <||@
  Comment 179 304 NOP  <||@
  Comment 180 306 NOP  <||@
  Comment 181 308 NOP  <||@
  Comment 182 310 NOP  <||@
  Comment 183 312 NOP  <||@
  Comment 184 314 NOP  <||@
  Comment 185 316 NOP  <||@
  Comment 186 318 NOP  <||@
  Comment 187 320 NOP  <||@
  Comment 188 322 NOP  <||@
  Comment 189 324 NOP  <||@
  Comment 190 326 NOP  <||@
  Comment 191 328 NOP  <||@
  Comment 192 330 NOP  <||@
  Comment 193 332 NOP  <||@
  Comment 194 334 NOP  <||@
  Comment 195 336 NOP  <||@
  Comment 196 338 NOP  <||@
  Comment 197 340 NOP  <||@
  Comment 198 342 NOP  <||@
  Comment 199 344 NOP  <||@
  Comment 200 346 NOP  <||@
  Comment 201 348 NOP  <||@
  Comment 202 350 NOP  <||@
  Comment 203 352 NOP  <||@
  Comment 204 354 NOP  <||@
  Comment 205 356 NOP  <||@
  Comment 206 358 NOP  <||@
  Comment 207 360 NOP  <||@
  Comment 208 362 NOP  <||@
  Comment 209 364 NOP  <||@
  Comment 210 366 NOP  <||@
  Comment 211 368 NOP  <||@
  Comment 212 370 NOP  <||@
  Comment 213 372 NOP  <||@
  Comment 214 374 NOP  <||@
  Comment 215 376 NOP  <||@
  Comment 216 378 NOP  <||@
  Comment 217 380 NOP  <||@
  Comment 218 382 NOP  <||@
  Comment 219 384 NOP  <||@
  Comment 220 386 NOP  <||@
  Comment 221 388 NOP  <||@
  Comment 222 390 NOP  <||@
  Comment 223 392 NOP  <||@
  Comment 224 394 NOP  <||@
  Comment 225 396 AMD64G1PREWRITEBARRIER (~address: [rbx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267  <||@
  Comment 285 398 rax|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 292 400 MOV (x: [rbx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD  <||@
  Comment 299 402 AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rbx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267  <||@
  Comment 381 404 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 381 block B9 null  <||@
  Comment 381 406 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 381 408 NOP  <||@
  Comment 382 410 NOP  <||@
  Comment 383 412 NOP  <||@
  Comment 384 414 NOP  <||@
  Comment 385 416 NOP  <||@
  Comment 386 418 NOP  <||@
  Comment 387 420 NOP  <||@
  Comment 388 422 NOP  <||@
  Comment 389 424 NOP  <||@
  Comment 390 426 NOP  <||@
  Comment 391 428 NOP  <||@
  Comment 392 430 NOP  <||@
  Comment 393 432 NOP  <||@
  Comment 394 434 NOP  <||@
  Comment 395 436 NOP  <||@
  Comment 396 438 NOP  <||@
  Comment 397 440 NOP  <||@
  Comment 398 442 NOP  <||@
  Comment 399 444 NOP  <||@
  Comment 400 446 NOP  <||@
  Comment 401 448 NOP  <||@
  Comment 402 450 NOP  <||@
  Comment 403 452 rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 406 454 rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11]  <||@
  Comment 406 [rdx:0, rbx:0, rsi:0, stack:32, stack:40]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:621) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 406 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 413 456 r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 423 458 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0  <||@
  Comment 427 460 rax|QWORD = MOV input: [rax|QWORD + 512] size: QWORD  <||@
  Comment 434 462 r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD  <||@
  Comment 438 464 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 442 466 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 445 468 rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 448 470 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 451 472 - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18]  <||@
  Comment 451 {HotSpotMethod<OutputStream.write(byte[], int, int)>}  <||@
  Comment 451 INLINE_INVOKE  <||@
  Comment 453 [stack:40]at java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:40|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.write(PrintStream.java:623) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 461 474 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 466 476 CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null  <||@
  Comment 476 block B10 null  <||@
  Comment 476 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 476 480 NOP  <||@
  Comment 477 482 NOP  <||@
  Comment 478 484 NOP  <||@
  Comment 479 486 JUMP ~outgoingValues: [] destination: B10 -> B12  <||@
  Comment 479 block B12 null  <||@
  Comment 479 528 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 479 530 NOP  <||@
  Comment 480 532 NOP  <||@
  Comment 481 534 NOP  <||@
  Comment 482 536 NOP  <||@
  Comment 483 538 NOP  <||@
  Comment 484 540 NOP  <||@
  Comment 485 542 NOP  <||@
  Comment 486 544 NOP  <||@
  Comment 487 546 NOP  <||@
  Comment 488 548 NOP  <||@
  Comment 489 550 NOP  <||@
  Comment 490 552 NOP  <||@
  Comment 491 554 NOP  <||@
  Comment 492 556 NOP  <||@
  Comment 493 558 NOP  <||@
  Comment 494 560 NOP  <||@
  Comment 495 562 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 499 564 r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18]  <||@
  Comment 499 [rsi:0, r10:0, stack:40]at java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.PrintStream.write(PrintStream.java:623) [bci: 18, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 499 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 507 566 r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18]  <||@
  Comment 507 [rsi:0, r10:0, r11:0, stack:40]at java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.PrintStream.write(PrintStream.java:623) [bci: 18, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 507 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 515 568 r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18]  <||@
  Comment 515 [rsi:0, r8:0, r10:0, r11:0, stack:40]at java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.PrintStream.write(PrintStream.java:623) [bci: 18, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 515 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 523 570 rcx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 531 572 rbx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 538 574 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 542 576 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 546 578 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 550 580 CMPBRANCH (x: rcx|QWORD[.], y: [rbx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD  <||@
  Comment 559 block B13 null  <||@
  Comment 559 582 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 559 584 NOP  <||@
  Comment 560 586 NOP  <||@
  Comment 561 588 NOP  <||@
  Comment 562 590 NOP  <||@
  Comment 563 592 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null  <||@
  Comment 573 block B14 null  <||@
  Comment 573 594 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 573 596 NOP  <||@
  Comment 574 598 NOP  <||@
  Comment 575 600 NOP  <||@
  Comment 576 602 NOP  <||@
  Comment 577 604 NOP  <||@
  Comment 578 606 NOP  <||@
  Comment 579 608 NOP  <||@
  Comment 580 610 NOP  <||@
  Comment 581 612 NOP  <||@
  Comment 582 614 NOP  <||@
  Comment 583 616 NOP  <||@
  Comment 584 618 NOP  <||@
  Comment 585 620 NOP  <||@
  Comment 586 622 NOP  <||@
  Comment 587 624 NOP  <||@
  Comment 588 626 NOP  <||@
  Comment 589 628 NOP  <||@
  Comment 590 630 AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267  <||@
  Comment 651 632 MOV x: [r8|DWORD[_] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 663 634 JUMP ~outgoingValues: [] destination: B14 -> B16  <||@
  Comment 663 block B16 null  <||@
  Comment 663 646 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 663 648 NOP  <||@
  Comment 664 650 NOP  <||@
  Comment 665 652 NOP  <||@
  Comment 666 654 NOP  <||@
  Comment 667 656 NOP  <||@
  Comment 668 658 NOP  <||@
  Comment 669 660 NOP  <||@
  Comment 670 662 rcx|DWORD = DEC value: r9|DWORD size: DWORD  <||@
  Comment 675 664 MOV (x: [r8|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 683 666 MEMBAR barriers: 4  <||@
  Comment 688 668 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null  <||@
  Comment 698 block B17 null  <||@
  Comment 698 670 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 698 672 NOP  <||@
  Comment 699 674 NOP  <||@
  Comment 700 676 NOP  <||@
  Comment 701 678 NOP  <||@
  Comment 702 680 NOP  <||@
  Comment 703 682 r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 711 684 TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 720 block B18 null  <||@
  Comment 720 686 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 720 688 NOP  <||@
  Comment 721 690 NOP  <||@
  Comment 722 692 NOP  <||@
  Comment 723 694 JUMP ~outgoingValues: [] destination: B18 -> B28  <||@
  Comment 723 block B28 null  <||@
  Comment 723 854 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 723 856 NOP  <||@
  Comment 724 858 NOP  <||@
  Comment 725 860 NOP  <||@
  Comment 726 862 NOP  <||@
  Comment 727 864 NOP  <||@
  Comment 728 866 NOP  <||@
  Comment 729 868 NOP  <||@
  Comment 730 870 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 755 {HotSpotForeignCallDescriptor{enableStackReservedZoneEntry(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}@0x7f78b1985d50:CallingConvention[rdi|QWORD]:CallingConvention[rdi|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL}  <||@
  Comment 771 {Field[name=StubRoutines::_throw_delayed_StackOverflowError_entry, type=address, offset=0, address=0x7f78b2050498, value=140155947307648]:0x7f789973d280}  <||@
  Comment 783 POLL_RETURN_FAR  <||@
  Comment 797 block B27 null  <||@
  Comment 797 844 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 797 846 NOP  <||@
  Comment 798 848 NOP  <||@
  Comment 799 850 NOP  <||@
  Comment 800 852 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 802 block B15 null  <||@
  Comment 802 636 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 802 638 NOP  <||@
  Comment 803 640 NOP  <||@
  Comment 804 642 NOP  <||@
  Comment 805 644 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 810 block B1 null  <||@
  Comment 810 86 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 810 88 NOP  <||@
  Comment 811 90 NOP  <||@
  Comment 812 92 NOP  <||@
  Comment 813 94 NOP  <||@
  Comment 814 96 NOP  <||@
  Comment 815 98 NOP  <||@
  Comment 816 100 NOP  <||@
  Comment 817 102 rax|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 824 104 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 828 106 CMPBRANCH (x: r10|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD  <||@
  Comment 837 block B2 null  <||@
  Comment 837 108 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 837 110 NOP  <||@
  Comment 838 112 NOP  <||@
  Comment 839 114 NOP  <||@
  Comment 840 116 NOP  <||@
  Comment 841 118 NOP  <||@
  Comment 842 120 NOP  <||@
  Comment 843 122 r10|DWORD = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 851 124 rax|DWORD = INC value: r10|DWORD size: DWORD  <||@
  Comment 856 126 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 864 block B4 null  <||@
  Comment 864 152 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 864 154 NOP  <||@
  Comment 865 156 NOP  <||@
  Comment 866 158 NOP  <||@
  Comment 867 160 NOP  <||@
  Comment 868 162 NOP  <||@
  Comment 869 164 MOV (x: [rbx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 876 166 MEMBAR barriers: 4  <||@
  Comment 881 168 JUMP ~outgoingValues: [] destination: B4 -> B9  <||@
  Comment 886 block B19 null  <||@
  Comment 886 696 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 886 698 NOP  <||@
  Comment 887 700 NOP  <||@
  Comment 888 702 NOP  <||@
  Comment 889 704 NOP  <||@
  Comment 890 706 NOP  <||@
  Comment 891 708 r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 899 710 TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 908 block B20 null  <||@
  Comment 908 712 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 908 714 NOP  <||@
  Comment 909 716 NOP  <||@
  Comment 910 718 NOP  <||@
  Comment 911 720 JUMP ~outgoingValues: [] destination: B20 -> B28  <||@
  Comment 916 block B11 null  <||@
  Comment 916 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 916 490 NOP  <||@
  Comment 917 492 NOP  <||@
  Comment 918 494 NOP  <||@
  Comment 919 496 NOP  <||@
  Comment 920 498 NOP  <||@
  Comment 921 500 NOP  <||@
  Comment 922 502 NOP  <||@
  Comment 923 504 NOP  <||@
  Comment 924 506 NOP  <||@
  Comment 925 508 NOP  <||@
  Comment 926 510 NOP  <||@
  Comment 927 512 NOP  <||@
  Comment 928 514 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 932 516 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 18]  <||@
  Comment 932 [rsi:0, r10:0, stack:40]at java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.write(PrintStream.java:623) [bci: 18, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 932 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 940 518 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 944 520 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 947 522 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18]  <||@
  Comment 949 INVOKEVIRTUAL  <||@
  Comment 959 {HotSpotMethod<OutputStream.flush()>}  <||@
  Comment 964 [stack:40]at java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.PrintStream.write(PrintStream.java:623) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 972 524 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 977 526 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 982 block B21 null  <||@
  Comment 982 722 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 982 724 NOP  <||@
  Comment 983 726 NOP  <||@
  Comment 984 728 NOP  <||@
  Comment 985 730 NOP  <||@
  Comment 986 732 CMPCONSTBRANCH x: [r8|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null  <||@
  Comment 1001 block B22 null  <||@
  Comment 1001 734 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1001 736 NOP  <||@
  Comment 1002 738 NOP  <||@
  Comment 1003 740 NOP  <||@
  Comment 1004 742 JUMP ~outgoingValues: [] destination: B22 -> B28  <||@
  Comment 1009 block B5 null  <||@
  Comment 1009 170 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1009 172 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1014 174 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1018 176 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1023 178 NOP  <||@
  Comment 1024 180 NOP  <||@
  Comment 1025 182 NOP  <||@
  Comment 1026 184 NOP  <||@
  Comment 1027 186 NOP  <||@
  Comment 1028 188 NOP  <||@
  Comment 1029 190 NOP  <||@
  Comment 1030 192 NOP  <||@
  Comment 1031 194 NOP  <||@
  Comment 1032 196 NOP  <||@
  Comment 1033 198 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1036 200 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1041 202 stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1046 204 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11]  <||@
  Comment 1047 {HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>}  <||@
  Comment 1047 INVOKESPECIAL  <||@
  Comment 1052 [stack:16, stack:24, stack:32, stack:40]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1          
     locals:  |stack:64|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:64|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:621) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:56|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |-  |-   <||@
  Comment 1060 206 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD  <||@
  Comment 1068 block B6 null  <||@
  Comment 1068 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1068 210 NOP  <||@
  Comment 1069 212 NOP  <||@
  Comment 1070 214 NOP  <||@
  Comment 1071 216 NOP  <||@
  Comment 1072 218 NOP  <||@
  Comment 1073 220 NOP  <||@
  Comment 1074 222 NOP  <||@
  Comment 1075 224 NOP  <||@
  Comment 1076 226 NOP  <||@
  Comment 1077 228 NOP  <||@
  Comment 1078 230 NOP  <||@
  Comment 1079 232 NOP  <||@
  Comment 1080 234 NOP  <||@
  Comment 1081 236 NOP  <||@
  Comment 1082 238 rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1087 240 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1094 242 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1099 244 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1105 246 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1111 248 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1116 250 out:0|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1124 252 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11]  <||@
  Comment 1127 {HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>}  <||@
  Comment 1127 INVOKESPECIAL  <||@
  Comment 1132 [stack:16, stack:24, stack:32, stack:40]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:64|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:621) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:56|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |-  |-   <||@
  Comment 1140 254 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1145 256 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1149 258 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1154 260 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1159 262 JUMP ~outgoingValues: [] destination: B6 -> B9  <||@
  Comment 1164 block B7 null  <||@
  Comment 1164 264 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1164 266 NOP  <||@
  Comment 1165 268 NOP  <||@
  Comment 1166 270 NOP  <||@
  Comment 1167 272 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1172 274 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1176 276 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1181 278 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1186 280 JUMP ~outgoingValues: [] destination: B7 -> B9  <||@
  Comment 1191 block B23 null  <||@
  Comment 1191 744 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1191 746 NOP  <||@
  Comment 1192 748 NOP  <||@
  Comment 1193 750 NOP  <||@
  Comment 1194 752 NOP  <||@
  Comment 1195 754 NOP  <||@
  Comment 1196 756 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 1203 758 JUMP ~outgoingValues: [] destination: B23 -> B24  <||@
  Comment 1208 block B25 loop 0 depth 1 header:206|LoopBegin  <||@
  Comment 1208 794 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1216 796 NOP  <||@
  Comment 1217 798 NOP  <||@
  Comment 1218 800 NOP  <||@
  Comment 1219 802 NOP  <||@
  Comment 1220 804 NOP  <||@
  Comment 1221 806 SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25]  <||@
  Comment 1228 [rsi:0, r8:0, r10:0, r11:0, stack:40]at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21, duringCall: false, rethrow: false]
              |0                         |1             |2             |3  |4                           |5        
     locals:  |Object[Unsafe@679697080]  |rsi|QWORD[.]  |long[12|0xc]  |-  |int[-2|0xfffffffffffffffe]  |r9|DWORD 
     stack:   |int[0|0x0]                |              |              |   |                            |         
  at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10, duringCall: true, rethrow: false]
              |0             |1          
     locals:  |rsi|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rsi|QWORD[.] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |r11|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:625) [bci: 25, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1228 {infopoint: SAFEPOINT}  <||@
  Comment 1228 POLL_FAR  <||@
  Comment 1230 808 JUMP ~outgoingValues: [] destination: B25 -> B24  <||@
  Comment 1230 block B24 loop 0 depth 1 header:206|LoopBegin  <||@
  Comment 1230 760 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1230 762 NOP  <||@
  Comment 1231 764 NOP  <||@
  Comment 1232 766 NOP  <||@
  Comment 1233 768 NOP  <||@
  Comment 1234 770 NOP  <||@
  Comment 1235 772 NOP  <||@
  Comment 1236 774 NOP  <||@
  Comment 1237 776 NOP  <||@
  Comment 1238 778 NOP  <||@
  Comment 1239 780 NOP  <||@
  Comment 1240 782 NOP  <||@
  Comment 1241 784 r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1249 786 rcx|DWORD = AND x: r9|DWORD y: -2 size: DWORD  <||@
  Comment 1255 788 rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1258 790 rax|DWORD = CAS (address: [r8|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD  <||@
  Comment 1268 792 BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 1270 block B26 null  <||@
  Comment 1270 810 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1270 812 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1275 814 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1280 816 NOP  <||@
  Comment 1281 818 NOP  <||@
  Comment 1282 820 NOP  <||@
  Comment 1283 822 NOP  <||@
  Comment 1284 824 NOP  <||@
  Comment 1285 826 NOP  <||@
  Comment 1286 828 NOP  <||@
  Comment 1287 830 NOP  <||@
  Comment 1288 832 NOP  <||@
  Comment 1289 834 NOP  <||@
  Comment 1290 836 rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 1298 838 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 1302 840 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25]  <||@
  Comment 1303 {HotSpotMethod<LockSupport.unpark(Thread)>}  <||@
  Comment 1303 INVOKESTATIC  <||@
  Comment 1308 [stack:24, stack:32, stack:40]at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:625) [bci: 25, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1316 842 JUMP ~outgoingValues: [] destination: B26 -> B28  <||@
  Comment 1321 block B29 null  <||@
  Comment 1321 872 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1321 874 NOP  <||@
  Comment 1322 876 NOP  <||@
  Comment 1323 878 NOP  <||@
  Comment 1324 880 NOP  <||@
  Comment 1325 882 NOP  <||@
  Comment 1326 884 NOP  <||@
  Comment 1327 886 NOP  <||@
  Comment 1328 888 NOP  <||@
  Comment 1329 890 NOP  <||@
  Comment 1330 892 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 1334 894 MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD  <||@
  Comment 1345 896 MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD  <||@
  Comment 1356 898 DEOPT info [bci:4, 2, 5, 4, 25]  <||@
  Comment 1356 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1361 [rsi:0, r8:0, r10:0, r11:0]at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4, duringCall: false, rethrow: false]
              |0            |1           |2  |3 
     locals:  |r8|QWORD[.]  |int[1|0x1]  |-  |- 
     stack:   |r9|DWORD     |            |   |  
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r8|QWORD[.]  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |r11|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:625) [bci: 25, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1369 block B3 null  <||@
  Comment 1369 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1369 130 rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1374 132 NOP  <||@
  Comment 1375 134 NOP  <||@
  Comment 1376 136 NOP  <||@
  Comment 1377 138 NOP  <||@
  Comment 1378 140 NOP  <||@
  Comment 1379 142 NOP  <||@
  Comment 1380 144 NOP  <||@
  Comment 1381 146 MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD  <||@
  Comment 1392 148 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 1403 150 DEOPT info [bci:32, 1, 4, 4, 11]  <||@
  Comment 1403 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1408 [rax:0, rdx:0, r11:0, stack:40]at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r11|QWORD[.]  |-  |- 
     stack:   |r10|DWORD     |   |  
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r11|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rax|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:621) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1             |2          |3         |4  |5 
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 1421 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1436 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1451 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1466 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1491 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1519 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1524 [rax:0, rdx:0, rsi:0, stack:40]at java.io.PrintStream.write(PrintStream.java:620) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 1554 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1559 [rax:0, rdx:0, rsi:0, stack:40]at java.io.PrintStream.write(PrintStream.java:620) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 1589 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1594 [rdx:0, rbx:0, rsi:0, stack:32, stack:40]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:621) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 1624 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1629 [rsi:0, r10:0, stack:40]at java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.PrintStream.write(PrintStream.java:623) [bci: 18, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1659 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1664 [rsi:0, r10:0, r11:0, stack:40]at java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.PrintStream.write(PrintStream.java:623) [bci: 18, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1694 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1699 [rsi:0, r8:0, r10:0, r11:0, stack:40]at java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.PrintStream.write(PrintStream.java:623) [bci: 18, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1707 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1707 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1713 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1713 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4960[java.io.PrintStream.write(byte[], int, int)]"
  method "HotSpotCompilation-4960[java.io.PrintStream.write(byte[], int, int)]"
  date 1724269737216
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ade8960 448b560849bc0000002b787f00004d03d44d33e4493bc20f8503c799fe66669089842400c0feff4883ec489041817f20000000000f854e050000909090909090909090909090909090909090909090909090909048896c244048897424288b46188b1cc50c0000008b1cdd0c0000008504dd000000004d8b97800300004d8b12448bdb49c1e30348c1e0034889442420b800000000bf01000000f00fb13cdd100000000f8581020000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f84310000008b3cdd0c00000048c1e7034885ff0f841d000000498b47284883f8000f848a0400004883e8084989472849034738488938498bc248c1e8038904dd0c000000498bdb4933da48c1eb160f8442000000498bdb48c1eb0948b800e0368d787f00004803d8803b027429f083042400803b00741fc60300498b47484885c00f84390400004883e8084989474849034758488918909090909090909090909090909090909090909090908b5e108b04dd0800000049ba0000002b787f0000498d0402488b80000200004c8b504048c1e303488bf3488bd8498bc2ffd00f1f840000000000488b742428807e0d000f85b801000090909090909090909090909090909090909090448b5618468b1cd50c000000468b04dd0c000000468b0cc510000000428b0cc50c000000498b9f8003000048c1e10349c1e30349c1e203483b0b0f85fa020000909090904183f9010f85e5000000909090909090909090909090909090909041807f40000f8432000000428b1cc50c00000048c1e3034885db0f841d000000498b4f284883f9000f843a0300004883e90849894f2849034f3848891942c704c50c0000000000000090909090909090418bc9ffc942890cc510000000f0830424004183f9010f85630000009090909090468b04c5140000004585c00f85a600000090909090909090909090488b6c24404883c448493ba7d804000072234883ec08498bff48b9505d98b1787f0000ffd14883c40848b980d27399787f0000ffe1493ba7500400000f87a9020000c3909090ebb1909090e96dffffff909090909090908b04dd0c00000048c1e0034c3bd00f85ac000000909090909090448b14dd10000000418bc2ffc085c00f8cf901000090909090908904dd10000000f083042400e907feffff9090909090468b04c5140000004585c00f854a000000909090e93fffffff909090909090909090909090448b5610428504d50000000049c1e203498bf2669048b8ffffffffffffffffe85cc999fe0f1f840094050009488b742428e909feffff9090909042833cc50c000000000f85be000000909090e9e2feffff4489442434894c2430488954241890909090909090909090498bf3ba010000004c895c241090e804c699fe0f1f8400ec05000a85c00f85600000009090909090909090909090909090488b74241048c7c200000000b90100000041b80000000041b900000000bf0000000048c7042400000000666690e8b4c599fe0f1f84003c06000b448b4424348b4c2430488b542418488b742428e9f1fcffff909090448b4424348b4c2430488b542418488b742428e9d6fcffff9090909090418bf048c1e603e9160000000f1f8400000000009090909090498b8f5804000085019090909090909090909090468b0cc50c000000418bc983e1fe418bc1f0420fb10cc50c00000075ca4c895424204c895c241890909090909090909090428b34c51800000048c1e60390e804cb99fe0f1f8400ec06000de9aafdffff90909090909090909049c1e00341c78784040000ed7dfeff49c78790040000143c0000e8c9229afe0f1f840000000000488b4424209090909090909041c78784040000ed78feff49c7879004000094020000e89a229afe0f1f84000000000048896c2440e82e2398fee9a3fafffff448893c24e8fff2adfee977fbfffff448891c24e87014aefee9c8fbfffff448891c24e8e1f2adfee9c7fcfffff4488d0d43fdffff49898f68040000e9c8309afef441c78784040000f512ffff49c7879004000000000000e826229afe0f1f84000000000041c78784040000f50effff49c7879004000000000000e803229afe0f1f84000000000041c78784040000f503ffff49c7879004000000000000e8e0219afe0f1f84000000000041c78784040000f5f3feff49c7879004000000000000e8bd219afe0f1f84000000000041c78784040000f5effeff49c7879004000000000000e89a219afe0f1f84000000000041c78784040000f5ebfeff49c7879004000000000000e877219afe0f1f840000000000e8f0c2adfef4e80a1f9afef4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 89 56 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@c21b59a slotKind: QWORD  <||@
  Comment 89 58 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 94 60 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 97 62 rbx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 97 [rax:0, rdx:0, rsi:0, stack:40]at java.io.PrintStream.write(PrintStream.java:620) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 97 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 104 64 rbx|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 104 [rax:0, rdx:0, rsi:0, stack:40]at java.io.PrintStream.write(PrintStream.java:620) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 104 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 111 66 NULLCHECK address: [rbx|DWORD[_] * 8] state [bci:0]  <||@
  Comment 111 [rax:0, rdx:0, rbx:0, rsi:0, stack:40]at java.io.PrintStream.write(PrintStream.java:620) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 111 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 118 68 r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 125 70 r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD  <||@
  Comment 128 72 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 135 74 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 139 76 stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 144 78 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 149 80 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 154 82 rax|DWORD = CAS (address: [rbx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rdi|DWORD) accessKind: DWORD  <||@
  Comment 163 84 BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8  <||@
  Comment 169 block B8 null  <||@
  Comment 169 282 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 169 284 NOP  <||@
  Comment 170 286 NOP  <||@
  Comment 171 288 NOP  <||@
  Comment 172 290 NOP  <||@
  Comment 173 292 NOP  <||@
  Comment 174 294 NOP  <||@
  Comment 175 296 NOP  <||@
  Comment 176 298 NOP  <||@
  Comment 177 300 NOP  <||@
  Comment 178 302 NOP  <||@
  Comment 179 304 NOP  <||@
  Comment 180 306 NOP  <||@
  Comment 181 308 NOP  <||@
  Comment 182 310 NOP  <||@
  Comment 183 312 NOP  <||@
  Comment 184 314 NOP  <||@
  Comment 185 316 NOP  <||@
  Comment 186 318 NOP  <||@
  Comment 187 320 NOP  <||@
  Comment 188 322 NOP  <||@
  Comment 189 324 NOP  <||@
  Comment 190 326 NOP  <||@
  Comment 191 328 NOP  <||@
  Comment 192 330 NOP  <||@
  Comment 193 332 NOP  <||@
  Comment 194 334 NOP  <||@
  Comment 195 336 NOP  <||@
  Comment 196 338 NOP  <||@
  Comment 197 340 NOP  <||@
  Comment 198 342 NOP  <||@
  Comment 199 344 NOP  <||@
  Comment 200 346 NOP  <||@
  Comment 201 348 NOP  <||@
  Comment 202 350 NOP  <||@
  Comment 203 352 NOP  <||@
  Comment 204 354 NOP  <||@
  Comment 205 356 NOP  <||@
  Comment 206 358 NOP  <||@
  Comment 207 360 NOP  <||@
  Comment 208 362 NOP  <||@
  Comment 209 364 NOP  <||@
  Comment 210 366 NOP  <||@
  Comment 211 368 NOP  <||@
  Comment 212 370 NOP  <||@
  Comment 213 372 NOP  <||@
  Comment 214 374 NOP  <||@
  Comment 215 376 NOP  <||@
  Comment 216 378 NOP  <||@
  Comment 217 380 NOP  <||@
  Comment 218 382 NOP  <||@
  Comment 219 384 NOP  <||@
  Comment 220 386 NOP  <||@
  Comment 221 388 NOP  <||@
  Comment 222 390 NOP  <||@
  Comment 223 392 NOP  <||@
  Comment 224 394 NOP  <||@
  Comment 225 396 AMD64G1PREWRITEBARRIER (~address: [rbx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rax|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267  <||@
  Comment 285 398 rax|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 292 400 MOV (x: [rbx|DWORD[_] * 8 + 12], y: rax|DWORD[_]) size: DWORD  <||@
  Comment 299 402 AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rbx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267  <||@
  Comment 381 404 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 381 block B9 null  <||@
  Comment 381 406 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 381 408 NOP  <||@
  Comment 382 410 NOP  <||@
  Comment 383 412 NOP  <||@
  Comment 384 414 NOP  <||@
  Comment 385 416 NOP  <||@
  Comment 386 418 NOP  <||@
  Comment 387 420 NOP  <||@
  Comment 388 422 NOP  <||@
  Comment 389 424 NOP  <||@
  Comment 390 426 NOP  <||@
  Comment 391 428 NOP  <||@
  Comment 392 430 NOP  <||@
  Comment 393 432 NOP  <||@
  Comment 394 434 NOP  <||@
  Comment 395 436 NOP  <||@
  Comment 396 438 NOP  <||@
  Comment 397 440 NOP  <||@
  Comment 398 442 NOP  <||@
  Comment 399 444 NOP  <||@
  Comment 400 446 NOP  <||@
  Comment 401 448 NOP  <||@
  Comment 402 450 NOP  <||@
  Comment 403 452 rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 406 454 rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:12, 4, 4, 11]  <||@
  Comment 406 [rdx:0, rbx:0, rsi:0, stack:32, stack:40]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:621) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 406 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 413 456 r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 423 458 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 140154094223360 shift: 0  <||@
  Comment 427 460 rax|QWORD = MOV input: [rax|QWORD + 512] size: QWORD  <||@
  Comment 434 462 r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD  <||@
  Comment 438 464 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 442 466 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 445 468 rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 448 470 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 451 472 - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD]) temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> state [bci:11, 18]  <||@
  Comment 451 {HotSpotMethod<OutputStream.write(byte[], int, int)>}  <||@
  Comment 451 INLINE_INVOKE  <||@
  Comment 453 [stack:40]at java.io.PrintStream.implWrite(PrintStream.java:643) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:40|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.write(PrintStream.java:623) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 461 474 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 466 476 CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 0.9998969407614273 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 y: 0 size: BYTE inlinedY: null  <||@
  Comment 476 block B10 null  <||@
  Comment 476 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 476 480 NOP  <||@
  Comment 477 482 NOP  <||@
  Comment 478 484 NOP  <||@
  Comment 479 486 JUMP ~outgoingValues: [] destination: B10 -> B12  <||@
  Comment 479 block B12 null  <||@
  Comment 479 528 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 479 530 NOP  <||@
  Comment 480 532 NOP  <||@
  Comment 481 534 NOP  <||@
  Comment 482 536 NOP  <||@
  Comment 483 538 NOP  <||@
  Comment 484 540 NOP  <||@
  Comment 485 542 NOP  <||@
  Comment 486 544 NOP  <||@
  Comment 487 546 NOP  <||@
  Comment 488 548 NOP  <||@
  Comment 489 550 NOP  <||@
  Comment 490 552 NOP  <||@
  Comment 491 554 NOP  <||@
  Comment 492 556 NOP  <||@
  Comment 493 558 NOP  <||@
  Comment 494 560 NOP  <||@
  Comment 495 562 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 499 564 r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18]  <||@
  Comment 499 [rsi:0, r10:0, stack:40]at java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.PrintStream.write(PrintStream.java:623) [bci: 18, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 499 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 507 566 r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:28, 18]  <||@
  Comment 507 [rsi:0, r10:0, r11:0, stack:40]at java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.PrintStream.write(PrintStream.java:623) [bci: 18, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 507 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 515 568 r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 16] size: DWORD state [bci:28, 18]  <||@
  Comment 515 [rsi:0, r8:0, r10:0, r11:0, stack:40]at java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.PrintStream.write(PrintStream.java:623) [bci: 18, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 515 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 523 570 rcx|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 531 572 rbx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 538 574 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 542 576 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 546 578 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 550 580 CMPBRANCH (x: rcx|QWORD[.], y: [rbx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B29 size: QWORD  <||@
  Comment 559 block B13 null  <||@
  Comment 559 582 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 559 584 NOP  <||@
  Comment 560 586 NOP  <||@
  Comment 561 588 NOP  <||@
  Comment 562 590 NOP  <||@
  Comment 563 592 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 1 size: DWORD inlinedY: null  <||@
  Comment 573 block B14 null  <||@
  Comment 573 594 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 573 596 NOP  <||@
  Comment 574 598 NOP  <||@
  Comment 575 600 NOP  <||@
  Comment 576 602 NOP  <||@
  Comment 577 604 NOP  <||@
  Comment 578 606 NOP  <||@
  Comment 579 608 NOP  <||@
  Comment 580 610 NOP  <||@
  Comment 581 612 NOP  <||@
  Comment 582 614 NOP  <||@
  Comment 583 616 NOP  <||@
  Comment 584 618 NOP  <||@
  Comment 585 620 NOP  <||@
  Comment 586 622 NOP  <||@
  Comment 587 624 NOP  <||@
  Comment 588 626 NOP  <||@
  Comment 589 628 NOP  <||@
  Comment 590 630 AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1ff8267  <||@
  Comment 651 632 MOV x: [r8|DWORD[_] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 663 634 JUMP ~outgoingValues: [] destination: B14 -> B16  <||@
  Comment 663 block B16 null  <||@
  Comment 663 646 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 663 648 NOP  <||@
  Comment 664 650 NOP  <||@
  Comment 665 652 NOP  <||@
  Comment 666 654 NOP  <||@
  Comment 667 656 NOP  <||@
  Comment 668 658 NOP  <||@
  Comment 669 660 NOP  <||@
  Comment 670 662 rcx|DWORD = DEC value: r9|DWORD size: DWORD  <||@
  Comment 675 664 MOV (x: [r8|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 683 666 MEMBAR barriers: 4  <||@
  Comment 688 668 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.8620985379543946 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B27 y: 1 size: DWORD inlinedY: null  <||@
  Comment 698 block B17 null  <||@
  Comment 698 670 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 698 672 NOP  <||@
  Comment 699 674 NOP  <||@
  Comment 700 676 NOP  <||@
  Comment 701 678 NOP  <||@
  Comment 702 680 NOP  <||@
  Comment 703 682 r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 711 684 TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 720 block B18 null  <||@
  Comment 720 686 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 720 688 NOP  <||@
  Comment 721 690 NOP  <||@
  Comment 722 692 NOP  <||@
  Comment 723 694 JUMP ~outgoingValues: [] destination: B18 -> B28  <||@
  Comment 723 block B28 null  <||@
  Comment 723 854 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 723 856 NOP  <||@
  Comment 724 858 NOP  <||@
  Comment 725 860 NOP  <||@
  Comment 726 862 NOP  <||@
  Comment 727 864 NOP  <||@
  Comment 728 866 NOP  <||@
  Comment 729 868 NOP  <||@
  Comment 730 870 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 755 {HotSpotForeignCallDescriptor{enableStackReservedZoneEntry(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}@0x7f78b1985d50:CallingConvention[rdi|QWORD]:CallingConvention[rdi|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL}  <||@
  Comment 771 {Field[name=StubRoutines::_throw_delayed_StackOverflowError_entry, type=address, offset=0, address=0x7f78b2050498, value=140155947307648]:0x7f789973d280}  <||@
  Comment 783 POLL_RETURN_FAR  <||@
  Comment 797 block B27 null  <||@
  Comment 797 844 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 797 846 NOP  <||@
  Comment 798 848 NOP  <||@
  Comment 799 850 NOP  <||@
  Comment 800 852 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 802 block B15 null  <||@
  Comment 802 636 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 802 638 NOP  <||@
  Comment 803 640 NOP  <||@
  Comment 804 642 NOP  <||@
  Comment 805 644 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 810 block B1 null  <||@
  Comment 810 86 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 810 88 NOP  <||@
  Comment 811 90 NOP  <||@
  Comment 812 92 NOP  <||@
  Comment 813 94 NOP  <||@
  Comment 814 96 NOP  <||@
  Comment 815 98 NOP  <||@
  Comment 816 100 NOP  <||@
  Comment 817 102 rax|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 824 104 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 828 106 CMPBRANCH (x: r10|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD  <||@
  Comment 837 block B2 null  <||@
  Comment 837 108 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 837 110 NOP  <||@
  Comment 838 112 NOP  <||@
  Comment 839 114 NOP  <||@
  Comment 840 116 NOP  <||@
  Comment 841 118 NOP  <||@
  Comment 842 120 NOP  <||@
  Comment 843 122 r10|DWORD = MOV input: [rbx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 851 124 rax|DWORD = INC value: r10|DWORD size: DWORD  <||@
  Comment 856 126 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 864 block B4 null  <||@
  Comment 864 152 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 864 154 NOP  <||@
  Comment 865 156 NOP  <||@
  Comment 866 158 NOP  <||@
  Comment 867 160 NOP  <||@
  Comment 868 162 NOP  <||@
  Comment 869 164 MOV (x: [rbx|DWORD[_] * 8 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 876 166 MEMBAR barriers: 4  <||@
  Comment 881 168 JUMP ~outgoingValues: [] destination: B4 -> B9  <||@
  Comment 886 block B19 null  <||@
  Comment 886 696 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 886 698 NOP  <||@
  Comment 887 700 NOP  <||@
  Comment 888 702 NOP  <||@
  Comment 889 704 NOP  <||@
  Comment 890 706 NOP  <||@
  Comment 891 708 r8|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 899 710 TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 908 block B20 null  <||@
  Comment 908 712 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 908 714 NOP  <||@
  Comment 909 716 NOP  <||@
  Comment 910 718 NOP  <||@
  Comment 911 720 JUMP ~outgoingValues: [] destination: B20 -> B28  <||@
  Comment 916 block B11 null  <||@
  Comment 916 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 916 490 NOP  <||@
  Comment 917 492 NOP  <||@
  Comment 918 494 NOP  <||@
  Comment 919 496 NOP  <||@
  Comment 920 498 NOP  <||@
  Comment 921 500 NOP  <||@
  Comment 922 502 NOP  <||@
  Comment 923 504 NOP  <||@
  Comment 924 506 NOP  <||@
  Comment 925 508 NOP  <||@
  Comment 926 510 NOP  <||@
  Comment 927 512 NOP  <||@
  Comment 928 514 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 932 516 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:14, 18]  <||@
  Comment 932 [rsi:0, r10:0, stack:40]at java.io.PrintStream.implWrite(PrintStream.java:644) [bci: 14, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.write(PrintStream.java:623) [bci: 18, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 932 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 940 518 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 944 520 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 947 522 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<OutputStream.flush()> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 18]  <||@
  Comment 949 INVOKEVIRTUAL  <||@
  Comment 959 {HotSpotMethod<OutputStream.flush()>}  <||@
  Comment 964 [stack:40]at java.io.PrintStream.implWrite(PrintStream.java:645) [bci: 25, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.PrintStream.write(PrintStream.java:623) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 972 524 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 977 526 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 982 block B21 null  <||@
  Comment 982 722 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 982 724 NOP  <||@
  Comment 983 726 NOP  <||@
  Comment 984 728 NOP  <||@
  Comment 985 730 NOP  <||@
  Comment 986 732 CMPCONSTBRANCH x: [r8|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 0 size: DWORD inlinedY: null  <||@
  Comment 1001 block B22 null  <||@
  Comment 1001 734 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1001 736 NOP  <||@
  Comment 1002 738 NOP  <||@
  Comment 1003 740 NOP  <||@
  Comment 1004 742 JUMP ~outgoingValues: [] destination: B22 -> B28  <||@
  Comment 1009 block B5 null  <||@
  Comment 1009 170 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1009 172 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1014 174 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1018 176 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1023 178 NOP  <||@
  Comment 1024 180 NOP  <||@
  Comment 1025 182 NOP  <||@
  Comment 1026 184 NOP  <||@
  Comment 1027 186 NOP  <||@
  Comment 1028 188 NOP  <||@
  Comment 1029 190 NOP  <||@
  Comment 1030 192 NOP  <||@
  Comment 1031 194 NOP  <||@
  Comment 1032 196 NOP  <||@
  Comment 1033 198 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1036 200 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1041 202 stack:64|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1046 204 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11]  <||@
  Comment 1047 {HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>}  <||@
  Comment 1047 INVOKESPECIAL  <||@
  Comment 1052 [stack:16, stack:24, stack:32, stack:40]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1          
     locals:  |stack:64|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:64|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:621) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:56|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |-  |-   <||@
  Comment 1060 206 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7320887991927346 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD  <||@
  Comment 1068 block B6 null  <||@
  Comment 1068 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1068 210 NOP  <||@
  Comment 1069 212 NOP  <||@
  Comment 1070 214 NOP  <||@
  Comment 1071 216 NOP  <||@
  Comment 1072 218 NOP  <||@
  Comment 1073 220 NOP  <||@
  Comment 1074 222 NOP  <||@
  Comment 1075 224 NOP  <||@
  Comment 1076 226 NOP  <||@
  Comment 1077 228 NOP  <||@
  Comment 1078 230 NOP  <||@
  Comment 1079 232 NOP  <||@
  Comment 1080 234 NOP  <||@
  Comment 1081 236 NOP  <||@
  Comment 1082 238 rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1087 240 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1094 242 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1099 244 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1105 246 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1111 248 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1116 250 out:0|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1124 252 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11]  <||@
  Comment 1127 {HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>}  <||@
  Comment 1127 INVOKESPECIAL  <||@
  Comment 1132 [stack:16, stack:24, stack:32, stack:40]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:64|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:621) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:56|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |-  |-   <||@
  Comment 1140 254 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1145 256 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1149 258 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1154 260 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1159 262 JUMP ~outgoingValues: [] destination: B6 -> B9  <||@
  Comment 1164 block B7 null  <||@
  Comment 1164 264 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1164 266 NOP  <||@
  Comment 1165 268 NOP  <||@
  Comment 1166 270 NOP  <||@
  Comment 1167 272 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1172 274 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1176 276 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1181 278 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1186 280 JUMP ~outgoingValues: [] destination: B7 -> B9  <||@
  Comment 1191 block B23 null  <||@
  Comment 1191 744 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1191 746 NOP  <||@
  Comment 1192 748 NOP  <||@
  Comment 1193 750 NOP  <||@
  Comment 1194 752 NOP  <||@
  Comment 1195 754 NOP  <||@
  Comment 1196 756 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 1203 758 JUMP ~outgoingValues: [] destination: B23 -> B24  <||@
  Comment 1208 block B25 loop 0 depth 1 header:206|LoopBegin  <||@
  Comment 1208 794 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1216 796 NOP  <||@
  Comment 1217 798 NOP  <||@
  Comment 1218 800 NOP  <||@
  Comment 1219 802 NOP  <||@
  Comment 1220 804 NOP  <||@
  Comment 1221 806 SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25]  <||@
  Comment 1228 [rsi:0, r8:0, r10:0, r11:0, stack:40]at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21, duringCall: false, rethrow: false]
              |0                         |1             |2             |3  |4                           |5        
     locals:  |Object[Unsafe@679697080]  |rsi|QWORD[.]  |long[12|0xc]  |-  |int[-2|0xfffffffffffffffe]  |r9|DWORD 
     stack:   |int[0|0x0]                |              |              |   |                            |         
  at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10, duringCall: true, rethrow: false]
              |0             |1          
     locals:  |rsi|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rsi|QWORD[.] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |r11|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:625) [bci: 25, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1228 {infopoint: SAFEPOINT}  <||@
  Comment 1228 POLL_FAR  <||@
  Comment 1230 808 JUMP ~outgoingValues: [] destination: B25 -> B24  <||@
  Comment 1230 block B24 loop 0 depth 1 header:206|LoopBegin  <||@
  Comment 1230 760 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1230 762 NOP  <||@
  Comment 1231 764 NOP  <||@
  Comment 1232 766 NOP  <||@
  Comment 1233 768 NOP  <||@
  Comment 1234 770 NOP  <||@
  Comment 1235 772 NOP  <||@
  Comment 1236 774 NOP  <||@
  Comment 1237 776 NOP  <||@
  Comment 1238 778 NOP  <||@
  Comment 1239 780 NOP  <||@
  Comment 1240 782 NOP  <||@
  Comment 1241 784 r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1249 786 rcx|DWORD = AND x: r9|DWORD y: -2 size: DWORD  <||@
  Comment 1255 788 rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1258 790 rax|DWORD = CAS (address: [r8|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD  <||@
  Comment 1268 792 BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 1270 block B26 null  <||@
  Comment 1270 810 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1270 812 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1275 814 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1280 816 NOP  <||@
  Comment 1281 818 NOP  <||@
  Comment 1282 820 NOP  <||@
  Comment 1283 822 NOP  <||@
  Comment 1284 824 NOP  <||@
  Comment 1285 826 NOP  <||@
  Comment 1286 828 NOP  <||@
  Comment 1287 830 NOP  <||@
  Comment 1288 832 NOP  <||@
  Comment 1289 834 NOP  <||@
  Comment 1290 836 rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 1298 838 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 1302 840 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25]  <||@
  Comment 1303 {HotSpotMethod<LockSupport.unpark(Thread)>}  <||@
  Comment 1303 INVOKESTATIC  <||@
  Comment 1308 [stack:24, stack:32, stack:40]at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:625) [bci: 25, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1316 842 JUMP ~outgoingValues: [] destination: B26 -> B28  <||@
  Comment 1321 block B29 null  <||@
  Comment 1321 872 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1321 874 NOP  <||@
  Comment 1322 876 NOP  <||@
  Comment 1323 878 NOP  <||@
  Comment 1324 880 NOP  <||@
  Comment 1325 882 NOP  <||@
  Comment 1326 884 NOP  <||@
  Comment 1327 886 NOP  <||@
  Comment 1328 888 NOP  <||@
  Comment 1329 890 NOP  <||@
  Comment 1330 892 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@21695aac encoding: base: 0 shift: 3  <||@
  Comment 1334 894 MOV x: [r15|QWORD + 1156] y: -98835 size: DWORD  <||@
  Comment 1345 896 MOV x: [r15|QWORD + 1168] y: 15380 size: QWORD  <||@
  Comment 1356 898 DEOPT info [bci:4, 2, 5, 4, 25]  <||@
  Comment 1356 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1361 [rsi:0, r8:0, r10:0, r11:0]at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4, duringCall: false, rethrow: false]
              |0            |1           |2  |3 
     locals:  |r8|QWORD[.]  |int[1|0x1]  |-  |- 
     stack:   |r9|DWORD     |            |   |  
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r8|QWORD[.]  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |r11|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:625) [bci: 25, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1369 block B3 null  <||@
  Comment 1369 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1369 130 rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1374 132 NOP  <||@
  Comment 1375 134 NOP  <||@
  Comment 1376 136 NOP  <||@
  Comment 1377 138 NOP  <||@
  Comment 1378 140 NOP  <||@
  Comment 1379 142 NOP  <||@
  Comment 1380 144 NOP  <||@
  Comment 1381 146 MOV x: [r15|QWORD + 1156] y: -100115 size: DWORD  <||@
  Comment 1392 148 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 1403 150 DEOPT info [bci:32, 1, 4, 4, 11]  <||@
  Comment 1403 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1408 [rax:0, rdx:0, r11:0, stack:40]at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r11|QWORD[.]  |-  |- 
     stack:   |r10|DWORD     |   |  
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r11|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rax|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:621) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1             |2          |3         |4  |5 
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 1421 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1436 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1451 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1466 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1491 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1519 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1524 [rax:0, rdx:0, rsi:0, stack:40]at java.io.PrintStream.write(PrintStream.java:620) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 1554 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1559 [rax:0, rdx:0, rsi:0, stack:40]at java.io.PrintStream.write(PrintStream.java:620) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 1589 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1594 [rdx:0, rbx:0, rsi:0, stack:32, stack:40]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:621) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 1624 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1629 [rsi:0, r10:0, stack:40]at java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.PrintStream.write(PrintStream.java:623) [bci: 18, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1659 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1664 [rsi:0, r10:0, r11:0, stack:40]at java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.PrintStream.write(PrintStream.java:623) [bci: 18, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1694 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1699 [rsi:0, r8:0, r10:0, r11:0, stack:40]at java.io.PrintStream.implWrite(PrintStream.java:646) [bci: 28, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.PrintStream.write(PrintStream.java:623) [bci: 18, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1707 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1707 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1713 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1713 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
