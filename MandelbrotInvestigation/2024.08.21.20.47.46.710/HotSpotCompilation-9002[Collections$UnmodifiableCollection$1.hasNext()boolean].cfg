begin_compilation
  name " HotSpotCompilation-9002[java.util.Collections$UnmodifiableCollection$1.hasNext()]"
  method "HotSpotCompilation-9002[java.util.Collections$UnmodifiableCollection$1.hasNext()]"
  date 1724269760582
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a123 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a123  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.Collections$UnmodifiableCollection$1
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v132 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a123 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Collections$UnmodifiableCollection$1.i
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 1]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v132 
lastLocationAccess: - 
=== Succesors ===
next: v124 
=== Usages ===
v139 v133 v134 v136 v138 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v132 lastLocationAccess: - #next: v124  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Collections$UnmodifiableCollection$1.hasNext()>
localsSize: 1
locksSize: 0
sourceFile: Collections.java
sourceLine: 1077
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v140 v124 i126 i129 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a123 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-14603|0xffffffffffffc6f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v139 
lastLocationAccess: - 
=== Succesors ===
next: v31 
=== Usages ===
v122 
=== Predecessor ===
a123 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v139 lastLocationAccess: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v124 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v124  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a123 
=== Succesors ===
=== Usages ===
i127 i130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a123  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:1044) [bci: 11]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i41 i47 i51 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:1044) [bci: 11]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i41 i47 i51 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}]
keySuccessors: [I@6b6a6dd
keys: [HotSpotType<Ljava/util/ArrayList$Itr;, resolved>, HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>, HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>, HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>]
profileData: PROFILED keyProbabilities: [0.9824909705736175, 0.017495486979614554, 1.0833957414421893E-5, 2.7084893536054733E-6, 0.0]
stamp: void
=== Inputs ===
value: v122 
=== Succesors ===
successors: v13 v18 v23 v26 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v122 #successors: v13 v18 v23 v26  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a125 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a125  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a123 
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a125 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.ArrayList
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList$Itr.this$0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:1044) [bci: 5]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: n# java.util.ArrayList
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v134 
lastLocationAccess: - 
=== Succesors ===
next: i126 
=== Usages ===
v135 
=== Predecessor ===
v13 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v134 lastLocationAccess: - #next: i126  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a125 
=== Succesors ===
=== Usages ===
i126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-16651|0xffffffffffffbef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:1044) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v135 
lastLocationAccess: - 
=== Succesors ===
next: i127 
=== Usages ===
v38 
=== Predecessor ===
a125 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v135 lastLocationAccess: - #next: i127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList$Itr.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:1044) [bci: 1]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v133 
lastLocationAccess: - 
=== Succesors ===
next: v14 
=== Usages ===
v38 
=== Predecessor ===
i126 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v133 lastLocationAccess: - #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:1044) [bci: 11]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i126 
y: i127 
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i126 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:1044) [bci: 11]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v38 
trueValue: i39 
falseValue: i40 
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v38 trueValue: i39 falseValue: i40  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
i127 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a128 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a128  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a123 
=== Succesors ===
=== Usages ===
a128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a128 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Arrays$ArrayItr.a
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays$ArrayItr.hasNext(Arrays.java:4339) [bci: 5]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v136 
lastLocationAccess: - 
=== Succesors ===
next: i129 
=== Usages ===
v137 
=== Predecessor ===
v18 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v136 lastLocationAccess: - #next: i129  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a128 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-19467|0xffffffffffffb3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays$ArrayItr.hasNext(Arrays.java:4339) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v137 
lastLocationAccess: - 
=== Succesors ===
next: i130 
=== Usages ===
v46 
=== Predecessor ===
a128 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v137 lastLocationAccess: - #next: i130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Arrays$ArrayItr.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays$ArrayItr.hasNext(Arrays.java:4339) [bci: 1]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v133 
lastLocationAccess: - 
=== Succesors ===
next: v19 
=== Usages ===
v46 
=== Predecessor ===
i129 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v133 lastLocationAccess: - #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays$ArrayItr.hasNext(Arrays.java:4339) [bci: 9]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i130 
y: i129 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i130 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayItr.hasNext(Arrays.java:4339) [bci: 9]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v46 
trueValue: i40 
falseValue: i39 
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v46 trueValue: i40 falseValue: i39  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
i130 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a131 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a131  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a123 
=== Succesors ===
=== Usages ===
a131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a131 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1598) [bci: 1]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v138 
lastLocationAccess: - 
=== Succesors ===
next: v24 
=== Usages ===
v85 
=== Predecessor ===
v23 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v138 lastLocationAccess: - #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1598) [bci: 4]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a131 
=== Succesors ===
=== Usages ===
i51 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a131  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1598) [bci: 4]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v85 
trueValue: i39 
falseValue: i40 
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v85 trueValue: i39 falseValue: i40  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
a131 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v8 
values: i41 i47 i51 
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v8 values: i41 i47 i51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v14 v19 v24 
=== Succesors ===
next: v7 
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v14 v19 v24 #next: v7  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 9]
stamp: void
=== Inputs ===
memoryMap: - 
result: i9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 25
mayConvertToGuard: true
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
reason: TypeCheckedInliningViolated
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x680fe81]: FallbackDeopt@9[HotSpotMethod<Collections$UnmodifiableCollection$1.hasNext()>, 4, FALSE, jdk.graal.compiler.phases.common.inlining.InliningUtil$ReceiverTypeSpeculationContext, HotSpotType<Ljava/util/ArrayList$Itr;, resolved>, HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>, HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>, HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>]}
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v10|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD[_], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a123 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a123  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.Collections$UnmodifiableCollection$1
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v132 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a123 <|@
result v1|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Collections$UnmodifiableCollection$1.i
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 1]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v132 
lastLocationAccess: - 
=== Succesors ===
next: v124 
=== Usages ===
v139 v133 v134 v136 v138 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v132 lastLocationAccess: - #next: v124  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Collections$UnmodifiableCollection$1.hasNext()>
localsSize: 1
locksSize: 0
sourceFile: Collections.java
sourceLine: 1077
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v140 v124 i126 i129 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
result [v1|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a123 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-14603|0xffffffffffffc6f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v139 
lastLocationAccess: - 
=== Succesors ===
next: v31 
=== Usages ===
v122 
=== Predecessor ===
a123 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v139 lastLocationAccess: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v124 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v124  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
result [v1|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a123 
=== Succesors ===
=== Usages ===
i127 i130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a123  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:1044) [bci: 11]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i41 i47 i51 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:1044) [bci: 11]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i41 i47 i51 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}]
keySuccessors: [I@6b6a6dd
keys: [HotSpotType<Ljava/util/ArrayList$Itr;, resolved>, HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>, HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>, HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>]
profileData: PROFILED keyProbabilities: [0.9824909705736175, 0.017495486979614554, 1.0833957414421893E-5, 2.7084893536054733E-6, 0.0]
stamp: void
=== Inputs ===
value: v122 
=== Succesors ===
successors: v13 v18 v23 v26 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v122 #successors: v13 v18 v23 v26  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a125 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a125  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
result [v1|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a123 
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a125 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.ArrayList
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList$Itr.this$0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:1044) [bci: 5]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: n# java.util.ArrayList
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v134 
lastLocationAccess: - 
=== Succesors ===
next: i126 
=== Usages ===
v135 
=== Predecessor ===
v13 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v134 lastLocationAccess: - #next: i126  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
result [v5|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a125 
=== Succesors ===
=== Usages ===
i126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i126 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-16651|0xffffffffffffbef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:1044) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v135 
lastLocationAccess: - 
=== Succesors ===
next: i127 
=== Usages ===
v38 
=== Predecessor ===
a125 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v135 lastLocationAccess: - #next: i127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i127 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList$Itr.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:1044) [bci: 1]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v133 
lastLocationAccess: - 
=== Succesors ===
next: v14 
=== Usages ===
v38 
=== Predecessor ===
i126 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v133 lastLocationAccess: - #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:1044) [bci: 11]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i126 
y: i127 
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i126 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:1044) [bci: 11]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v38 
trueValue: i39 
falseValue: i40 
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v38 trueValue: i39 falseValue: i40  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
i127 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a128 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a128  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
result [v1|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a123 
=== Succesors ===
=== Usages ===
a128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a128 <|@
result v9|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Arrays$ArrayItr.a
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays$ArrayItr.hasNext(Arrays.java:4339) [bci: 5]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v136 
lastLocationAccess: - 
=== Succesors ===
next: i129 
=== Usages ===
v137 
=== Predecessor ===
v18 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v136 lastLocationAccess: - #next: i129  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
result [v9|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a128 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i129 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-19467|0xffffffffffffb3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays$ArrayItr.hasNext(Arrays.java:4339) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v137 
lastLocationAccess: - 
=== Succesors ===
next: i130 
=== Usages ===
v46 
=== Predecessor ===
a128 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v137 lastLocationAccess: - #next: i130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i130 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Arrays$ArrayItr.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays$ArrayItr.hasNext(Arrays.java:4339) [bci: 1]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v133 
lastLocationAccess: - 
=== Succesors ===
next: v19 
=== Usages ===
v46 
=== Predecessor ===
i129 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v133 lastLocationAccess: - #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays$ArrayItr.hasNext(Arrays.java:4339) [bci: 9]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i130 
y: i129 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i130 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayItr.hasNext(Arrays.java:4339) [bci: 9]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v46 
trueValue: i40 
falseValue: i39 
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v46 trueValue: i40 falseValue: i39  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
i130 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v10|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a131 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a131  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
result [v1|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a123 
=== Succesors ===
=== Usages ===
a131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a131 <|@
result v13|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1598) [bci: 1]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v138 
lastLocationAccess: - 
=== Succesors ===
next: v24 
=== Usages ===
v85 
=== Predecessor ===
v23 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v138 lastLocationAccess: - #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1598) [bci: 4]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a131 
=== Succesors ===
=== Usages ===
i51 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a131  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1598) [bci: 4]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v85 
trueValue: i39 
falseValue: i40 
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v85 trueValue: i39 falseValue: i40  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
a131 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD[_], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i9 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v8 
values: i41 i47 i51 
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v8 values: i41 i47 i51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v14 v19 v24 
=== Succesors ===
next: v7 
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v14 v19 v24 #next: v7  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 9]
stamp: void
=== Inputs ===
memoryMap: - 
result: i9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 25
mayConvertToGuard: true
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 4]
reason: TypeCheckedInliningViolated
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x680fe81]: FallbackDeopt@9[HotSpotMethod<Collections$UnmodifiableCollection$1.hasNext()>, 4, FALSE, jdk.graal.compiler.phases.common.inlining.InliningUtil$ReceiverTypeSpeculationContext, HotSpotType<Ljava/util/ArrayList$Itr;, resolved>, HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>, HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>, HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>]}
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v10|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD[_], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v10|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD[_], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v10|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD[_], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v10|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD[_], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v10|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD[_], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v4|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction v5|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v7|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction v8|DWORD = SETCC condition: != <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v9|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v10|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction v11|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction v12|DWORD = SETCC condition: > <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction v13|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: v13|DWORD[_], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction v14|DWORD = SETCC condition: != <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v4|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction v5|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v7|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction v8|DWORD = SETCC condition: != <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v9|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v10|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction v11|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction v12|DWORD = SETCC condition: > <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction v13|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: v13|DWORD[_], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction v14|DWORD = SETCC condition: != <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v15|d [0, 1[[104, 106[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 38[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 42[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [42, 77[[108, 131[[164, 185[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [44, 78[[108, 132[[140, 156[44 MustHaveRegister 46 MustHaveRegister 74 MustHaveRegister 78 MustHaveRegister 128 MustHaveRegister 132 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [46, 50[46 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q v2|d [50, 53[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [48, 51[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [76, 80[76 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [78, 80[78 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v15|d [82, 85[82 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [130, 134[130 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [132, 134[132 MustHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [136, 139[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [156, 158[156 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [160, 163[160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v8|d [86, 104[104 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v15|d [0, 1[[104, 106[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 38[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 42[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [42, 77[[108, 131[[164, 185[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r10|d]" v1|d -1 [44, 78[[108, 132[[140, 156[44 MustHaveRegister 46 MustHaveRegister 74 MustHaveRegister 78 MustHaveRegister 128 MustHaveRegister 132 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [46, 50[46 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[rax|q]" v3|q v2|d [50, 53[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [48, 51[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [76, 80[76 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d -1 [78, 80[78 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d v15|d [82, 85[82 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r11|d]" v9|d -1 [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d -1 [130, 134[130 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d -1 [132, 134[132 MustHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d -1 [136, 139[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [156, 158[156 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [160, 163[160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d v8|d [86, 104[104 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v4|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction v5|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v7|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction v8|DWORD = SETCC condition: != <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v9|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v10|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction v11|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction v12|DWORD = SETCC condition: > <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction v13|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: v13|DWORD[_], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction v14|DWORD = SETCC condition: != <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v15|d [0, 1[[104, 106[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 38[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 42[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [42, 77[[108, 131[[164, 185[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r10|d]" v1|d -1 [44, 78[[108, 132[[140, 156[44 MustHaveRegister 46 MustHaveRegister 74 MustHaveRegister 78 MustHaveRegister 128 MustHaveRegister 132 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [46, 50[46 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[rax|q]" v3|q v2|d [50, 53[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [48, 51[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [76, 80[76 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d -1 [78, 80[78 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d v15|d [82, 85[82 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r11|d]" v9|d -1 [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d -1 [130, 134[130 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d -1 [132, 134[132 MustHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d -1 [136, 139[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [156, 158[156 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [160, 163[160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d v8|d [86, 104[104 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v4|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction v5|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v7|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction v8|DWORD = SETCC condition: != <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v9|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v10|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction v11|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction v12|DWORD = SETCC condition: > <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction v13|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: v13|DWORD[_], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction v14|DWORD = SETCC condition: != <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v15|d [0, 1[[104, 106[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 38[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 42[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [42, 77[[108, 131[[164, 185[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r10|d]" v1|d -1 [44, 78[[108, 132[[140, 156[44 MustHaveRegister 46 MustHaveRegister 74 MustHaveRegister 78 MustHaveRegister 128 MustHaveRegister 132 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [46, 50[46 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[rax|q]" v3|q v2|d [50, 53[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [48, 51[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [76, 80[76 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d -1 [78, 80[78 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d v15|d [82, 85[82 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r11|d]" v9|d -1 [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d -1 [130, 134[130 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d -1 [132, 134[132 MustHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d -1 [136, 139[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [156, 158[156 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [160, 163[160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d v8|d [86, 104[104 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v4|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction v5|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v7|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction v8|DWORD = SETCC condition: != <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v9|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v10|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction v11|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction v12|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction v13|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: v13|DWORD[_], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction v14|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v4|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v3|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction v5|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v7|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction v8|DWORD = SETCC condition: != <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v9|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v10|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction v11|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction v12|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction v13|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: v13|DWORD[_], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction v14|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction r10|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: r10|DWORD[_], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction r10|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction r10|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: r10|DWORD[_], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction r10|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction r10|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: r10|DWORD[_], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction r10|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction r10|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: r10|DWORD[_], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction r10|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction r10|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: r10|DWORD[_], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction r10|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction r10|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: r10|DWORD[_], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction r10|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction r10|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: r10|DWORD[_], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction r10|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction r10|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: r10|DWORD[_], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction r10|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction r10|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: r10|DWORD[_], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction r10|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction r10|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: r10|DWORD[_], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction r10|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction r10|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: r10|DWORD[_], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction r10|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction r10|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: r10|DWORD[_], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction r10|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   50  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   52  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607024711483216857
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4580699952201515614
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction r10|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4534111675096520829
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: r10|DWORD[_], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction r10|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  184  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f852c01000090909090909090909090909090909090909048896c2410448b560c428b04d50800000049bb0000002b787f0000498d0403483b05000000000f842c000000483b05000000000f8467000000483b05000000000f848b000000483b05000000000f847e000000e998000000909090909090909090428b04d5180000008b04c510000000468b14d50c000000443bd00f95c00fb6c09090909090909090488b6c24104883c418493ba7500400000f878b000000c3909090909090909090468b1cd510000000468b1cdd0c000000468b14d50c000000453bda410f9fc2450fb6d2418bc2ebb090909090909090468b14d5140000004585d2410f95c2450fb6d2418bc2eb919090909090909041c78784040000cde6ffff49c7879004000014000000e8000000000f1f84000000000048896c2410e800000000e9c5fefffff4488d0d61ffffff49898f68040000e977fefffff441c78784040000f5c6ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5beffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5b3ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 81 40 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD  <||@
  Comment 81 44 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 85 46 rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 85 [rsi:0, r10:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 93 48 r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 103 50 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0  <||@
  Comment 107 52 AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 107 {DataSection[0x0]}  <||@
  Comment 120 {DataSection[0x8]}  <||@
  Comment 133 {DataSection[0x10]}  <||@
  Comment 146 {DataSection[0x18]}  <||@
  Comment 164 block B1 null  <||@
  Comment 164 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 164 56 NOP  <||@
  Comment 165 58 NOP  <||@
  Comment 166 60 NOP  <||@
  Comment 167 62 NOP  <||@
  Comment 168 64 NOP  <||@
  Comment 169 66 NOP  <||@
  Comment 170 68 NOP  <||@
  Comment 171 70 NOP  <||@
  Comment 172 72 NOP  <||@
  Comment 173 74 rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 181 76 rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD state [bci:0]  <||@
  Comment 181 [rsi:0, r10:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 181 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 188 78 r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 196 80 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 199 82 rax|DWORD = SETCC condition: !=  <||@
  Comment 205 84 JUMP ~outgoingValues: [] destination: B1 -> B4  <||@
  Comment 205 block B4 null  <||@
  Comment 205 86 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 205 88 NOP  <||@
  Comment 206 90 NOP  <||@
  Comment 207 92 NOP  <||@
  Comment 208 94 NOP  <||@
  Comment 209 96 NOP  <||@
  Comment 210 98 NOP  <||@
  Comment 211 100 NOP  <||@
  Comment 212 102 NOP  <||@
  Comment 213 106 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 222 POLL_RETURN_FAR  <||@
  Comment 236 block B2 null  <||@
  Comment 236 108 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 236 110 NOP  <||@
  Comment 237 112 NOP  <||@
  Comment 238 114 NOP  <||@
  Comment 239 116 NOP  <||@
  Comment 240 118 NOP  <||@
  Comment 241 120 NOP  <||@
  Comment 242 122 NOP  <||@
  Comment 243 124 NOP  <||@
  Comment 244 126 NOP  <||@
  Comment 245 128 r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 253 130 r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 253 [rsi:0, r10:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 253 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 261 132 r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 269 134 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 272 136 r10|DWORD = SETCC condition: >  <||@
  Comment 280 -1 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 283 138 JUMP ~outgoingValues: [] destination: B2 -> B4  <||@
  Comment 285 block B3 null  <||@
  Comment 285 140 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 285 142 NOP  <||@
  Comment 286 144 NOP  <||@
  Comment 287 146 NOP  <||@
  Comment 288 148 NOP  <||@
  Comment 289 150 NOP  <||@
  Comment 290 152 NOP  <||@
  Comment 291 154 NOP  <||@
  Comment 292 156 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 300 158 TEST (x: r10|DWORD[_], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 303 160 r10|DWORD = SETCC condition: !=  <||@
  Comment 311 -1 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 314 162 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 316 block B5 null  <||@
  Comment 316 164 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 316 166 NOP  <||@
  Comment 317 168 NOP  <||@
  Comment 318 170 NOP  <||@
  Comment 319 172 NOP  <||@
  Comment 320 174 NOP  <||@
  Comment 321 176 NOP  <||@
  Comment 322 178 NOP  <||@
  Comment 323 180 MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD  <||@
  Comment 334 182 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 345 184 DEOPT info [bci:0]  <||@
  Comment 345 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 350 [rsi:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 363 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 388 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 416 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 421 [rsi:0, r10:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 451 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 456 [rsi:0, r10:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 486 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 491 [rsi:0, r10:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 499 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 499 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 505 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 505 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9002[java.util.Collections$UnmodifiableCollection$1.hasNext()]"
  method "HotSpotCompilation-9002[java.util.Collections$UnmodifiableCollection$1.hasNext()]"
  date 1724269760675
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af3a560 448b560849bc0000002b787f00004d03d44d33e4493bc20f8503ab84fe66669089842400c0feff4883ec189041817f20030000000f852c01000090909090909090909090909090909090909048896c2410448b560c428b04d50800000049bb0000002b787f0000498d0403483b056effffff0f842c000000483b0569ffffff0f8467000000483b0564ffffff0f848b000000483b055fffffff0f847e000000e998000000909090909090909090428b04d5180000008b04c510000000468b14d50c000000443bd00f95c00fb6c09090909090909090488b6c24104883c418493ba7500400000f878b000000c3909090909090909090468b1cd510000000468b1cdd0c000000468b14d50c000000453bda410f9fc2450fb6d2418bc2ebb090909090909090468b14d5140000004585d2410f95c2450fb6d2418bc2eb919090909090909041c78784040000cde6ffff49c7879004000014000000e8bc0a85fe0f1f84000000000048896c2410e8500b83fee9c5fefffff4488d0d61ffffff49898f68040000e9171985fef441c78784040000f5c6ffff49c7879004000000000000e8750a85fe0f1f84000000000041c78784040000f5beffff49c7879004000000000000e8520a85fe0f1f84000000000041c78784040000f5b3ffff49c7879004000000000000e82f0a85fe0f1f840000000000e8a8ab98fef4e8c20785fef4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 81 40 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53263482 slotKind: QWORD  <||@
  Comment 81 44 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 85 46 rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 85 [rsi:0, r10:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 93 48 r11|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 103 50 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@47963b4b encoding: base: 140154094223360 shift: 0  <||@
  Comment 107 52 AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayItr;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}, meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B3] defaultTarget: B0 -> B5 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 107 {DataSection[0x0]}  <||@
  Comment 120 {DataSection[0x8]}  <||@
  Comment 133 {DataSection[0x10]}  <||@
  Comment 146 {DataSection[0x18]}  <||@
  Comment 164 block B1 null  <||@
  Comment 164 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 164 56 NOP  <||@
  Comment 165 58 NOP  <||@
  Comment 166 60 NOP  <||@
  Comment 167 62 NOP  <||@
  Comment 168 64 NOP  <||@
  Comment 169 66 NOP  <||@
  Comment 170 68 NOP  <||@
  Comment 171 70 NOP  <||@
  Comment 172 72 NOP  <||@
  Comment 173 74 rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 181 76 rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD state [bci:0]  <||@
  Comment 181 [rsi:0, r10:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 181 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 188 78 r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 196 80 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 199 82 rax|DWORD = SETCC condition: !=  <||@
  Comment 205 84 JUMP ~outgoingValues: [] destination: B1 -> B4  <||@
  Comment 205 block B4 null  <||@
  Comment 205 86 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 205 88 NOP  <||@
  Comment 206 90 NOP  <||@
  Comment 207 92 NOP  <||@
  Comment 208 94 NOP  <||@
  Comment 209 96 NOP  <||@
  Comment 210 98 NOP  <||@
  Comment 211 100 NOP  <||@
  Comment 212 102 NOP  <||@
  Comment 213 106 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 222 POLL_RETURN_FAR  <||@
  Comment 236 block B2 null  <||@
  Comment 236 108 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 236 110 NOP  <||@
  Comment 237 112 NOP  <||@
  Comment 238 114 NOP  <||@
  Comment 239 116 NOP  <||@
  Comment 240 118 NOP  <||@
  Comment 241 120 NOP  <||@
  Comment 242 122 NOP  <||@
  Comment 243 124 NOP  <||@
  Comment 244 126 NOP  <||@
  Comment 245 128 r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 253 130 r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 253 [rsi:0, r10:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 253 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 261 132 r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 269 134 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 272 136 r10|DWORD = SETCC condition: >  <||@
  Comment 280 -1 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 283 138 JUMP ~outgoingValues: [] destination: B2 -> B4  <||@
  Comment 285 block B3 null  <||@
  Comment 285 140 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 285 142 NOP  <||@
  Comment 286 144 NOP  <||@
  Comment 287 146 NOP  <||@
  Comment 288 148 NOP  <||@
  Comment 289 150 NOP  <||@
  Comment 290 152 NOP  <||@
  Comment 291 154 NOP  <||@
  Comment 292 156 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 300 158 TEST (x: r10|DWORD[_], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 303 160 r10|DWORD = SETCC condition: !=  <||@
  Comment 311 -1 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 314 162 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 316 block B5 null  <||@
  Comment 316 164 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 316 166 NOP  <||@
  Comment 317 168 NOP  <||@
  Comment 318 170 NOP  <||@
  Comment 319 172 NOP  <||@
  Comment 320 174 NOP  <||@
  Comment 321 176 NOP  <||@
  Comment 322 178 NOP  <||@
  Comment 323 180 MOV x: [r15|QWORD + 1156] y: -6451 size: DWORD  <||@
  Comment 334 182 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 345 184 DEOPT info [bci:0]  <||@
  Comment 345 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 350 [rsi:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 363 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 388 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 416 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 421 [rsi:0, r10:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 451 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 456 [rsi:0, r10:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 486 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 491 [rsi:0, r10:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1077) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 499 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 499 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 505 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 505 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
