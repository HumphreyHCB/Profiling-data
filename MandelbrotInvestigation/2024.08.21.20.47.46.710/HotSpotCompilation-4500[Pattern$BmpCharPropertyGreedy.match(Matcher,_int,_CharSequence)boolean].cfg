begin_compilation
  name " HotSpotCompilation-4500[java.util.regex.Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-4500[java.util.regex.Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)]"
  date 1724269695881
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i555 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i555  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Pattern$BmpCharPropertyGreedy
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?13 v593 v592 ?56 ?61 ?491 ?490 v581 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v598 ?13 v364 ?56 ?61 v376 ?491 v580 ?490 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i38 v150 i38 i160 v289 j386 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?13 v364 v582 v583 ?61 v376 ?490 ?491 ?56 v599 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4500
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 
=== Succesors ===
=== Usages ===
v498 i555 v556 i558 v560 i564 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i555 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i555 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-67595|0xfffffffffffef7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.to
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v580 
lastLocationAccess: - 
=== Succesors ===
next: v153 
=== Usages ===
?13 v14 v150 v46 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v580 lastLocationAccess: - #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i555 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i555  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4503) [bci: 34]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i42 i43 i206 v83 i141 i148 i160 i223 i201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i39 v29 v73 v84 i39 v140 i141 i148 i201 v156 v234 i206 v200 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 12]
profileData: PROFILED designatedSuccessorProbability: 0.9999996416808322
stamp: void
=== Inputs ===
condition: v150 
=== Succesors ===
trueSuccessor: v152 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
i555 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v150 #trueSuccessor: v152 #falseSuccessor: v151  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-69899|0xfffffffffffeeef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v599 
lastLocationAccess: - 
=== Succesors ===
next: v433 
=== Usages ===
v554 
=== Predecessor ===
v152 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v599 lastLocationAccess: - #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v556 
y: v553 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v556 y: v553  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v554 
=== Succesors ===
trueSuccessor: v430 
falseSuccessor: v432 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v554 #trueSuccessor: v430 #falseSuccessor: v432  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a557 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a557  <|@  <|@
f <@~|@floating>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a557 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 8]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v583 
lastLocationAccess: - 
=== Succesors ===
next: i558 
=== Usages ===
v589 v584 v585 
=== Predecessor ===
v430 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v583 lastLocationAccess: - #next: i558  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a557 
=== Succesors ===
=== Usages ===
i558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a557  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i558 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-72203|0xfffffffffffee5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 2]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v584 
lastLocationAccess: - 
=== Succesors ===
next: v441 
=== Usages ===
v320 v289 
=== Predecessor ===
a557 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v584 lastLocationAccess: - #next: v441  <|@  <|@
f <@~|@floating>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i558 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i558  <|@  <|@
f <@~|@floating>@ <|@
tid j495 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j526 j526 j497 j497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v289 
=== Succesors ===
trueSuccessor: v438 
falseSuccessor: v440 
=== Usages ===
=== Predecessor ===
i558 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v289 #trueSuccessor: v438 #falseSuccessor: v440  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a559 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a559  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a559 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$CharPropertyGreedy.predicate
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 16]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v581 
lastLocationAccess: - 
=== Succesors ===
next: v560 
=== Usages ===
v600 v586 
=== Predecessor ===
v438 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v581 lastLocationAccess: - #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a559 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a559  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-76299|0xfffffffffffed5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v600 
lastLocationAccess: - 
=== Succesors ===
next: i561 
=== Usages ===
v542 
=== Predecessor ===
a559 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v600 lastLocationAccess: - #next: i561  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i561 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 7]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v582 
lastLocationAccess: - 
=== Succesors ===
next: v477 
=== Usages ===
v385 
=== Predecessor ===
v560 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v582 lastLocationAccess: - #next: v477  <|@  <|@
f <@~|@floating>@ <|@
tid i384 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i561 
y: i384 
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i561 y: i384  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v385 
=== Succesors ===
trueSuccessor: v475 
falseSuccessor: v476 
=== Usages ===
=== Predecessor ===
i561 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v385 #trueSuccessor: v475 #falseSuccessor: v476  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 7]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: i562 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i562  <|@  <|@
f <@~|@floating>@ <|@
tid j386 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j386 
index: a557 
=== Succesors ===
=== Usages ===
i562 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j386 index: a557  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i562 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v585 
lastLocationAccess: - 
=== Succesors ===
next: v192 
=== Usages ===
i387 j388 v420 
=== Predecessor ===
v475 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v585 lastLocationAccess: - #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid i387 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 12]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i562 
=== Succesors ===
=== Usages ===
v205 i197 i198 v307 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i562  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v560 
=== Succesors ===
=== Usages ===
v127 v192 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v560  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a559 
=== Succesors ===
=== Usages ===
a563 i566 a568 i571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a559  <|@  <|@
f <@~|@floating>@ <|@
tid j516 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j497 j526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j519 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
rawvalue: 2580
stableDimension: 0
stamp: i64 [2580]
stampKind: i64
value: long[2580|0xa14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j497 j526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 3]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
rawvalue: -48
stableDimension: 0
stamp: i32 [-48]
stampKind: i32
value: int[-48|0xffffffffffffffd0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i136 i197 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i137 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 4]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
rawvalue: 57
stableDimension: 0
stamp: i32 [57]
stampKind: i32
value: int[57|0x39]
=== Inputs ===
=== Succesors ===
=== Usages ===
i138 i198 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i419 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
rawvalue: -128
stableDimension: 0
stamp: i8 [-128]
stampKind: i8
value: byte[-128|0xffffffffffffff80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 v421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}]
keySuccessors: [I@43a88dc6
keys: [HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>, HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>]
profileData: PROFILED keyProbabilities: [0.7806481961828495, 0.21034525751005306, 0.00900654630709747, 0.0]
stamp: void
=== Inputs ===
value: v542 
=== Succesors ===
successors: v180 v182 v184 v187 
=== Usages ===
=== Predecessor ===
i562 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v542 #successors: v180 v182 v184 v187  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v481 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v481  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i562 
y: i419 
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i562 y: i419  <|@  <|@
f <@*|@fixed>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v420 
=== Succesors ===
trueSuccessor: v479 
falseSuccessor: v480 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v420 #trueSuccessor: v479 #falseSuccessor: v480  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 7]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid i197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 3]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32 [-48 - 207]
=== Inputs ===
x: i387 
y: i135 
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i387 y: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 7]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32 [-198 - 57]
=== Inputs ===
x: i137 
y: i387 
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i137 y: i387  <|@  <|@
f <@~|@floating>@ <|@
tid i199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 8]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32
=== Inputs ===
x: i197 
y: i198 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i197 y: i198  <|@  <|@
f <@~|@floating>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 9]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i199 
y: i6 
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i199 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 9]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v200 
trueValue: i6 
falseValue: i41 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v200 trueValue: i6 falseValue: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
v479 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid i518 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
rawvalue: -122387
stableDimension: 0
stamp: i32 [-122387]
stampKind: i32
value: int[-122387|0xfffffffffffe21ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
v480 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a563 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a563  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a563 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# boolean[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$BitClass.bits
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 8]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: n# boolean[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v586 
lastLocationAccess: - 
=== Succesors ===
next: i564 
=== Usages ===
v588 v587 
=== Predecessor ===
v182 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v586 lastLocationAccess: - #next: i564  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a563 
=== Succesors ===
=== Usages ===
i564 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a563  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i564 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-77579|0xfffffffffffed0f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v587 
lastLocationAccess: - 
=== Succesors ===
next: v453 
=== Usages ===
v307 
=== Predecessor ===
a563 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v587 lastLocationAccess: - #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i387 
y: i564 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i387 y: i564  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v307 
=== Succesors ===
trueSuccessor: v450 
falseSuccessor: v452 
=== Usages ===
=== Predecessor ===
i564 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v307 #trueSuccessor: v450 #falseSuccessor: v452  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i565 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i565  <|@  <|@
f <@~|@floating>@ <|@
tid j388 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
resultBits: 64
stamp: i64 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i562 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i562  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j388 
index: a563 
=== Succesors ===
=== Usages ===
i565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j388 index: a563  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i565 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v588 
lastLocationAccess: - 
=== Succesors ===
next: v183 
=== Usages ===
i314 
=== Predecessor ===
v450 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v588 lastLocationAccess: - #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i565 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i565  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
i565 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid i521 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
rawvalue: -78875
stableDimension: 0
stamp: i32 [-78875]
stampKind: i32
value: int[-78875|0xfffffffffffecbe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
v452 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i566 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i566 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003b.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v586 
lastLocationAccess: - 
=== Succesors ===
next: v185 
=== Usages ===
v205 
=== Predecessor ===
v184 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v586 lastLocationAccess: - #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.lambda$Single$14(Pattern.java:5910) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i387 
y: i566 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i387 y: i566  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$Single$14(Pattern.java:5910) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v205 
trueValue: i41 
falseValue: i6 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v205 trueValue: i41 falseValue: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
i566 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i179 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v178 
values: i201 i314 i206 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v178 values: i201 i314 i206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v181 v183 v185 
=== Succesors ===
next: v159 
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v181 v183 v185 #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i179 
y: i6 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i179 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 31]
profileData: PROFILED designatedSuccessorProbability: 0.5928267925853211
stamp: void
=== Inputs ===
condition: v156 
=== Succesors ===
trueSuccessor: v158 
falseSuccessor: v157 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v156 #trueSuccessor: v158 #falseSuccessor: v157  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v254  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v158 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4503) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4503) [bci: 34]
stamp: i32
=== Inputs ===
x: i3 
y: i41 
=== Succesors ===
=== Usages ===
i222 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
v157 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i41 i43 
=== Succesors ===
=== Usages ===
?13 i39 i43 i39 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i41 i43  <|@  <|@
f <@~|@floating>@ <|@
tid i222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i160 i42 
=== Succesors ===
=== Usages ===
?13 v14 i42 v320 j389 i38 i38 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i160 i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v9 
=== Succesors ===
next: v21 
=== Usages ===
i223 i222 v16 v34 v44 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v9 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i222 
y: i555 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i222 y: i555  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v16 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v20 #falseSuccessor: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v457  <|@  <|@
tid ?13 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4502
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i222 a4 i223 i555 
=== Succesors ===
=== Usages ===
v527 i569 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i222 a4 i223 i555  <|@  <|@
f <@~|@floating>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i222 
y: i558 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i222 y: i558  <|@  <|@
f <@*|@fixed>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v320 
=== Succesors ===
trueSuccessor: v454 
falseSuccessor: v456 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v320 #trueSuccessor: v454 #falseSuccessor: v456  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: i567 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i567  <|@  <|@
f <@~|@floating>@ <|@
tid j389 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i222 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i222  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j389 
index: a557 
=== Succesors ===
=== Usages ===
i567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j389 index: a557  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i567 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v589 
lastLocationAccess: - 
=== Succesors ===
next: v127 
=== Usages ===
i390 j391 v421 
=== Predecessor ===
v454 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v589 lastLocationAccess: - #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid i390 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 12]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i567 
=== Succesors ===
=== Usages ===
i136 i138 v337 v147 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i567  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}]
keySuccessors: [I@3960161f
keys: [HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>, HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>]
profileData: PROFILED keyProbabilities: [0.7806481961828495, 0.21034525751005306, 0.00900654630709747, 0.0]
stamp: void
=== Inputs ===
value: v542 
=== Succesors ===
successors: v109 v114 v119 v122 
=== Usages ===
=== Predecessor ===
i567 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v542 #successors: v109 v114 v119 v122  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i567 
y: i419 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i567 y: i419  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v421 
=== Succesors ===
trueSuccessor: v483 
falseSuccessor: v484 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v421 #trueSuccessor: v483 #falseSuccessor: v484  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 7]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 3]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32 [-48 - 207]
=== Inputs ===
x: i390 
y: i135 
=== Succesors ===
=== Usages ===
i139 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i390 y: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 7]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32 [-198 - 57]
=== Inputs ===
x: i137 
y: i390 
=== Succesors ===
=== Usages ===
i139 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i137 y: i390  <|@  <|@
f <@~|@floating>@ <|@
tid i139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 8]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32
=== Inputs ===
x: i136 
y: i138 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i136 y: i138  <|@  <|@
f <@~|@floating>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 9]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i139 
y: i6 
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i139 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 9]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v140 
trueValue: i6 
falseValue: i41 
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v140 trueValue: i6 falseValue: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
v483 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid i533 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
rawvalue: -123411
stableDimension: 0
stamp: i32 [-123411]
stampKind: i32
value: int[-123411|0xfffffffffffe1ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v484 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a568 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a568 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# boolean[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$BitClass.bits
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 8]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: n# boolean[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v586 
lastLocationAccess: - 
=== Succesors ===
next: i569 
=== Usages ===
v591 v590 
=== Predecessor ===
v114 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v586 lastLocationAccess: - #next: i569  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a568 
=== Succesors ===
=== Usages ===
i569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i569 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-85259|0xfffffffffffeb2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?13 
guard: - 
address: v590 
lastLocationAccess: - 
=== Succesors ===
next: v465 
=== Usages ===
v337 
=== Predecessor ===
a568 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?13 guard: - address: v590 lastLocationAccess: - #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i390 
y: i569 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i390 y: i569  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v337 
=== Succesors ===
trueSuccessor: v462 
falseSuccessor: v464 
=== Usages ===
=== Predecessor ===
i569 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v337 #trueSuccessor: v462 #falseSuccessor: v464  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i570 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i570  <|@  <|@
f <@~|@floating>@ <|@
tid j391 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
resultBits: 64
stamp: i64 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i567 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i567  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j391 
index: a568 
=== Succesors ===
=== Usages ===
i570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j391 index: a568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i570 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v591 
lastLocationAccess: - 
=== Succesors ===
next: v115 
=== Usages ===
i344 
=== Predecessor ===
v462 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v591 lastLocationAccess: - #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i570 
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i570  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i570 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid i535 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
rawvalue: -86555
stableDimension: 0
stamp: i32 [-86555]
stampKind: i32
value: int[-86555|0xfffffffffffeade5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v464 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i571 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i571  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i571 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003b.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v586 
lastLocationAccess: - 
=== Succesors ===
next: v120 
=== Usages ===
v147 
=== Predecessor ===
v119 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v586 lastLocationAccess: - #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.lambda$Single$14(Pattern.java:5910) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i390 
y: i571 
=== Succesors ===
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i390 y: i571  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$Single$14(Pattern.java:5910) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v147 
trueValue: i41 
falseValue: i6 
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v147 trueValue: i41 falseValue: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i571 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i105 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v104 
values: i141 i344 i148 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v104 values: i141 i344 i148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v110 v115 v120 
=== Succesors ===
next: v40 
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v110 v115 v120 #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i105 
y: i6 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i105 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 31]
profileData: PROFILED designatedSuccessorProbability: 0.5928267925853211
stamp: void
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v34 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4503) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4503) [bci: 34]
stamp: i32
=== Inputs ===
x: i222 
y: i41 
=== Succesors ===
=== Usages ===
i222 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i222 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4503) [bci: 37]
stamp: i32
=== Inputs ===
x: i223 
y: i41 
=== Succesors ===
=== Usages ===
i223 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i223 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v33  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v34 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v16 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid i531 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
rawvalue: -31027
stableDimension: 0
stamp: i32 [-31027]
stampKind: i32
value: int[-31027|0xffffffffffff86cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v122 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid i524 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
rawvalue: -81436
stableDimension: 0
stamp: i32 [-81436]
stampKind: i32
value: int[-81436|0xfffffffffffec1e4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v456 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: i32 [-123411 - -31027] bits:1...1xxxxxxxxx11x0x10x
valueDescription: i32
=== Inputs ===
merge: v522 
values: i524 i531 i533 i535 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v522 values: i524 i531 i533 i535  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: i64 [0 - 2580] bits:0...0xxxx000x0x00
valueDescription: i64
=== Inputs ===
merge: v522 
values: j495 j516 j519 j495 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v522 values: j495 j516 j519 j495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v523 v530 v532 v534 
=== Succesors ===
next: v527 
=== Usages ===
i525 j526 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v523 v530 v532 v534 #next: v527  <|@  <|@
f <@*|@fixed>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
stateBefore: ?13 
actionAndReason: i525 
speculation: j526 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?13 actionAndReason: i525 speculation: j526  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid i515 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
rawvalue: -47667
stableDimension: 0
stamp: i32 [-47667]
stampKind: i32
value: int[-47667|0xffffffffffff45cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
v187 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v509  <|@  <|@
f <@~|@floating>@ <|@
tid j511 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i510 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
rawvalue: -121363
stableDimension: 0
stamp: i32 [-121363]
stampKind: i32
value: int[-121363|0xfffffffffffe25ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
v476 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v507  <|@  <|@
f <@~|@floating>@ <|@
tid i508 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
rawvalue: -73500
stableDimension: 0
stamp: i32 [-73500]
stampKind: i32
value: int[-73500|0xfffffffffffee0e4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
v440 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid j269 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 16]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i504 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
rawvalue: -70195
stableDimension: 0
stamp: i32 [-70195]
stampKind: i32
value: int[-70195|0xfffffffffffeedcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
v432 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: i32 [-122387 - -47667] bits:1...1xxxx0xxxx11x0x10x
valueDescription: i32
=== Inputs ===
merge: v492 
values: i504 i508 i510 i515 i518 i521 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v492 values: i504 i508 i510 i515 i518 i521  <|@  <|@
f <@~|@floating>@ <|@
tid j497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: i64 [0 - 2580] bits:0...0xxxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v492 
values: j269 j495 j511 j516 j519 j495 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v492 values: j269 j495 j511 j516 j519 j495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v503 v507 v509 v514 v517 v520 
=== Succesors ===
next: v498 
=== Usages ===
i496 j497 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v503 v507 v509 v514 v517 v520 #next: v498  <|@  <|@
f <@*|@fixed>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i496 
speculation: j497 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i496 speculation: j497  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v151 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v32 
values: i222 i222 i3 i3 
=== Succesors ===
=== Usages ===
v364 v46 ?490 ?56 i238 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v32 values: i222 i222 i3 i3  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v32 
values: i223 i223 i6 i6 
=== Succesors ===
=== Usages ===
v226 ?490 ?56 i239 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v32 values: i223 i223 i6 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v31 v33 v254 v255 
=== Succesors ===
next: v49 
=== Usages ===
i38 i39 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v31 v33 v254 v255 #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 46]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i555 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i38 y: i555  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 46]
profileData: PROFILED designatedSuccessorProbability: 0.9999993956261464
stamp: void
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v47 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v48 #falseSuccessor: v47  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
v48 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4506) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i392 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4506) [bci: 51]
rawvalue: 1
stableDimension: 0
stamp: i8 [1]
stampKind: i8
value: byte[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.hitEnd
location: Matcher.hitEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4506) [bci: 51]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
lastLocationAccess: - 
value: i392 
stateAfter: - 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v598 lastLocationAccess: - value: i392 stateAfter: - #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v53 v55 
=== Succesors ===
next: i572 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v53 v55 #next: i572  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i572 i575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i572 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$CharPropertyGreedy.cmin
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 57]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v592 
lastLocationAccess: - 
=== Succesors ===
next: v229 
=== Usages ===
v226 
=== Predecessor ===
v54 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v592 lastLocationAccess: - #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 60]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i39 
y: i572 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i39 y: i572  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 60]
profileData: PROFILED designatedSuccessorProbability: 0.26134679498052216
stamp: void
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v228 
falseSuccessor: v227 
=== Usages ===
=== Predecessor ===
i572 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v228 #falseSuccessor: v227  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v249  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
v228 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: a573 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a573  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a573 a576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a573 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 64]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v593 
lastLocationAccess: - 
=== Succesors ===
next: v574 
=== Usages ===
a353 v601 
=== Predecessor ===
v227 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v593 lastLocationAccess: - #next: v574  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
bci: 54
bytecode: iload
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4508
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i38 a4 i39 
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i38 a4 i39  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a573 
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a573  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-90891|0xfffffffffffe9cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?56 
guard: - 
address: v601 
lastLocationAccess: - 
=== Succesors ===
next: v360 
=== Usages ===
v547 
=== Predecessor ===
a573 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?56 guard: - address: v601 lastLocationAccess: - #next: v360  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v574 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v574  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
displacement: 496
stamp: void*
stride: S1
=== Inputs ===
base: v547 
index: - 
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v547 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v594 
lastLocationAccess: - 
=== Succesors ===
next: j363 
=== Usages ===
v595 v364 
=== Predecessor ===
v574 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v594 lastLocationAccess: - #next: j363  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v360 
index: - 
=== Succesors ===
=== Usages ===
j363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v360 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j363 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v595 
lastLocationAccess: - 
=== Succesors ===
next: i232 
=== Usages ===
v364 
=== Predecessor ===
v360 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v595 lastLocationAccess: - #next: i232  <|@  <|@
f <@~|@floating>@ <|@
tid a353 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 64]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a573 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a573  <|@  <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>, UnresolvedJavaType<Ljava/util/regex/Matcher;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j363 
metaspaceMethod: v360 
arguments: a353 a2 i38 a4 
=== Succesors ===
=== Usages ===
i232 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j363 metaspaceMethod: v360 arguments: a353 a2 i38 a4  <|@  <|@
tid ?490 <|@
d <@d|@=== Debug Properties ===
bci: 70
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4509
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i38 a4 i39 
=== Succesors ===
=== Usages ===
i232 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i38 a4 i39  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i232 <|@
d <@d|@=== Debug Properties ===
bci: 70
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Pattern$Node.match
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v364 
stateDuring: ?490 
=== Succesors ===
next: v237 
=== Usages ===
v234 
=== Predecessor ===
j363 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v364 stateDuring: ?490 #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i232 
y: i6 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i232 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 73]
profileData: PROFILED designatedSuccessorProbability: 0.315654224658634
stamp: void
=== Inputs ===
condition: v234 
=== Succesors ===
trueSuccessor: v236 
falseSuccessor: v235 
=== Usages ===
=== Predecessor ===
i232 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v234 #trueSuccessor: v236 #falseSuccessor: v235  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 78]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i80 i81 i238 i239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 78]
stamp: i32
=== Inputs ===
x: i38 
y: i79 
=== Succesors ===
=== Usages ===
i252 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i38 y: i79  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 81]
stamp: i32
=== Inputs ===
x: i39 
y: i79 
=== Succesors ===
=== Usages ===
i253 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i39 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
v236 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v58 
values: i239 i81 
=== Succesors ===
=== Usages ===
?61 v63 ?491 i81 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v58 values: i239 i81  <|@  <|@
f <@~|@floating>@ <|@
tid i252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v58 
values: i238 i80 
=== Succesors ===
=== Usages ===
?61 v376 ?491 i80 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v58 values: i238 i80  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v57 
=== Succesors ===
next: i575 
=== Usages ===
i253 i252 v66 v75 v82 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v57 #next: i575  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i575 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$CharPropertyGreedy.cmin
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 57]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v592 
lastLocationAccess: - 
=== Succesors ===
next: v68 
=== Usages ===
v63 
=== Predecessor ===
v58 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v592 lastLocationAccess: - #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 60]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i253 
y: i575 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i253 y: i575  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 60]
profileData: PROFILED designatedSuccessorProbability: 0.26134679498052216
stamp: void
=== Inputs ===
condition: v63 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v64 
=== Usages ===
=== Predecessor ===
i575 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v63 #trueSuccessor: v66 #falseSuccessor: v64  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: a576 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a576 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 64]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v593 
lastLocationAccess: - 
=== Succesors ===
next: v577 
=== Usages ===
a367 v602 
=== Predecessor ===
v64 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v593 lastLocationAccess: - #next: v577  <|@  <|@
tid ?61 <|@
d <@d|@=== Debug Properties ===
bci: 54
bytecode: iload
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4508
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i252 a4 i253 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i252 a4 i253  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a576 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-94475|0xfffffffffffe8ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?61 
guard: - 
address: v602 
lastLocationAccess: - 
=== Succesors ===
next: v373 
=== Usages ===
v550 
=== Predecessor ===
a576 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?61 guard: - address: v602 lastLocationAccess: - #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v577 
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
displacement: 496
stamp: void*
stride: S1
=== Inputs ===
base: v550 
index: - 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v550 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
lastLocationAccess: - 
=== Succesors ===
next: j375 
=== Usages ===
v597 v376 
=== Predecessor ===
v577 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v596 lastLocationAccess: - #next: j375  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v373 
index: - 
=== Succesors ===
=== Usages ===
j375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v373 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j375 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v597 
lastLocationAccess: - 
=== Succesors ===
next: i71 
=== Usages ===
v376 
=== Predecessor ===
v373 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v597 lastLocationAccess: - #next: i71  <|@  <|@
f <@~|@floating>@ <|@
tid a367 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 64]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a576 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a576  <|@  <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>, UnresolvedJavaType<Ljava/util/regex/Matcher;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j375 
metaspaceMethod: v373 
arguments: a367 a2 i252 a4 
=== Succesors ===
=== Usages ===
i71 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j375 metaspaceMethod: v373 arguments: a367 a2 i252 a4  <|@  <|@
tid ?491 <|@
d <@d|@=== Debug Properties ===
bci: 70
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4509
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i252 a4 i253 
=== Succesors ===
=== Usages ===
i71 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i252 a4 i253  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i71 <|@
d <@d|@=== Debug Properties ===
bci: 70
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Pattern$Node.match
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v376 
stateDuring: ?491 
=== Succesors ===
next: v78 
=== Usages ===
v73 
=== Predecessor ===
j375 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v376 stateDuring: ?491 #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i71 
y: i6 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i71 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 73]
profileData: PROFILED designatedSuccessorProbability: 0.315654224658634
stamp: void
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
i71 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v77 #falseSuccessor: v75  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 78]
stamp: i32
=== Inputs ===
x: i252 
y: i79 
=== Succesors ===
=== Usages ===
i252 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i252 y: i79  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 81]
stamp: i32
=== Inputs ===
x: i253 
y: i79 
=== Succesors ===
=== Usages ===
i253 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i253 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
stamp: void
=== Inputs ===
loopBegin: v58 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4510) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: v243  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4510) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
v75 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: v248  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
v66 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v248 v249 
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v248 v249 #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 88]
stamp: void
=== Inputs ===
memoryMap: - 
result: i6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4510) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v244  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4510) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
v235 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4510) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v243 v244 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v243 v244 #next: v83  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4510) [bci: 77]
stamp: void
=== Inputs ===
memoryMap: - 
result: i41 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i41  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v9|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = OR (x: v14|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVZXB input: [v20|QWORD + v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v25|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD, v27|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v27|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVSXB input: [v27|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA address: [v29|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v31|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = OR (x: v30|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVZXB input: [v36|QWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v41|DWORD] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|DWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v47|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = UNCOMPRESSPOINTER (input: v50|DWORD, ~baseRegister: v52|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV input: [v51|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV input: [v53|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v47|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = DEC value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, v57|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v59|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV input: [v63|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOV input: [v65|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD, y: v68|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = DEC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|DWORD, v69|DWORD] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-122387|0xfffffffffffe21ed], long[2580|0xa14]] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31027|0xffffffffffff86cd], long[1300|0x514]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73500|0xfffffffffffee0e4], long[0|0x0]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81436|0xfffffffffffec1e4], long[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78875|0xfffffffffffecbe5], long[0|0x0]] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47667|0xffffffffffff45cd], long[1300|0x514]] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-86555|0xfffffffffffeade5], long[0|0x0]] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-123411|0xfffffffffffe1ded], long[2580|0xa14]] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|DWORD, v44|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70195|0xfffffffffffeedcd], long[20|0x14]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121363|0xfffffffffffe25ed], long[660|0x294]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i555 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i555  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Pattern$BmpCharPropertyGreedy
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?13 v593 v592 ?56 ?61 ?491 ?490 v581 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v598 ?13 v364 ?56 ?61 v376 ?491 v580 ?490 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i38 v150 i38 i160 v289 j386 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?13 v364 v582 v583 ?61 v376 ?490 ?491 ?56 v599 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4500
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 
=== Succesors ===
=== Usages ===
v498 i555 v556 i558 v560 i564 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i555 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i555 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-67595|0xfffffffffffef7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.to
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v580 
lastLocationAccess: - 
=== Succesors ===
next: v153 
=== Usages ===
?13 v14 v150 v46 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v580 lastLocationAccess: - #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i555 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i555  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4503) [bci: 34]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i42 i43 i206 v83 i141 i148 i160 i223 i201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i39 v29 v73 v84 i39 v140 i141 i148 i201 v156 v234 i206 v200 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 12]
profileData: PROFILED designatedSuccessorProbability: 0.9999996416808322
stamp: void
=== Inputs ===
condition: v150 
=== Succesors ===
trueSuccessor: v152 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
i555 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v150 #trueSuccessor: v152 #falseSuccessor: v151  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
result [v3|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-69899|0xfffffffffffeeef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v599 
lastLocationAccess: - 
=== Succesors ===
next: v433 
=== Usages ===
v554 
=== Predecessor ===
v152 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v599 lastLocationAccess: - #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v556 
y: v553 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v556 y: v553  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v554 
=== Succesors ===
trueSuccessor: v430 
falseSuccessor: v432 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v554 #trueSuccessor: v430 #falseSuccessor: v432  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a557 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a557  <|@  <|@
f <@~|@floating>@ <|@
tid v583 <|@
result [v3|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a557 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 8]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v583 
lastLocationAccess: - 
=== Succesors ===
next: i558 
=== Usages ===
v589 v584 v585 
=== Predecessor ===
v430 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v583 lastLocationAccess: - #next: i558  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
result [v5|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a557 
=== Succesors ===
=== Usages ===
i558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a557  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i558 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-72203|0xfffffffffffee5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 2]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v584 
lastLocationAccess: - 
=== Succesors ===
next: v441 
=== Usages ===
v320 v289 
=== Predecessor ===
a557 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v584 lastLocationAccess: - #next: v441  <|@  <|@
f <@~|@floating>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i558 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i558  <|@  <|@
f <@~|@floating>@ <|@
tid j495 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j526 j526 j497 j497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v289 
=== Succesors ===
trueSuccessor: v438 
falseSuccessor: v440 
=== Usages ===
=== Predecessor ===
i558 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v289 #trueSuccessor: v438 #falseSuccessor: v440  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a559 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a559  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a559 <|@
result v7|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$CharPropertyGreedy.predicate
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 16]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v581 
lastLocationAccess: - 
=== Succesors ===
next: v560 
=== Usages ===
v600 v586 
=== Predecessor ===
v438 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v581 lastLocationAccess: - #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
result [v7|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a559 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a559  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-76299|0xfffffffffffed5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v600 
lastLocationAccess: - 
=== Succesors ===
next: i561 
=== Usages ===
v542 
=== Predecessor ===
a559 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v600 lastLocationAccess: - #next: i561  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
result [v3|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i561 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 7]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v582 
lastLocationAccess: - 
=== Succesors ===
next: v477 
=== Usages ===
v385 
=== Predecessor ===
v560 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v582 lastLocationAccess: - #next: v477  <|@  <|@
f <@~|@floating>@ <|@
tid i384 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i561 
y: i384 
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i561 y: i384  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v385 
=== Succesors ===
trueSuccessor: v475 
falseSuccessor: v476 
=== Usages ===
=== Predecessor ===
i561 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v385 #trueSuccessor: v475 #falseSuccessor: v476  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 7]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: i562 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i562  <|@  <|@
f <@~|@floating>@ <|@
tid j386 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
result [v9|QWORD + v5|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j386 
index: a557 
=== Succesors ===
=== Usages ===
i562 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j386 index: a557  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i562 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v585 
lastLocationAccess: - 
=== Succesors ===
next: v192 
=== Usages ===
i387 j388 v420 
=== Predecessor ===
v475 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v585 lastLocationAccess: - #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid i387 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 12]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i562 
=== Succesors ===
=== Usages ===
v205 i197 i198 v307 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i562  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v560 
=== Succesors ===
=== Usages ===
v127 v192 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v560  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
result [v7|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a559 
=== Succesors ===
=== Usages ===
a563 i566 a568 i571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a559  <|@  <|@
f <@~|@floating>@ <|@
tid j516 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j497 j526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j519 <|@
result long[2580|0xa14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
rawvalue: 2580
stableDimension: 0
stamp: i64 [2580]
stampKind: i64
value: long[2580|0xa14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j497 j526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
result int[-48|0xffffffffffffffd0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 3]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
rawvalue: -48
stableDimension: 0
stamp: i32 [-48]
stampKind: i32
value: int[-48|0xffffffffffffffd0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i136 i197 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i137 <|@
result int[57|0x39] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 4]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
rawvalue: 57
stableDimension: 0
stamp: i32 [57]
stampKind: i32
value: int[57|0x39]
=== Inputs ===
=== Succesors ===
=== Usages ===
i138 i198 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i419 <|@
result byte[-128|0xffffffffffffff80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
rawvalue: -128
stableDimension: 0
stamp: i8 [-128]
stampKind: i8
value: byte[-128|0xffffffffffffff80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 v421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}]
keySuccessors: [I@43a88dc6
keys: [HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>, HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>]
profileData: PROFILED keyProbabilities: [0.7806481961828495, 0.21034525751005306, 0.00900654630709747, 0.0]
stamp: void
=== Inputs ===
value: v542 
=== Succesors ===
successors: v180 v182 v184 v187 
=== Usages ===
=== Predecessor ===
i562 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v542 #successors: v180 v182 v184 v187  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v9|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v481 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v481  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i562 
y: i419 
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i562 y: i419  <|@  <|@
f <@*|@fixed>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v420 
=== Succesors ===
trueSuccessor: v479 
falseSuccessor: v480 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v420 #trueSuccessor: v479 #falseSuccessor: v480  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 7]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid i197 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 3]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32 [-48 - 207]
=== Inputs ===
x: i387 
y: i135 
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i387 y: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 7]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32 [-198 - 57]
=== Inputs ===
x: i137 
y: i387 
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i137 y: i387  <|@  <|@
f <@~|@floating>@ <|@
tid i199 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 8]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32
=== Inputs ===
x: i197 
y: i198 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i197 y: i198  <|@  <|@
f <@~|@floating>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 9]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i199 
y: i6 
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i199 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 9]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v200 
trueValue: i6 
falseValue: i41 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v200 trueValue: i6 falseValue: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
v479 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = OR (x: v14|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid i518 <|@
result int[-122387|0xfffffffffffe21ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
rawvalue: -122387
stableDimension: 0
stamp: i32 [-122387]
stampKind: i32
value: int[-122387|0xfffffffffffe21ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
v480 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-122387|0xfffffffffffe21ed], long[2580|0xa14]] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a563 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a563  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a563 <|@
result v19|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# boolean[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$BitClass.bits
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 8]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: n# boolean[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v586 
lastLocationAccess: - 
=== Succesors ===
next: i564 
=== Usages ===
v588 v587 
=== Predecessor ===
v182 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v586 lastLocationAccess: - #next: i564  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
result [v19|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a563 
=== Succesors ===
=== Usages ===
i564 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a563  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i564 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-77579|0xfffffffffffed0f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v587 
lastLocationAccess: - 
=== Succesors ===
next: v453 
=== Usages ===
v307 
=== Predecessor ===
a563 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v587 lastLocationAccess: - #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i387 
y: i564 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i387 y: i564  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v307 
=== Succesors ===
trueSuccessor: v450 
falseSuccessor: v452 
=== Usages ===
=== Predecessor ===
i564 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v307 #trueSuccessor: v450 #falseSuccessor: v452  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i565 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i565  <|@  <|@
f <@~|@floating>@ <|@
tid j388 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
resultBits: 64
stamp: i64 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i562 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i562  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
result [v20|QWORD + v19|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j388 
index: a563 
=== Succesors ===
=== Usages ===
i565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j388 index: a563  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i565 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v588 
lastLocationAccess: - 
=== Succesors ===
next: v183 
=== Usages ===
i314 
=== Predecessor ===
v450 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v588 lastLocationAccess: - #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i565 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i565  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
i565 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVZXB input: [v20|QWORD + v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid i521 <|@
result int[-78875|0xfffffffffffecbe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
rawvalue: -78875
stableDimension: 0
stamp: i32 [-78875]
stampKind: i32
value: int[-78875|0xfffffffffffecbe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
v452 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78875|0xfffffffffffecbe5], long[0|0x0]] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i566 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i566 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003b.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v586 
lastLocationAccess: - 
=== Succesors ===
next: v185 
=== Usages ===
v205 
=== Predecessor ===
v184 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v586 lastLocationAccess: - #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.lambda$Single$14(Pattern.java:5910) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i387 
y: i566 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i387 y: i566  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$Single$14(Pattern.java:5910) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v205 
trueValue: i41 
falseValue: i6 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v205 trueValue: i41 falseValue: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
i566 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i179 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v178 
values: i201 i314 i206 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v178 values: i201 i314 i206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v181 v183 v185 
=== Succesors ===
next: v159 
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v181 v183 v185 #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i179 
y: i6 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i179 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 31]
profileData: PROFILED designatedSuccessorProbability: 0.5928267925853211
stamp: void
=== Inputs ===
condition: v156 
=== Succesors ===
trueSuccessor: v158 
falseSuccessor: v157 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v156 #trueSuccessor: v158 #falseSuccessor: v157  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v254  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v158 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4503) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4503) [bci: 34]
stamp: i32
=== Inputs ===
x: i3 
y: i41 
=== Succesors ===
=== Usages ===
i222 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
v157 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v25|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i223 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i41 i43 
=== Succesors ===
=== Usages ===
?13 i39 i43 i39 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i41 i43  <|@  <|@
f <@~|@floating>@ <|@
tid i222 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i160 i42 
=== Succesors ===
=== Usages ===
?13 v14 i42 v320 j389 i38 i38 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i160 i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v9 
=== Succesors ===
next: v21 
=== Usages ===
i223 i222 v16 v34 v44 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v9 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i222 
y: i555 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i222 y: i555  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v16 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v20 #falseSuccessor: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD, v27|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v27|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v457  <|@  <|@
tid ?13 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4502
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i222 a4 i223 i555 
=== Succesors ===
=== Usages ===
v527 i569 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i222 a4 i223 i555  <|@  <|@
f <@~|@floating>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i222 
y: i558 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i222 y: i558  <|@  <|@
f <@*|@fixed>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v320 
=== Succesors ===
trueSuccessor: v454 
falseSuccessor: v456 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v320 #trueSuccessor: v454 #falseSuccessor: v456  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: i567 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i567  <|@  <|@
f <@~|@floating>@ <|@
tid j389 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i222 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i222  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
result [v27|DWORD + v5|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j389 
index: a557 
=== Succesors ===
=== Usages ===
i567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j389 index: a557  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i567 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v589 
lastLocationAccess: - 
=== Succesors ===
next: v127 
=== Usages ===
i390 j391 v421 
=== Predecessor ===
v454 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v589 lastLocationAccess: - #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid i390 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 12]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i567 
=== Succesors ===
=== Usages ===
i136 i138 v337 v147 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i567  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}]
keySuccessors: [I@3960161f
keys: [HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>, HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>]
profileData: PROFILED keyProbabilities: [0.7806481961828495, 0.21034525751005306, 0.00900654630709747, 0.0]
stamp: void
=== Inputs ===
value: v542 
=== Succesors ===
successors: v109 v114 v119 v122 
=== Usages ===
=== Predecessor ===
i567 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v542 #successors: v109 v114 v119 v122  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVSXB input: [v27|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i567 
y: i419 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i567 y: i419  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v421 
=== Succesors ===
trueSuccessor: v483 
falseSuccessor: v484 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v421 #trueSuccessor: v483 #falseSuccessor: v484  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 7]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 3]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32 [-48 - 207]
=== Inputs ===
x: i390 
y: i135 
=== Succesors ===
=== Usages ===
i139 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i390 y: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 7]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32 [-198 - 57]
=== Inputs ===
x: i137 
y: i390 
=== Succesors ===
=== Usages ===
i139 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i137 y: i390  <|@  <|@
f <@~|@floating>@ <|@
tid i139 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 8]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32
=== Inputs ===
x: i136 
y: i138 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i136 y: i138  <|@  <|@
f <@~|@floating>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 9]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i139 
y: i6 
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i139 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 9]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v140 
trueValue: i6 
falseValue: i41 
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v140 trueValue: i6 falseValue: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
v483 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA address: [v29|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v31|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = OR (x: v30|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid i533 <|@
result int[-123411|0xfffffffffffe1ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
rawvalue: -123411
stableDimension: 0
stamp: i32 [-123411]
stampKind: i32
value: int[-123411|0xfffffffffffe1ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v484 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-123411|0xfffffffffffe1ded], long[2580|0xa14]] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a568 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a568 <|@
result v35|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# boolean[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$BitClass.bits
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 8]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: n# boolean[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v586 
lastLocationAccess: - 
=== Succesors ===
next: i569 
=== Usages ===
v591 v590 
=== Predecessor ===
v114 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v586 lastLocationAccess: - #next: i569  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
result [v35|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a568 
=== Succesors ===
=== Usages ===
i569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i569 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-85259|0xfffffffffffeb2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?13 
guard: - 
address: v590 
lastLocationAccess: - 
=== Succesors ===
next: v465 
=== Usages ===
v337 
=== Predecessor ===
a568 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?13 guard: - address: v590 lastLocationAccess: - #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i390 
y: i569 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i390 y: i569  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v337 
=== Succesors ===
trueSuccessor: v462 
falseSuccessor: v464 
=== Usages ===
=== Predecessor ===
i569 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v337 #trueSuccessor: v462 #falseSuccessor: v464  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i570 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i570  <|@  <|@
f <@~|@floating>@ <|@
tid j391 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
resultBits: 64
stamp: i64 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i567 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i567  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
result [v36|QWORD + v35|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j391 
index: a568 
=== Succesors ===
=== Usages ===
i570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j391 index: a568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i570 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v591 
lastLocationAccess: - 
=== Succesors ===
next: v115 
=== Usages ===
i344 
=== Predecessor ===
v462 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v591 lastLocationAccess: - #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i570 
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i570  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i570 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVZXB input: [v36|QWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid i535 <|@
result int[-86555|0xfffffffffffeade5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
rawvalue: -86555
stableDimension: 0
stamp: i32 [-86555]
stampKind: i32
value: int[-86555|0xfffffffffffeade5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v464 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-86555|0xfffffffffffeade5], long[0|0x0]] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i571 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i571  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i571 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003b.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v586 
lastLocationAccess: - 
=== Succesors ===
next: v120 
=== Usages ===
v147 
=== Predecessor ===
v119 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v586 lastLocationAccess: - #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.lambda$Single$14(Pattern.java:5910) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i390 
y: i571 
=== Succesors ===
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i390 y: i571  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$Single$14(Pattern.java:5910) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v147 
trueValue: i41 
falseValue: i6 
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v147 trueValue: i41 falseValue: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i571 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|DWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i105 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v104 
values: i141 i344 i148 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v104 values: i141 i344 i148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v110 v115 v120 
=== Succesors ===
next: v40 
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v110 v115 v120 #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i105 
y: i6 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i105 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 31]
profileData: PROFILED designatedSuccessorProbability: 0.5928267925853211
stamp: void
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v34 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4503) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4503) [bci: 34]
stamp: i32
=== Inputs ===
x: i222 
y: i41 
=== Succesors ===
=== Usages ===
i222 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i222 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4503) [bci: 37]
stamp: i32
=== Inputs ===
x: i223 
y: i41 
=== Succesors ===
=== Usages ===
i223 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i223 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v41|DWORD] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v33  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v34 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v16 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid i531 <|@
result int[-31027|0xffffffffffff86cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
rawvalue: -31027
stableDimension: 0
stamp: i32 [-31027]
stampKind: i32
value: int[-31027|0xffffffffffff86cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v122 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31027|0xffffffffffff86cd], long[1300|0x514]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid i524 <|@
result int[-81436|0xfffffffffffec1e4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
rawvalue: -81436
stableDimension: 0
stamp: i32 [-81436]
stampKind: i32
value: int[-81436|0xfffffffffffec1e4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v456 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81436|0xfffffffffffec1e4], long[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i525 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: i32 [-123411 - -31027] bits:1...1xxxxxxxxx11x0x10x
valueDescription: i32
=== Inputs ===
merge: v522 
values: i524 i531 i533 i535 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v522 values: i524 i531 i533 i535  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: i64 [0 - 2580] bits:0...0xxxx000x0x00
valueDescription: i64
=== Inputs ===
merge: v522 
values: j495 j516 j519 j495 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v522 values: j495 j516 j519 j495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v523 v530 v532 v534 
=== Succesors ===
next: v527 
=== Usages ===
i525 j526 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v523 v530 v532 v534 #next: v527  <|@  <|@
f <@*|@fixed>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
stateBefore: ?13 
actionAndReason: i525 
speculation: j526 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?13 actionAndReason: i525 speculation: j526  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|DWORD, v44|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid i515 <|@
result int[-47667|0xffffffffffff45cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
rawvalue: -47667
stableDimension: 0
stamp: i32 [-47667]
stampKind: i32
value: int[-47667|0xffffffffffff45cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
v187 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47667|0xffffffffffff45cd], long[1300|0x514]] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v509  <|@  <|@
f <@~|@floating>@ <|@
tid j511 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i510 <|@
result int[-121363|0xfffffffffffe25ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
rawvalue: -121363
stableDimension: 0
stamp: i32 [-121363]
stampKind: i32
value: int[-121363|0xfffffffffffe25ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
v476 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121363|0xfffffffffffe25ed], long[660|0x294]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v507  <|@  <|@
f <@~|@floating>@ <|@
tid i508 <|@
result int[-73500|0xfffffffffffee0e4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
rawvalue: -73500
stableDimension: 0
stamp: i32 [-73500]
stampKind: i32
value: int[-73500|0xfffffffffffee0e4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
v440 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73500|0xfffffffffffee0e4], long[0|0x0]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid j269 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 16]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i504 <|@
result int[-70195|0xfffffffffffeedcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
rawvalue: -70195
stableDimension: 0
stamp: i32 [-70195]
stampKind: i32
value: int[-70195|0xfffffffffffeedcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
v432 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70195|0xfffffffffffeedcd], long[20|0x14]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i496 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: i32 [-122387 - -47667] bits:1...1xxxx0xxxx11x0x10x
valueDescription: i32
=== Inputs ===
merge: v492 
values: i504 i508 i510 i515 i518 i521 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v492 values: i504 i508 i510 i515 i518 i521  <|@  <|@
f <@~|@floating>@ <|@
tid j497 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: i64 [0 - 2580] bits:0...0xxxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v492 
values: j269 j495 j511 j516 j519 j495 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v492 values: j269 j495 j511 j516 j519 j495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v503 v507 v509 v514 v517 v520 
=== Succesors ===
next: v498 
=== Usages ===
i496 j497 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v503 v507 v509 v514 v517 v520 #next: v498  <|@  <|@
f <@*|@fixed>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4501) [bci: 4]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i496 
speculation: j497 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i496 speculation: j497  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v151 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i38 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v32 
values: i222 i222 i3 i3 
=== Succesors ===
=== Usages ===
v364 v46 ?490 ?56 i238 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v32 values: i222 i222 i3 i3  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v32 
values: i223 i223 i6 i6 
=== Succesors ===
=== Usages ===
v226 ?490 ?56 i239 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v32 values: i223 i223 i6 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v31 v33 v254 v255 
=== Succesors ===
next: v49 
=== Usages ===
i38 i39 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v31 v33 v254 v255 #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 46]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i555 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i38 y: i555  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 46]
profileData: PROFILED designatedSuccessorProbability: 0.9999993956261464
stamp: void
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v47 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v48 #falseSuccessor: v47  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v47|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
v48 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4506) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
result [v1|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i392 <|@
result byte[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4506) [bci: 51]
rawvalue: 1
stableDimension: 0
stamp: i8 [1]
stampKind: i8
value: byte[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.hitEnd
location: Matcher.hitEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4506) [bci: 51]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
lastLocationAccess: - 
value: i392 
stateAfter: - 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v598 lastLocationAccess: - value: i392 stateAfter: - #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v53 v55 
=== Succesors ===
next: i572 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v53 v55 #next: i572  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i572 i575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i572 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$CharPropertyGreedy.cmin
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 57]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v592 
lastLocationAccess: - 
=== Succesors ===
next: v229 
=== Usages ===
v226 
=== Predecessor ===
v54 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v592 lastLocationAccess: - #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 60]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i39 
y: i572 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i39 y: i572  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 60]
profileData: PROFILED designatedSuccessorProbability: 0.26134679498052216
stamp: void
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v228 
falseSuccessor: v227 
=== Usages ===
=== Predecessor ===
i572 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v228 #falseSuccessor: v227  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v249  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
v228 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: a573 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a573  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a573 a576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a573 <|@
result v49|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 64]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v593 
lastLocationAccess: - 
=== Succesors ===
next: v574 
=== Usages ===
a353 v601 
=== Predecessor ===
v227 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v593 lastLocationAccess: - #next: v574  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
bci: 54
bytecode: iload
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4508
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i38 a4 i39 
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i38 a4 i39  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
result [v49|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a573 
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a573  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v574 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-90891|0xfffffffffffe9cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?56 
guard: - 
address: v601 
lastLocationAccess: - 
=== Succesors ===
next: v360 
=== Usages ===
v547 
=== Predecessor ===
a573 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?56 guard: - address: v601 lastLocationAccess: - #next: v360  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v574 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v574  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
result [v51|QWORD + 496] <|@
d <@d|@=== Debug Properties ===
displacement: 496
stamp: void*
stride: S1
=== Inputs ===
base: v547 
index: - 
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v547 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v360 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v594 
lastLocationAccess: - 
=== Succesors ===
next: j363 
=== Usages ===
v595 v364 
=== Predecessor ===
v574 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v594 lastLocationAccess: - #next: j363  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
result [v53|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v360 
index: - 
=== Succesors ===
=== Usages ===
j363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v360 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j363 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v595 
lastLocationAccess: - 
=== Succesors ===
next: i232 
=== Usages ===
v364 
=== Predecessor ===
v360 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v595 lastLocationAccess: - #next: i232  <|@  <|@
f <@~|@floating>@ <|@
tid a353 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 64]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a573 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a573  <|@  <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>, UnresolvedJavaType<Ljava/util/regex/Matcher;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j363 
metaspaceMethod: v360 
arguments: a353 a2 i38 a4 
=== Succesors ===
=== Usages ===
i232 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j363 metaspaceMethod: v360 arguments: a353 a2 i38 a4  <|@  <|@
tid ?490 <|@
d <@d|@=== Debug Properties ===
bci: 70
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4509
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i38 a4 i39 
=== Succesors ===
=== Usages ===
i232 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i38 a4 i39  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i232 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 70
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Pattern$Node.match
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v364 
stateDuring: ?490 
=== Succesors ===
next: v237 
=== Usages ===
v234 
=== Predecessor ===
j363 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v364 stateDuring: ?490 #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i232 
y: i6 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i232 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 73]
profileData: PROFILED designatedSuccessorProbability: 0.315654224658634
stamp: void
=== Inputs ===
condition: v234 
=== Succesors ===
trueSuccessor: v236 
falseSuccessor: v235 
=== Usages ===
=== Predecessor ===
i232 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v234 #trueSuccessor: v236 #falseSuccessor: v235  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = UNCOMPRESSPOINTER (input: v50|DWORD, ~baseRegister: v52|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV input: [v51|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV input: [v53|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 78]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i80 i81 i238 i239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i238 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 78]
stamp: i32
=== Inputs ===
x: i38 
y: i79 
=== Succesors ===
=== Usages ===
i252 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i38 y: i79  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 81]
stamp: i32
=== Inputs ===
x: i39 
y: i79 
=== Succesors ===
=== Usages ===
i253 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i39 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
v236 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v47|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = DEC value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, v57|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i253 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v58 
values: i239 i81 
=== Succesors ===
=== Usages ===
?61 v63 ?491 i81 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v58 values: i239 i81  <|@  <|@
f <@~|@floating>@ <|@
tid i252 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v58 
values: i238 i80 
=== Succesors ===
=== Usages ===
?61 v376 ?491 i80 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v58 values: i238 i80  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v57 
=== Succesors ===
next: i575 
=== Usages ===
i253 i252 v66 v75 v82 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v57 #next: i575  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i575 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$CharPropertyGreedy.cmin
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 57]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v592 
lastLocationAccess: - 
=== Succesors ===
next: v68 
=== Usages ===
v63 
=== Predecessor ===
v58 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v592 lastLocationAccess: - #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 60]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i253 
y: i575 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i253 y: i575  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 60]
profileData: PROFILED designatedSuccessorProbability: 0.26134679498052216
stamp: void
=== Inputs ===
condition: v63 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v64 
=== Usages ===
=== Predecessor ===
i575 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v63 #trueSuccessor: v66 #falseSuccessor: v64  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v59|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: a576 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a576 <|@
result v61|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 64]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v593 
lastLocationAccess: - 
=== Succesors ===
next: v577 
=== Usages ===
a367 v602 
=== Predecessor ===
v64 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v593 lastLocationAccess: - #next: v577  <|@  <|@
tid ?61 <|@
d <@d|@=== Debug Properties ===
bci: 54
bytecode: iload
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4508
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i252 a4 i253 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i252 a4 i253  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
result [v61|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a576 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-94475|0xfffffffffffe8ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?61 
guard: - 
address: v602 
lastLocationAccess: - 
=== Succesors ===
next: v373 
=== Usages ===
v550 
=== Predecessor ===
a576 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?61 guard: - address: v602 lastLocationAccess: - #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v577 
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
result [v63|QWORD + 496] <|@
d <@d|@=== Debug Properties ===
displacement: 496
stamp: void*
stride: S1
=== Inputs ===
base: v550 
index: - 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v550 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v373 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
lastLocationAccess: - 
=== Succesors ===
next: j375 
=== Usages ===
v597 v376 
=== Predecessor ===
v577 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v596 lastLocationAccess: - #next: j375  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
result [v65|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v373 
index: - 
=== Succesors ===
=== Usages ===
j375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v373 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j375 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v597 
lastLocationAccess: - 
=== Succesors ===
next: i71 
=== Usages ===
v376 
=== Predecessor ===
v373 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v597 lastLocationAccess: - #next: i71  <|@  <|@
f <@~|@floating>@ <|@
tid a367 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 64]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a576 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a576  <|@  <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>, UnresolvedJavaType<Ljava/util/regex/Matcher;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j375 
metaspaceMethod: v373 
arguments: a367 a2 i252 a4 
=== Succesors ===
=== Usages ===
i71 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j375 metaspaceMethod: v373 arguments: a367 a2 i252 a4  <|@  <|@
tid ?491 <|@
d <@d|@=== Debug Properties ===
bci: 70
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4509
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i252 a4 i253 
=== Succesors ===
=== Usages ===
i71 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i252 a4 i253  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i71 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 70
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Pattern$Node.match
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v376 
stateDuring: ?491 
=== Succesors ===
next: v78 
=== Usages ===
v73 
=== Predecessor ===
j375 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v376 stateDuring: ?491 #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i71 
y: i6 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i71 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 73]
profileData: PROFILED designatedSuccessorProbability: 0.315654224658634
stamp: void
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
i71 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v77 #falseSuccessor: v75  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV input: [v63|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOV input: [v65|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD, y: v68|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 78]
stamp: i32
=== Inputs ===
x: i252 
y: i79 
=== Succesors ===
=== Usages ===
i252 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i252 y: i79  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 81]
stamp: i32
=== Inputs ===
x: i253 
y: i79 
=== Succesors ===
=== Usages ===
i253 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i253 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
stamp: void
=== Inputs ===
loopBegin: v58 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = DEC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|DWORD, v69|DWORD] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4510) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: v243  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4510) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
v75 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: v248  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
v66 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v248 v249 
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v248 v249 #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 88]
stamp: void
=== Inputs ===
memoryMap: - 
result: i6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4510) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v244  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4510) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
v235 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4510) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v243 v244 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v243 v244 #next: v83  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4510) [bci: 77]
stamp: void
=== Inputs ===
memoryMap: - 
result: i41 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v9|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = OR (x: v14|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVZXB input: [v20|QWORD + v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v25|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD, v27|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v27|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVSXB input: [v27|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA address: [v29|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v31|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = OR (x: v30|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVZXB input: [v36|QWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v41|DWORD] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|DWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v47|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = UNCOMPRESSPOINTER (input: v50|DWORD, ~baseRegister: v52|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV input: [v51|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV input: [v53|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v47|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = DEC value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, v57|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v59|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV input: [v63|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOV input: [v65|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD, y: v68|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = DEC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|DWORD, v69|DWORD] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-122387|0xfffffffffffe21ed], long[2580|0xa14]] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31027|0xffffffffffff86cd], long[1300|0x514]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73500|0xfffffffffffee0e4], long[0|0x0]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81436|0xfffffffffffec1e4], long[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78875|0xfffffffffffecbe5], long[0|0x0]] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47667|0xffffffffffff45cd], long[1300|0x514]] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-86555|0xfffffffffffeade5], long[0|0x0]] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-123411|0xfffffffffffe1ded], long[2580|0xa14]] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|DWORD, v44|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70195|0xfffffffffffeedcd], long[20|0x14]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121363|0xfffffffffffe25ed], long[660|0x294]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v9|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = OR (x: v14|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVZXB input: [v20|QWORD + v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v25|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD, v27|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v27|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVSXB input: [v27|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA address: [v29|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v31|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = OR (x: v30|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVZXB input: [v36|QWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v41|DWORD] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|DWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v47|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = UNCOMPRESSPOINTER (input: v50|DWORD, ~baseRegister: v52|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV input: [v51|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV input: [v53|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v47|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = DEC value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, v57|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v59|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV input: [v63|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOV input: [v65|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD, y: v68|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = DEC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|DWORD, v69|DWORD] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-122387|0xfffffffffffe21ed], long[2580|0xa14]] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31027|0xffffffffffff86cd], long[1300|0x514]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73500|0xfffffffffffee0e4], long[0|0x0]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81436|0xfffffffffffec1e4], long[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78875|0xfffffffffffecbe5], long[0|0x0]] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47667|0xffffffffffff45cd], long[1300|0x514]] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-86555|0xfffffffffffeade5], long[0|0x0]] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-123411|0xfffffffffffe1ded], long[2580|0xa14]] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|DWORD, v44|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70195|0xfffffffffffeedcd], long[20|0x14]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121363|0xfffffffffffe25ed], long[660|0x294]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v9|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = OR (x: v14|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVZXB input: [v20|QWORD + v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v25|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD, v27|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v27|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVSXB input: [v27|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA address: [v29|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v31|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = OR (x: v30|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVZXB input: [v36|QWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v41|DWORD] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|DWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v47|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = UNCOMPRESSPOINTER (input: v50|DWORD, ~baseRegister: v52|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV input: [v51|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV input: [v53|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v47|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = DEC value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, v57|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v59|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV input: [v63|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOV input: [v65|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD, y: v68|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = DEC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|DWORD, v69|DWORD] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-122387|0xfffffffffffe21ed], long[2580|0xa14]] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31027|0xffffffffffff86cd], long[1300|0x514]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73500|0xfffffffffffee0e4], long[0|0x0]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81436|0xfffffffffffec1e4], long[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78875|0xfffffffffffecbe5], long[0|0x0]] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47667|0xffffffffffff45cd], long[1300|0x514]] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-86555|0xfffffffffffeade5], long[0|0x0]] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-123411|0xfffffffffffe1ded], long[2580|0xa14]] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|DWORD, v44|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70195|0xfffffffffffeedcd], long[20|0x14]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121363|0xfffffffffffe25ed], long[660|0x294]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v9|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = OR (x: v14|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVZXB input: [v20|QWORD + v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v25|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD, v27|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v27|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVSXB input: [v27|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA address: [v29|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v31|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = OR (x: v30|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVZXB input: [v36|QWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v41|DWORD] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|DWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v47|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = UNCOMPRESSPOINTER (input: v50|DWORD, ~baseRegister: v52|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV input: [v51|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV input: [v53|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v47|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = DEC value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, v57|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v59|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV input: [v63|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOV input: [v65|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD, y: v68|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = DEC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|DWORD, v69|DWORD] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-122387|0xfffffffffffe21ed], long[2580|0xa14]] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31027|0xffffffffffff86cd], long[1300|0x514]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73500|0xfffffffffffee0e4], long[0|0x0]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81436|0xfffffffffffec1e4], long[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78875|0xfffffffffffecbe5], long[0|0x0]] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47667|0xffffffffffff45cd], long[1300|0x514]] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-86555|0xfffffffffffeade5], long[0|0x0]] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-123411|0xfffffffffffe1ded], long[2580|0xa14]] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|DWORD, v44|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70195|0xfffffffffffeedcd], long[20|0x14]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121363|0xfffffffffffe25ed], long[660|0x294]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v9|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = OR (x: v14|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVZXB input: [v20|QWORD + v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v25|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD, v27|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v27|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVSXB input: [v27|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA address: [v29|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v31|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = OR (x: v30|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVZXB input: [v36|QWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v41|DWORD] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|DWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v47|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = UNCOMPRESSPOINTER (input: v50|DWORD, ~baseRegister: v52|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV input: [v51|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV input: [v53|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC value: v47|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = DEC value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, v57|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v59|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV input: [v63|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOV input: [v65|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD, y: v68|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = DEC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|DWORD, v69|DWORD] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-122387|0xfffffffffffe21ed], long[2580|0xa14]] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31027|0xffffffffffff86cd], long[1300|0x514]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73500|0xfffffffffffee0e4], long[0|0x0]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81436|0xfffffffffffec1e4], long[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78875|0xfffffffffffecbe5], long[0|0x0]] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47667|0xffffffffffff45cd], long[1300|0x514]] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-86555|0xfffffffffffeade5], long[0|0x0]] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-123411|0xfffffffffffe1ded], long[2580|0xa14]] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|DWORD, v44|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70195|0xfffffffffffeedcd], long[20|0x14]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121363|0xfffffffffffe25ed], long[660|0x294]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction v9|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction v10|DWORD = MOVSXB input: [v9|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction v11|DWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  134  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  136  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: v10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v14|DWORD = LEA address: [v11|DWORD - 48] size: DWORD <|@ <|@
      nr  178  <|@ instruction v15|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  180  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v17|DWORD = OR (x: v14|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction v18|DWORD = SETCC condition: >= <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v19|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction v20|QWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr  220  <|@ instruction v21|DWORD = MOVZXB input: [v20|QWORD + v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr  224  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v25|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v25|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr  260  <|@ instruction [v26|DWORD, v27|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v27|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction v28|DWORD = MOVSXB input: [v27|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  312  <|@ instruction v29|DWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v30|DWORD = LEA address: [v29|DWORD - 48] size: DWORD <|@ <|@
      nr  356  <|@ instruction v31|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  358  <|@ instruction v32|DWORD = SUB (x: v31|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction v33|DWORD = OR (x: v30|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction v34|DWORD = SETCC condition: >= <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v35|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction v36|QWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction v37|DWORD = MOVZXB input: [v36|QWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr  402  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction v41|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction v42|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v41|DWORD] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction v38|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  450  <|@ instruction CMP (x: v38|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  452  <|@ instruction v39|DWORD = SETCC condition: = <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [v39|DWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  466  <|@ instruction [v47|DWORD, v48|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v47|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: v48|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction v49|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  550  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  552  <|@ instruction v52|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  554  <|@ instruction v51|QWORD = UNCOMPRESSPOINTER (input: v50|DWORD, ~baseRegister: v52|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  556  <|@ instruction v53|QWORD = MOV input: [v51|QWORD + 496] size: QWORD <|@ <|@
      nr  558  <|@ instruction v54|QWORD = MOV input: [v53|QWORD + 64] size: QWORD <|@ <|@
      nr  560  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction rsi|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rbx|QWORD = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rax|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  574  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  576  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction v57|DWORD = DEC value: v47|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction v58|DWORD = DEC value: v48|DWORD size: DWORD <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, v57|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr  618  <|@ instruction [v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction CMPBRANCH (x: v59|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction v61|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  680  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  682  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  684  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  686  <|@ instruction v65|QWORD = MOV input: [v63|QWORD + 496] size: QWORD <|@ <|@
      nr  688  <|@ instruction v66|QWORD = MOV input: [v65|QWORD + 64] size: QWORD <|@ <|@
      nr  690  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction rsi|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rbx|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  706  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: v68|DWORD, y: v68|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction v69|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr  724  <|@ instruction v70|DWORD = DEC value: v59|DWORD size: DWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [v70|DWORD, v69|DWORD] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  790  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction v22|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  810  <|@ instruction CMP (x: v22|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [int[-122387|0xfffffffffffe21ed], long[2580|0xa14]] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [int[-31027|0xffffffffffff86cd], long[1300|0x514]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [int[-73500|0xfffffffffffee0e4], long[0|0x0]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [int[-81436|0xfffffffffffec1e4], long[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [int[-78875|0xfffffffffffecbe5], long[0|0x0]] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [int[-47667|0xffffffffffff45cd], long[1300|0x514]] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [int[-86555|0xfffffffffffeade5], long[0|0x0]] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [int[-123411|0xfffffffffffe1ded], long[2580|0xa14]] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  930  <|@ instruction [v43|DWORD, v44|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v43|DWORD) size: DWORD <|@ <|@
      nr  948  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v44|QWORD) size: QWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [int[-70195|0xfffffffffffeedcd], long[20|0x14]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [int[-121363|0xfffffffffffe25ed], long[660|0x294]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  972  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction v9|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction v10|DWORD = MOVSXB input: [v9|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction v11|DWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  134  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  136  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: v10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v14|DWORD = LEA address: [v11|DWORD - 48] size: DWORD <|@ <|@
      nr  178  <|@ instruction v15|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  180  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v17|DWORD = OR (x: v14|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction v18|DWORD = SETCC condition: >= <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v19|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction v20|QWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr  220  <|@ instruction v21|DWORD = MOVZXB input: [v20|QWORD + v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr  224  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v25|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v25|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr  260  <|@ instruction [v26|DWORD, v27|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v27|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction v28|DWORD = MOVSXB input: [v27|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  312  <|@ instruction v29|DWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v30|DWORD = LEA address: [v29|DWORD - 48] size: DWORD <|@ <|@
      nr  356  <|@ instruction v31|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  358  <|@ instruction v32|DWORD = SUB (x: v31|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction v33|DWORD = OR (x: v30|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction v34|DWORD = SETCC condition: >= <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v35|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction v36|QWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction v37|DWORD = MOVZXB input: [v36|QWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr  402  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction v41|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction v42|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v41|DWORD] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction v38|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  450  <|@ instruction CMP (x: v38|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  452  <|@ instruction v39|DWORD = SETCC condition: = <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [v39|DWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  466  <|@ instruction [v47|DWORD, v48|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v47|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: v48|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction v49|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  550  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  552  <|@ instruction v52|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  554  <|@ instruction v51|QWORD = UNCOMPRESSPOINTER (input: v50|DWORD, ~baseRegister: v52|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  556  <|@ instruction v53|QWORD = MOV input: [v51|QWORD + 496] size: QWORD <|@ <|@
      nr  558  <|@ instruction v54|QWORD = MOV input: [v53|QWORD + 64] size: QWORD <|@ <|@
      nr  560  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction rsi|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rbx|QWORD = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rax|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  574  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  576  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction v57|DWORD = DEC value: v47|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction v58|DWORD = DEC value: v48|DWORD size: DWORD <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, v57|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr  618  <|@ instruction [v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction CMPBRANCH (x: v59|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction v61|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  680  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  682  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  684  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  686  <|@ instruction v65|QWORD = MOV input: [v63|QWORD + 496] size: QWORD <|@ <|@
      nr  688  <|@ instruction v66|QWORD = MOV input: [v65|QWORD + 64] size: QWORD <|@ <|@
      nr  690  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction rsi|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rbx|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  706  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: v68|DWORD, y: v68|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction v69|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr  724  <|@ instruction v70|DWORD = DEC value: v59|DWORD size: DWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [v70|DWORD, v69|DWORD] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  790  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction v22|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  810  <|@ instruction CMP (x: v22|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [int[-122387|0xfffffffffffe21ed], long[2580|0xa14]] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [int[-31027|0xffffffffffff86cd], long[1300|0x514]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [int[-73500|0xfffffffffffee0e4], long[0|0x0]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [int[-81436|0xfffffffffffec1e4], long[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [int[-78875|0xfffffffffffecbe5], long[0|0x0]] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [int[-47667|0xffffffffffff45cd], long[1300|0x514]] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [int[-86555|0xfffffffffffeade5], long[0|0x0]] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [int[-123411|0xfffffffffffe1ded], long[2580|0xa14]] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  930  <|@ instruction [v43|DWORD, v44|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v43|DWORD) size: DWORD <|@ <|@
      nr  948  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v44|QWORD) size: QWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [int[-70195|0xfffffffffffeedcd], long[20|0x14]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [int[-121363|0xfffffffffffe25ed], long[660|0x294]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  972  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v54|q [0, 1[[572, 576[[702, 706[[756, 758[[788, 790[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v47|d [0, 32[[566, 575[[696, 705[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 30[[564, 575[[694, 705[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v53|q [0, 1[[570, 575[[700, 705[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[574, 575[[704, 705[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v55|q [0, 28[[562, 575[[692, 705[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 34[[568, 575[[698, 705[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [28, 580[[600, 728[[792, 951[[952, 993[28 MustHaveRegister 86 MustHaveRegister 498 MustHaveRegister 548 MustHaveRegister 628 MustHaveRegister 678 MustHaveRegister 727 LiveAtLoopEnd  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [30, 580[[600, 728[[792, 951[[952, 993[30 MustHaveRegister 36 MustHaveRegister 564 ShouldHaveRegister 694 ShouldHaveRegister 727 LiveAtLoopEnd 836 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [32, 245[[246, 256[[792, 816[[840, 849[[850, 860[[870, 880[[890, 910[[952, 993[32 MustHaveRegister 38 ShouldHaveRegister 70 ShouldHaveRegister 126 ShouldHaveRegister 244 ShouldHaveRegister 256 ShouldHaveRegister 848 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q r8|- [34, 580[[600, 728[[792, 951[[952, 993[34 MustHaveRegister 50 MustHaveRegister 66 MustHaveRegister 90 MustHaveRegister 568 ShouldHaveRegister 698 ShouldHaveRegister 727 LiveAtLoopEnd  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [36, 476[[792, 826[[840, 850[[860, 870[[880, 890[[910, 951[36 MustHaveRegister 38 MustHaveRegister 270 MustHaveRegister 431 LiveAtLoopEnd 476 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [66, 236[[246, 456[[792, 816[66 MustHaveRegister 68 MustHaveRegister 128 MustHaveRegister 310 MustHaveRegister 431 LiveAtLoopEnd  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [68, 236[[246, 456[[792, 816[68 MustHaveRegister 70 MustHaveRegister 282 MustHaveRegister 431 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [86, 236[[246, 456[[792, 816[86 MustHaveRegister 88 MustHaveRegister 202 MustHaveRegister 380 MustHaveRegister 431 LiveAtLoopEnd 448 MustHaveRegister 808 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [88, 134[88 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [126, 128[126 MustHaveRegister 128 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [128, 148[[190, 218[128 MustHaveRegister 130 ShouldHaveRegister 148 ShouldHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [130, 181[[190, 204[[792, 810[130 MustHaveRegister 176 MustHaveRegister 180 ShouldHaveRegister 204 MustHaveRegister 810 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v8|d [134, 236[[246, 456[[792, 816[134 MustHaveRegister 136 MustHaveRegister 314 MustHaveRegister 431 LiveAtLoopEnd  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [132, 135[132 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [176, 182[176 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d v15|d [180, 182[180 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d v14|d [182, 184[182 MustHaveRegister 184 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v24|d [186, 189[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d -1 [202, 220[202 MustHaveRegister 204 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [218, 220[218 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [220, 223[220 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [808, 810[808 MustHaveRegister 810 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d -1 [812, 815[812 MustHaveRegister 814 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v18|d [224, 234[234 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d v2|d [256, 259[256 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d v42|d [260, 428[[432, 465[[816, 825[[860, 870[[880, 890[[910, 951[428 ShouldHaveRegister 464 ShouldHaveRegister 824 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d v25|d [260, 426[[432, 465[[816, 825[[860, 870[[880, 890[[910, 951[270 ShouldHaveRegister 282 ShouldHaveRegister 310 MustHaveRegister 426 ShouldHaveRegister 464 ShouldHaveRegister 824 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d -1 [310, 326[[368, 396[310 MustHaveRegister 312 ShouldHaveRegister 326 ShouldHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d -1 [312, 359[[368, 382[[432, 450[312 MustHaveRegister 354 MustHaveRegister 358 ShouldHaveRegister 382 MustHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d -1 [354, 360[354 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [356, 358[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d v31|d [358, 360[358 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d v30|d [360, 362[360 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d v40|d [364, 367[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d -1 [380, 398[380 MustHaveRegister 382 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q -1 [396, 398[396 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d -1 [398, 401[398 MustHaveRegister 400 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d -1 [448, 450[448 MustHaveRegister 450 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [452, 455[452 MustHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d v34|d [402, 412[412 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d v27|d [426, 431[426 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d v26|d [428, 431[428 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d -1 [930, 946[946 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q -1 [930, 948[948 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d -1 [972, 988[988 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q -1 [972, 990[990 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d v2|d [466, 580[[600, 612[[826, 840[476 ShouldHaveRegister 566 ShouldHaveRegister 612 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d v26|d [466, 580[[600, 614[[826, 840[498 MustHaveRegister 614 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d -1 [548, 560[548 MustHaveRegister 550 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d -1 [550, 554[550 MustHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q v50|d [554, 556[554 MustHaveRegister 556 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q -1 [552, 555[552 MustHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q -1 [556, 570[556 MustHaveRegister 558 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q -1 [558, 572[558 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q v49|d [560, 562[560 MustHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d rax|d [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[v57|d]" v57|d v47|d [612, 617[612 MustHaveRegister 616 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[v58|d]" v58|d v48|d [614, 617[614 MustHaveRegister 616 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[v59|d]" v59|d v58|d [618, 724[628 MustHaveRegister 724 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[v60|d]" v60|d v57|d [618, 722[696 ShouldHaveRegister 722 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[v61|d]" v61|d -1 [678, 690[678 MustHaveRegister 680 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[v62|d]" v62|d -1 [680, 684[680 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q v62|d [684, 686[684 MustHaveRegister 686 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q -1 [682, 685[682 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q -1 [686, 700[686 MustHaveRegister 688 MustHaveRegister 700 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q -1 [688, 702[688 MustHaveRegister 702 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q v61|d [690, 692[690 MustHaveRegister 692 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[v68|d]" v68|d rax|d [706, 708[706 MustHaveRegister 708 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[v69|d]" v69|d v60|d [722, 727[722 MustHaveRegister 726 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[v70|d]" v70|d v59|d [724, 727[724 MustHaveRegister 726 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v54|q [0, 1[[572, 576[[702, 706[[756, 758[[788, 790[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v47|d [0, 32[[566, 575[[696, 705[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 30[[564, 575[[694, 705[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v53|q [0, 1[[570, 575[[700, 705[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[574, 575[[704, 705[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v55|q [0, 28[[562, 575[[692, 705[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 34[[568, 575[[698, 705[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [28, 561[28 MustHaveRegister 86 MustHaveRegister 498 MustHaveRegister 548 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [30, 563[30 MustHaveRegister 36 MustHaveRegister  "SpillInDominator"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [32, 245[[246, 256[[792, 816[[840, 849[[850, 860[[870, 880[[890, 910[[952, 993[32 MustHaveRegister 38 ShouldHaveRegister 70 ShouldHaveRegister 126 ShouldHaveRegister 244 ShouldHaveRegister 256 ShouldHaveRegister 848 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [34, 567[34 MustHaveRegister 50 MustHaveRegister 66 MustHaveRegister 90 MustHaveRegister  "SpillInDominator"
  v4|d DWORD "[r10|d]" v4|d -1 [36, 476[[792, 826[[840, 850[[860, 870[[880, 890[[910, 951[36 MustHaveRegister 38 MustHaveRegister 270 MustHaveRegister 431 LiveAtLoopEnd 476 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [66, 236[[246, 456[[792, 816[66 MustHaveRegister 68 MustHaveRegister 128 MustHaveRegister 310 MustHaveRegister 431 LiveAtLoopEnd  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [68, 236[[246, 456[[792, 816[68 MustHaveRegister 70 MustHaveRegister 282 MustHaveRegister 431 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d -1 [86, 236[[246, 456[[792, 816[86 MustHaveRegister 88 MustHaveRegister 202 MustHaveRegister 380 MustHaveRegister 431 LiveAtLoopEnd 448 MustHaveRegister 808 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d -1 [88, 134[88 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rdi|q]" v9|q -1 [126, 128[126 MustHaveRegister 128 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rdi|d]" v10|d -1 [128, 148[[190, 218[128 MustHaveRegister 130 ShouldHaveRegister 148 ShouldHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rbp|d]" v11|d -1 [130, 181[[190, 204[[792, 810[130 MustHaveRegister 176 MustHaveRegister 180 ShouldHaveRegister 204 MustHaveRegister 810 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v8|d [134, 236[[246, 456[[792, 816[134 MustHaveRegister 136 MustHaveRegister 314 MustHaveRegister 431 LiveAtLoopEnd  "NoSpillStore"
  v13|q QWORD "[r13|q]" v13|q -1 [132, 135[132 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rdi|d]" v14|d -1 [176, 182[176 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r13|d]" v15|d -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r13|d]" v16|d v15|d [180, 182[180 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rdi|d]" v17|d v14|d [182, 184[182 MustHaveRegister 184 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rdi|d]" v18|d v24|d [186, 189[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r13|d]" v19|d -1 [202, 220[202 MustHaveRegister 204 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdi|q]" v20|q -1 [218, 220[218 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rdi|d]" v21|d -1 [220, 223[220 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r8|d]" v22|d -1 [808, 810[808 MustHaveRegister 810 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[r8|d]" v23|d -1 [812, 815[812 MustHaveRegister 814 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rdi|d]" v24|d v18|d [224, 234[234 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d v2|d [256, 259[256 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rcx|d]" v26|d v42|d [260, 428[[432, 465[[816, 825[[860, 870[[880, 890[[910, 951[428 ShouldHaveRegister 464 ShouldHaveRegister 824 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rdi|d]" v27|d v25|d [260, 426[[432, 465[[816, 825[[860, 870[[880, 890[[910, 951[270 ShouldHaveRegister 282 ShouldHaveRegister 310 MustHaveRegister 426 ShouldHaveRegister 464 ShouldHaveRegister 824 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rbp|d]" v28|d -1 [310, 326[[368, 396[310 MustHaveRegister 312 ShouldHaveRegister 326 ShouldHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r13|d]" v29|d -1 [312, 359[[368, 382[[432, 450[312 MustHaveRegister 354 MustHaveRegister 358 ShouldHaveRegister 382 MustHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rbp|d]" v30|d -1 [354, 360[354 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r14|d]" v31|d -1 [356, 358[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[r14|d]" v32|d v31|d [358, 360[358 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rbp|d]" v33|d v30|d [360, 362[360 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rbp|d]" v34|d v40|d [364, 367[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[r14|d]" v35|d -1 [380, 398[380 MustHaveRegister 382 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rbp|q]" v36|q -1 [396, 398[396 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rbp|d]" v37|d -1 [398, 401[398 MustHaveRegister 400 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rbp|d]" v38|d -1 [448, 450[448 MustHaveRegister 450 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rbp|d]" v39|d -1 [452, 455[452 MustHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[rbp|d]" v40|d v34|d [402, 412[412 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rdi|d]" v41|d v27|d [426, 431[426 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rcx|d]" v42|d v26|d [428, 431[428 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[r11|d]" v43|d -1 [930, 946[946 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[r8|q]" v44|q -1 [930, 948[948 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[r10|d]" v45|d -1 [972, 988[988 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r11|q]" v46|q -1 [972, 990[990 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rcx|d]" v47|d v2|d [466, 565[476 ShouldHaveRegister  "OneSpillStore"
  v48|d DWORD "[r11|d]" v48|d v26|d [466, 500[498 MustHaveRegister  "OneSpillStore"
  v49|d DWORD "[rbx|d]" v49|d -1 [548, 560[548 MustHaveRegister 550 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rax|d]" v50|d -1 [550, 554[550 MustHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q v50|d [554, 556[554 MustHaveRegister 556 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r10|q]" v52|q -1 [552, 555[552 MustHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q -1 [556, 570[556 MustHaveRegister 558 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q -1 [558, 572[558 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rbx|q]" v55|q v49|d [560, 562[560 MustHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rax|d]" v56|d rax|d [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[rcx|d]" v57|d v47|d [612, 617[612 MustHaveRegister 616 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d v48|d [614, 617[614 MustHaveRegister 616 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[r11|d]" v59|d v58|d [618, 630[628 MustHaveRegister  "OneSpillStore"
  v60|d DWORD "[rcx|d]" v60|d v57|d [618, 695[ "OneSpillStore"
  v61|d DWORD "[rbx|d]" v61|d -1 [678, 690[678 MustHaveRegister 680 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[rax|d]" v62|d -1 [680, 684[680 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rax|q]" v63|q v62|d [684, 686[684 MustHaveRegister 686 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[r10|q]" v64|q -1 [682, 685[682 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rax|q]" v65|q -1 [686, 700[686 MustHaveRegister 688 MustHaveRegister 700 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[r10|q]" v66|q -1 [688, 702[688 MustHaveRegister 702 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rbx|q]" v67|q v61|d [690, 692[690 MustHaveRegister 692 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[rax|d]" v68|d rax|d [706, 708[706 MustHaveRegister 708 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[rcx|d]" v69|d v60|d [722, 727[722 MustHaveRegister 726 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[r11|d]" v70|d v59|d [724, 727[724 MustHaveRegister 726 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[vstack:2|q]" v0|q v0|q [561, 573[ "SpillInDominator"
  v72|q QWORD "[rdi|q]" v1|q v1|q [563, 573[564 ShouldHaveRegister  "SpillInDominator"
  v73|q QWORD "[r13|q]" v3|q v3|q [567, 573[568 ShouldHaveRegister  "SpillInDominator"
  v74|d DWORD "[rbp|d]" v47|d v47|d [565, 573[566 ShouldHaveRegister  "OneSpillStore"
  v75|d DWORD "[vstack:1|d]" v48|d v48|d [500, 573[ "OneSpillStore"
  v76|d DWORD "[vstack:1|d]" v48|d v48|d [573, 580[[600, 614[[826, 840[614 ShouldHaveRegister  "OneSpillStore"
  v77|q QWORD "[vstack:2|q]" v0|q v0|q [573, 580[[600, 618[ "SpillInDominator"
  v78|q QWORD "[vstack:3|q]" v1|q v1|q [573, 580[[600, 618[ "SpillInDominator"
  v79|d DWORD "[vstack:0|d]" v47|d v47|d [573, 580[[600, 612[[826, 840[612 ShouldHaveRegister  "OneSpillStore"
  v80|q QWORD "[vstack:4|q]" v3|q v3|q [573, 580[[600, 618[ "SpillInDominator"
  v81|q QWORD "[rsi|q]" v0|q v0|q [618, 691[628 MustHaveRegister 678 MustHaveRegister  "SpillInDominator"
  v82|q QWORD "[rdx|q]" v1|q v1|q [618, 693[ "SpillInDominator"
  v83|q QWORD "[r8|q]" v3|q v3|q [618, 697[ "SpillInDominator"
  v84|q QWORD "[vstack:2|q]" v0|q v0|q [691, 703[ "SpillInDominator"
  v85|d DWORD "[vstack:8|d]" v59|d v59|d [630, 703[ "OneSpillStore"
  v86|q QWORD "[rdi|q]" v1|q v1|q [693, 703[694 ShouldHaveRegister  "SpillInDominator"
  v87|d DWORD "[rbp|d]" v60|d v60|d [695, 703[696 ShouldHaveRegister  "OneSpillStore"
  v88|q QWORD "[r13|q]" v3|q v3|q [697, 703[698 ShouldHaveRegister  "SpillInDominator"
  v89|d DWORD "[vstack:8|d]" v59|d v59|d [703, 710[ "OneSpillStore"
  v90|q QWORD "[vstack:2|q]" v0|q v0|q [703, 728[[792, 951[[952, 972[727 LiveAtLoopEnd  "SpillInDominator"
  v91|q QWORD "[vstack:3|q]" v1|q v1|q [703, 728[[792, 826[727 LiveAtLoopEnd  "SpillInDominator"
  v92|d DWORD "[vstack:7|d]" v60|d v60|d [703, 710[ "OneSpillStore"
  v93|q QWORD "[vstack:4|q]" v3|q v3|q [703, 728[[792, 951[[952, 972[727 LiveAtLoopEnd  "SpillInDominator"
  v94|d DWORD "[rcx|d]" v60|d v60|d [710, 722[722 ShouldHaveRegister  "OneSpillStore"
  v95|d DWORD "[r11|d]" v59|d v59|d [710, 724[724 ShouldHaveRegister  "OneSpillStore"
  v96|q QWORD "[r8|q]" v3|q v3|q [972, 993[ "SpillInDominator"
  v97|q QWORD "[rdx|q]" v1|q v1|q [826, 951[[952, 993[836 MustHaveRegister  "SpillInDominator"
  v98|q QWORD "[rsi|q]" v0|q v0|q [972, 993[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction v9|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction v10|DWORD = MOVSXB input: [v9|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction v11|DWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  134  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  136  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: v10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v14|DWORD = LEA address: [v11|DWORD - 48] size: DWORD <|@ <|@
      nr  178  <|@ instruction v15|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  180  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v17|DWORD = OR (x: v14|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction v18|DWORD = SETCC condition: >= <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v19|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction v20|QWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr  220  <|@ instruction v21|DWORD = MOVZXB input: [v20|QWORD + v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr  224  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v25|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v25|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr  260  <|@ instruction [v26|DWORD, v27|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v27|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction v28|DWORD = MOVSXB input: [v27|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  312  <|@ instruction v29|DWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v30|DWORD = LEA address: [v29|DWORD - 48] size: DWORD <|@ <|@
      nr  356  <|@ instruction v31|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  358  <|@ instruction v32|DWORD = SUB (x: v31|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction v33|DWORD = OR (x: v30|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction v34|DWORD = SETCC condition: >= <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v35|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction v36|QWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction v37|DWORD = MOVZXB input: [v36|QWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr  402  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction v41|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction v42|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v41|DWORD] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction v38|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  450  <|@ instruction CMP (x: v38|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  452  <|@ instruction v39|DWORD = SETCC condition: = <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [v39|DWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  466  <|@ instruction [v47|DWORD, v48|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v47|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: v48|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction v49|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  550  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  552  <|@ instruction v52|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  554  <|@ instruction v51|QWORD = UNCOMPRESSPOINTER (input: v50|DWORD, ~baseRegister: v52|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  556  <|@ instruction v53|QWORD = MOV input: [v51|QWORD + 496] size: QWORD <|@ <|@
      nr  558  <|@ instruction v54|QWORD = MOV input: [v53|QWORD + 64] size: QWORD <|@ <|@
      nr  560  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  562  <|@ instruction rsi|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  564  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  568  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rbx|QWORD = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rax|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v73|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = STACKMOVE (input: v71|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = STACKMOVE (input: v75|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: v74|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  576  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction v57|DWORD = DEC value: v47|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction v58|DWORD = DEC value: v48|DWORD size: DWORD <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, v57|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr  618  <|@ instruction [v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction CMPBRANCH (x: v59|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction v61|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  680  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  682  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  684  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  686  <|@ instruction v65|QWORD = MOV input: [v63|QWORD + 496] size: QWORD <|@ <|@
      nr  688  <|@ instruction v66|QWORD = MOV input: [v65|QWORD + 64] size: QWORD <|@ <|@
      nr  690  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  692  <|@ instruction rsi|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v60|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  698  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rbx|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = STACKMOVE (input: v84|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = STACKMOVE (input: v85|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  706  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: v68|DWORD, y: v68|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction v69|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr  724  <|@ instruction v70|DWORD = DEC value: v59|DWORD size: DWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [v70|DWORD, v69|DWORD] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  790  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction v22|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  810  <|@ instruction CMP (x: v22|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [int[-122387|0xfffffffffffe21ed], long[2580|0xa14]] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [int[-31027|0xffffffffffff86cd], long[1300|0x514]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [int[-73500|0xfffffffffffee0e4], long[0|0x0]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [int[-81436|0xfffffffffffec1e4], long[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [int[-78875|0xfffffffffffecbe5], long[0|0x0]] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [int[-47667|0xffffffffffff45cd], long[1300|0x514]] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [int[-86555|0xfffffffffffeade5], long[0|0x0]] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [int[-123411|0xfffffffffffe1ded], long[2580|0xa14]] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  930  <|@ instruction [v43|DWORD, v44|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v43|DWORD) size: DWORD <|@ <|@
      nr  948  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v44|QWORD) size: QWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [int[-70195|0xfffffffffffeedcd], long[20|0x14]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [int[-121363|0xfffffffffffe25ed], long[660|0x294]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  972  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v54|q [0, 1[[572, 576[[702, 706[[756, 758[[788, 790[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v47|d [0, 32[[566, 575[[696, 705[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 30[[564, 575[[694, 705[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v53|q [0, 1[[570, 575[[700, 705[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[574, 575[[704, 705[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v55|q [0, 28[[562, 575[[692, 705[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 34[[568, 575[[698, 705[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [28, 561[28 MustHaveRegister 86 MustHaveRegister 498 MustHaveRegister 548 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [30, 563[30 MustHaveRegister 36 MustHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [32, 245[[246, 256[[792, 816[[840, 849[[850, 860[[870, 880[[890, 910[[952, 993[32 MustHaveRegister 38 ShouldHaveRegister 70 ShouldHaveRegister 126 ShouldHaveRegister 244 ShouldHaveRegister 256 ShouldHaveRegister 848 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [34, 567[34 MustHaveRegister 50 MustHaveRegister 66 MustHaveRegister 90 MustHaveRegister  "StoreAtDefinition"
  v4|d DWORD "[r10|d]" v4|d -1 [36, 476[[792, 826[[840, 850[[860, 870[[880, 890[[910, 951[36 MustHaveRegister 38 MustHaveRegister 270 MustHaveRegister 431 LiveAtLoopEnd 476 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [66, 236[[246, 456[[792, 816[66 MustHaveRegister 68 MustHaveRegister 128 MustHaveRegister 310 MustHaveRegister 431 LiveAtLoopEnd  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [68, 236[[246, 456[[792, 816[68 MustHaveRegister 70 MustHaveRegister 282 MustHaveRegister 431 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d -1 [86, 236[[246, 456[[792, 816[86 MustHaveRegister 88 MustHaveRegister 202 MustHaveRegister 380 MustHaveRegister 431 LiveAtLoopEnd 448 MustHaveRegister 808 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d -1 [88, 134[88 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rdi|q]" v9|q -1 [126, 128[126 MustHaveRegister 128 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rdi|d]" v10|d -1 [128, 148[[190, 218[128 MustHaveRegister 130 ShouldHaveRegister 148 ShouldHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rbp|d]" v11|d -1 [130, 181[[190, 204[[792, 810[130 MustHaveRegister 176 MustHaveRegister 180 ShouldHaveRegister 204 MustHaveRegister 810 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v8|d [134, 236[[246, 456[[792, 816[134 MustHaveRegister 136 MustHaveRegister 314 MustHaveRegister 431 LiveAtLoopEnd  "NoSpillStore"
  v13|q QWORD "[r13|q]" v13|q -1 [132, 135[132 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rdi|d]" v14|d -1 [176, 182[176 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r13|d]" v15|d -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r13|d]" v16|d v15|d [180, 182[180 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rdi|d]" v17|d v14|d [182, 184[182 MustHaveRegister 184 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rdi|d]" v18|d v24|d [186, 189[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r13|d]" v19|d -1 [202, 220[202 MustHaveRegister 204 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdi|q]" v20|q -1 [218, 220[218 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rdi|d]" v21|d -1 [220, 223[220 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r8|d]" v22|d -1 [808, 810[808 MustHaveRegister 810 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[r8|d]" v23|d -1 [812, 815[812 MustHaveRegister 814 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rdi|d]" v24|d v18|d [224, 234[234 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d v2|d [256, 259[256 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rcx|d]" v26|d v42|d [260, 428[[432, 465[[816, 825[[860, 870[[880, 890[[910, 951[428 ShouldHaveRegister 464 ShouldHaveRegister 824 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rdi|d]" v27|d v25|d [260, 426[[432, 465[[816, 825[[860, 870[[880, 890[[910, 951[270 ShouldHaveRegister 282 ShouldHaveRegister 310 MustHaveRegister 426 ShouldHaveRegister 464 ShouldHaveRegister 824 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rbp|d]" v28|d -1 [310, 326[[368, 396[310 MustHaveRegister 312 ShouldHaveRegister 326 ShouldHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r13|d]" v29|d -1 [312, 359[[368, 382[[432, 450[312 MustHaveRegister 354 MustHaveRegister 358 ShouldHaveRegister 382 MustHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rbp|d]" v30|d -1 [354, 360[354 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r14|d]" v31|d -1 [356, 358[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[r14|d]" v32|d v31|d [358, 360[358 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rbp|d]" v33|d v30|d [360, 362[360 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rbp|d]" v34|d v40|d [364, 367[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[r14|d]" v35|d -1 [380, 398[380 MustHaveRegister 382 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rbp|q]" v36|q -1 [396, 398[396 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rbp|d]" v37|d -1 [398, 401[398 MustHaveRegister 400 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rbp|d]" v38|d -1 [448, 450[448 MustHaveRegister 450 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rbp|d]" v39|d -1 [452, 455[452 MustHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[rbp|d]" v40|d v34|d [402, 412[412 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rdi|d]" v41|d v27|d [426, 431[426 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rcx|d]" v42|d v26|d [428, 431[428 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[r11|d]" v43|d -1 [930, 946[946 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[r8|q]" v44|q -1 [930, 948[948 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[r10|d]" v45|d -1 [972, 988[988 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r11|q]" v46|q -1 [972, 990[990 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rcx|d]" v47|d v2|d [466, 565[476 ShouldHaveRegister  "OneSpillStore"
  v48|d DWORD "[r11|d]" v48|d v26|d [466, 500[498 MustHaveRegister  "OneSpillStore"
  v49|d DWORD "[rbx|d]" v49|d -1 [548, 560[548 MustHaveRegister 550 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rax|d]" v50|d -1 [550, 554[550 MustHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q v50|d [554, 556[554 MustHaveRegister 556 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r10|q]" v52|q -1 [552, 555[552 MustHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q -1 [556, 570[556 MustHaveRegister 558 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q -1 [558, 572[558 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rbx|q]" v55|q v49|d [560, 562[560 MustHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rax|d]" v56|d rax|d [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[rcx|d]" v57|d v47|d [612, 617[612 MustHaveRegister 616 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d v48|d [614, 617[614 MustHaveRegister 616 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[r11|d]" v59|d v58|d [618, 630[628 MustHaveRegister  "OneSpillStore"
  v60|d DWORD "[rcx|d]" v60|d v57|d [618, 695[ "OneSpillStore"
  v61|d DWORD "[rbx|d]" v61|d -1 [678, 690[678 MustHaveRegister 680 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[rax|d]" v62|d -1 [680, 684[680 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rax|q]" v63|q v62|d [684, 686[684 MustHaveRegister 686 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[r10|q]" v64|q -1 [682, 685[682 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rax|q]" v65|q -1 [686, 700[686 MustHaveRegister 688 MustHaveRegister 700 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[r10|q]" v66|q -1 [688, 702[688 MustHaveRegister 702 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rbx|q]" v67|q v61|d [690, 692[690 MustHaveRegister 692 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[rax|d]" v68|d rax|d [706, 708[706 MustHaveRegister 708 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[rcx|d]" v69|d v60|d [722, 727[722 MustHaveRegister 726 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[r11|d]" v70|d v59|d [724, 727[724 MustHaveRegister 726 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[vstack:2|q]" v0|q v0|q [561, 573[ "StoreAtDefinition"
  v72|q QWORD "[rdi|q]" v1|q v1|q [563, 573[564 ShouldHaveRegister  "StoreAtDefinition"
  v73|q QWORD "[r13|q]" v3|q v3|q [567, 573[568 ShouldHaveRegister  "StoreAtDefinition"
  v74|d DWORD "[rbp|d]" v47|d v47|d [565, 573[566 ShouldHaveRegister  "OneSpillStore"
  v75|d DWORD "[vstack:1|d]" v48|d v48|d [500, 573[ "OneSpillStore"
  v76|d DWORD "[vstack:1|d]" v48|d v48|d [573, 580[[600, 614[[826, 840[614 ShouldHaveRegister  "OneSpillStore"
  v77|q QWORD "[vstack:2|q]" v0|q v0|q [573, 580[[600, 618[ "StoreAtDefinition"
  v78|q QWORD "[vstack:3|q]" v1|q v1|q [573, 580[[600, 618[ "StoreAtDefinition"
  v79|d DWORD "[vstack:0|d]" v47|d v47|d [573, 580[[600, 612[[826, 840[612 ShouldHaveRegister  "OneSpillStore"
  v80|q QWORD "[vstack:4|q]" v3|q v3|q [573, 580[[600, 618[ "StoreAtDefinition"
  v81|q QWORD "[rsi|q]" v0|q v0|q [618, 691[628 MustHaveRegister 678 MustHaveRegister  "StoreAtDefinition"
  v82|q QWORD "[rdx|q]" v1|q v1|q [618, 693[ "StoreAtDefinition"
  v83|q QWORD "[r8|q]" v3|q v3|q [618, 697[ "StoreAtDefinition"
  v84|q QWORD "[vstack:2|q]" v0|q v0|q [691, 703[ "StoreAtDefinition"
  v85|d DWORD "[vstack:8|d]" v59|d v59|d [630, 703[ "OneSpillStore"
  v86|q QWORD "[rdi|q]" v1|q v1|q [693, 703[694 ShouldHaveRegister  "StoreAtDefinition"
  v87|d DWORD "[rbp|d]" v60|d v60|d [695, 703[696 ShouldHaveRegister  "OneSpillStore"
  v88|q QWORD "[r13|q]" v3|q v3|q [697, 703[698 ShouldHaveRegister  "StoreAtDefinition"
  v89|d DWORD "[vstack:8|d]" v59|d v59|d [703, 710[ "OneSpillStore"
  v90|q QWORD "[vstack:2|q]" v0|q v0|q [703, 728[[792, 951[[952, 972[727 LiveAtLoopEnd  "StoreAtDefinition"
  v91|q QWORD "[vstack:3|q]" v1|q v1|q [703, 728[[792, 826[727 LiveAtLoopEnd  "StoreAtDefinition"
  v92|d DWORD "[vstack:7|d]" v60|d v60|d [703, 710[ "OneSpillStore"
  v93|q QWORD "[vstack:4|q]" v3|q v3|q [703, 728[[792, 951[[952, 972[727 LiveAtLoopEnd  "StoreAtDefinition"
  v94|d DWORD "[rcx|d]" v60|d v60|d [710, 722[722 ShouldHaveRegister  "OneSpillStore"
  v95|d DWORD "[r11|d]" v59|d v59|d [710, 724[724 ShouldHaveRegister  "OneSpillStore"
  v96|q QWORD "[r8|q]" v3|q v3|q [972, 993[ "StoreAtDefinition"
  v97|q QWORD "[rdx|q]" v1|q v1|q [826, 951[[952, 993[836 MustHaveRegister  "StoreAtDefinition"
  v98|q QWORD "[rsi|q]" v0|q v0|q [972, 993[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction v9|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction v10|DWORD = MOVSXB input: [v9|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction v11|DWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  134  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  136  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: v10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v14|DWORD = LEA address: [v11|DWORD - 48] size: DWORD <|@ <|@
      nr  178  <|@ instruction v15|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  180  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v17|DWORD = OR (x: v14|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction v18|DWORD = SETCC condition: >= <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v19|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction v20|QWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr  220  <|@ instruction v21|DWORD = MOVZXB input: [v20|QWORD + v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr  224  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v25|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v25|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr  260  <|@ instruction [v26|DWORD, v27|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v27|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction v28|DWORD = MOVSXB input: [v27|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  312  <|@ instruction v29|DWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v30|DWORD = LEA address: [v29|DWORD - 48] size: DWORD <|@ <|@
      nr  356  <|@ instruction v31|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  358  <|@ instruction v32|DWORD = SUB (x: v31|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction v33|DWORD = OR (x: v30|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction v34|DWORD = SETCC condition: >= <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [v34|DWORD] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v35|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction v36|QWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction v37|DWORD = MOVZXB input: [v36|QWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr  402  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction v41|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction v42|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v41|DWORD] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction v38|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  450  <|@ instruction CMP (x: v38|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  452  <|@ instruction v39|DWORD = SETCC condition: = <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [v39|DWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  466  <|@ instruction [v47|DWORD, v48|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v47|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: v48|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction v49|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  550  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  552  <|@ instruction v52|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  554  <|@ instruction v51|QWORD = UNCOMPRESSPOINTER (input: v50|DWORD, ~baseRegister: v52|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  556  <|@ instruction v53|QWORD = MOV input: [v51|QWORD + 496] size: QWORD <|@ <|@
      nr  558  <|@ instruction v54|QWORD = MOV input: [v53|QWORD + 64] size: QWORD <|@ <|@
      nr  560  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  562  <|@ instruction rsi|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  564  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  568  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rbx|QWORD = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rax|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v73|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = STACKMOVE (input: v71|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = STACKMOVE (input: v75|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: v74|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  576  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction v57|DWORD = DEC value: v47|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction v58|DWORD = DEC value: v48|DWORD size: DWORD <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [v58|DWORD, v57|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr  618  <|@ instruction [v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction CMPBRANCH (x: v59|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction v61|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  680  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  682  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  684  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  686  <|@ instruction v65|QWORD = MOV input: [v63|QWORD + 496] size: QWORD <|@ <|@
      nr  688  <|@ instruction v66|QWORD = MOV input: [v65|QWORD + 64] size: QWORD <|@ <|@
      nr  690  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  692  <|@ instruction rsi|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v60|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  698  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rbx|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = STACKMOVE (input: v84|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = STACKMOVE (input: v85|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  706  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: v68|DWORD, y: v68|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction v69|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr  724  <|@ instruction v70|DWORD = DEC value: v59|DWORD size: DWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [v70|DWORD, v69|DWORD] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  790  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction v22|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  810  <|@ instruction CMP (x: v22|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v26|DWORD] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [v2|DWORD, int[0|0x0]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [int[-122387|0xfffffffffffe21ed], long[2580|0xa14]] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [int[-31027|0xffffffffffff86cd], long[1300|0x514]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [int[-73500|0xfffffffffffee0e4], long[0|0x0]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [int[-81436|0xfffffffffffec1e4], long[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [int[-78875|0xfffffffffffecbe5], long[0|0x0]] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [int[-47667|0xffffffffffff45cd], long[1300|0x514]] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [int[-86555|0xfffffffffffeade5], long[0|0x0]] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [int[-123411|0xfffffffffffe1ded], long[2580|0xa14]] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  930  <|@ instruction [v43|DWORD, v44|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v43|DWORD) size: DWORD <|@ <|@
      nr  948  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v44|QWORD) size: QWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [int[-70195|0xfffffffffffeedcd], long[20|0x14]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [int[-121363|0xfffffffffffe25ed], long[660|0x294]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  972  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v54|q [0, 1[[572, 576[[702, 706[[756, 758[[788, 790[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v47|d [0, 32[[566, 575[[696, 705[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 30[[564, 575[[694, 705[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v53|q [0, 1[[570, 575[[700, 705[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[574, 575[[704, 705[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v55|q [0, 28[[562, 575[[692, 705[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 34[[568, 575[[698, 705[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[574, 575[[704, 705[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [28, 561[28 MustHaveRegister 86 MustHaveRegister 498 MustHaveRegister 548 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [30, 563[30 MustHaveRegister 36 MustHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [32, 245[[246, 256[[792, 816[[840, 849[[850, 860[[870, 880[[890, 910[[952, 993[32 MustHaveRegister 38 ShouldHaveRegister 70 ShouldHaveRegister 126 ShouldHaveRegister 244 ShouldHaveRegister 256 ShouldHaveRegister 848 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [34, 567[34 MustHaveRegister 50 MustHaveRegister 66 MustHaveRegister 90 MustHaveRegister  "StoreAtDefinition"
  v4|d DWORD "[r10|d]" v4|d -1 [36, 476[[792, 826[[840, 850[[860, 870[[880, 890[[910, 951[36 MustHaveRegister 38 MustHaveRegister 270 MustHaveRegister 431 LiveAtLoopEnd 476 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [66, 236[[246, 456[[792, 816[66 MustHaveRegister 68 MustHaveRegister 128 MustHaveRegister 310 MustHaveRegister 431 LiveAtLoopEnd  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [68, 236[[246, 456[[792, 816[68 MustHaveRegister 70 MustHaveRegister 282 MustHaveRegister 431 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d -1 [86, 236[[246, 456[[792, 816[86 MustHaveRegister 88 MustHaveRegister 202 MustHaveRegister 380 MustHaveRegister 431 LiveAtLoopEnd 448 MustHaveRegister 808 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d -1 [88, 134[88 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rdi|q]" v9|q -1 [126, 128[126 MustHaveRegister 128 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rdi|d]" v10|d -1 [128, 148[[190, 218[128 MustHaveRegister 130 ShouldHaveRegister 148 ShouldHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rbp|d]" v11|d -1 [130, 181[[190, 204[[792, 810[130 MustHaveRegister 176 MustHaveRegister 180 ShouldHaveRegister 204 MustHaveRegister 810 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v8|d [134, 236[[246, 456[[792, 816[134 MustHaveRegister 136 MustHaveRegister 314 MustHaveRegister 431 LiveAtLoopEnd  "NoSpillStore"
  v13|q QWORD "[r13|q]" v13|q -1 [132, 135[132 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rdi|d]" v14|d -1 [176, 182[176 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r13|d]" v15|d -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r13|d]" v16|d v15|d [180, 182[180 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rdi|d]" v17|d v14|d [182, 184[182 MustHaveRegister 184 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rdi|d]" v18|d v24|d [186, 189[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r13|d]" v19|d -1 [202, 220[202 MustHaveRegister 204 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdi|q]" v20|q -1 [218, 220[218 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rdi|d]" v21|d -1 [220, 223[220 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r8|d]" v22|d -1 [808, 810[808 MustHaveRegister 810 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[r8|d]" v23|d -1 [812, 815[812 MustHaveRegister 814 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rdi|d]" v24|d v18|d [224, 234[234 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d v2|d [256, 259[256 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rcx|d]" v26|d v42|d [260, 428[[432, 465[[816, 825[[860, 870[[880, 890[[910, 951[428 ShouldHaveRegister 464 ShouldHaveRegister 824 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rdi|d]" v27|d v25|d [260, 426[[432, 465[[816, 825[[860, 870[[880, 890[[910, 951[270 ShouldHaveRegister 282 ShouldHaveRegister 310 MustHaveRegister 426 ShouldHaveRegister 464 ShouldHaveRegister 824 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rbp|d]" v28|d -1 [310, 326[[368, 396[310 MustHaveRegister 312 ShouldHaveRegister 326 ShouldHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r13|d]" v29|d -1 [312, 359[[368, 382[[432, 450[312 MustHaveRegister 354 MustHaveRegister 358 ShouldHaveRegister 382 MustHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rbp|d]" v30|d -1 [354, 360[354 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r14|d]" v31|d -1 [356, 358[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[r14|d]" v32|d v31|d [358, 360[358 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rbp|d]" v33|d v30|d [360, 362[360 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rbp|d]" v34|d v40|d [364, 367[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[r14|d]" v35|d -1 [380, 398[380 MustHaveRegister 382 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rbp|q]" v36|q -1 [396, 398[396 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rbp|d]" v37|d -1 [398, 401[398 MustHaveRegister 400 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rbp|d]" v38|d -1 [448, 450[448 MustHaveRegister 450 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rbp|d]" v39|d -1 [452, 455[452 MustHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[rbp|d]" v40|d v34|d [402, 412[412 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rdi|d]" v41|d v27|d [426, 431[426 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rcx|d]" v42|d v26|d [428, 431[428 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[r11|d]" v43|d -1 [930, 946[946 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[r8|q]" v44|q -1 [930, 948[948 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[r10|d]" v45|d -1 [972, 988[988 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r11|q]" v46|q -1 [972, 990[990 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rcx|d]" v47|d v2|d [466, 565[476 ShouldHaveRegister  "OneSpillStore"
  v48|d DWORD "[r11|d]" v48|d v26|d [466, 500[498 MustHaveRegister  "OneSpillStore"
  v49|d DWORD "[rbx|d]" v49|d -1 [548, 560[548 MustHaveRegister 550 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rax|d]" v50|d -1 [550, 554[550 MustHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q v50|d [554, 556[554 MustHaveRegister 556 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r10|q]" v52|q -1 [552, 555[552 MustHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q -1 [556, 570[556 MustHaveRegister 558 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q -1 [558, 572[558 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rbx|q]" v55|q v49|d [560, 562[560 MustHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rax|d]" v56|d rax|d [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[rcx|d]" v57|d v47|d [612, 617[612 MustHaveRegister 616 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d v48|d [614, 617[614 MustHaveRegister 616 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[r11|d]" v59|d v58|d [618, 630[628 MustHaveRegister  "OneSpillStore"
  v60|d DWORD "[rcx|d]" v60|d v57|d [618, 695[ "OneSpillStore"
  v61|d DWORD "[rbx|d]" v61|d -1 [678, 690[678 MustHaveRegister 680 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[rax|d]" v62|d -1 [680, 684[680 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rax|q]" v63|q v62|d [684, 686[684 MustHaveRegister 686 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[r10|q]" v64|q -1 [682, 685[682 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rax|q]" v65|q -1 [686, 700[686 MustHaveRegister 688 MustHaveRegister 700 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[r10|q]" v66|q -1 [688, 702[688 MustHaveRegister 702 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rbx|q]" v67|q v61|d [690, 692[690 MustHaveRegister 692 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[rax|d]" v68|d rax|d [706, 708[706 MustHaveRegister 708 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[rcx|d]" v69|d v60|d [722, 727[722 MustHaveRegister 726 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[r11|d]" v70|d v59|d [724, 727[724 MustHaveRegister 726 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[vstack:2|q]" v0|q v0|q [561, 573[ "StoreAtDefinition"
  v72|q QWORD "[rdi|q]" v1|q v1|q [563, 573[564 ShouldHaveRegister  "StoreAtDefinition"
  v73|q QWORD "[r13|q]" v3|q v3|q [567, 573[568 ShouldHaveRegister  "StoreAtDefinition"
  v74|d DWORD "[rbp|d]" v47|d v47|d [565, 573[566 ShouldHaveRegister  "OneSpillStore"
  v75|d DWORD "[vstack:1|d]" v48|d v48|d [500, 573[ "OneSpillStore"
  v76|d DWORD "[vstack:1|d]" v48|d v48|d [573, 580[[600, 614[[826, 840[614 ShouldHaveRegister  "OneSpillStore"
  v77|q QWORD "[vstack:2|q]" v0|q v0|q [573, 580[[600, 618[ "StoreAtDefinition"
  v78|q QWORD "[vstack:3|q]" v1|q v1|q [573, 580[[600, 618[ "StoreAtDefinition"
  v79|d DWORD "[vstack:0|d]" v47|d v47|d [573, 580[[600, 612[[826, 840[612 ShouldHaveRegister  "OneSpillStore"
  v80|q QWORD "[vstack:4|q]" v3|q v3|q [573, 580[[600, 618[ "StoreAtDefinition"
  v81|q QWORD "[rsi|q]" v0|q v0|q [618, 691[628 MustHaveRegister 678 MustHaveRegister  "StoreAtDefinition"
  v82|q QWORD "[rdx|q]" v1|q v1|q [618, 693[ "StoreAtDefinition"
  v83|q QWORD "[r8|q]" v3|q v3|q [618, 697[ "StoreAtDefinition"
  v84|q QWORD "[vstack:2|q]" v0|q v0|q [691, 703[ "StoreAtDefinition"
  v85|d DWORD "[vstack:8|d]" v59|d v59|d [630, 703[ "OneSpillStore"
  v86|q QWORD "[rdi|q]" v1|q v1|q [693, 703[694 ShouldHaveRegister  "StoreAtDefinition"
  v87|d DWORD "[rbp|d]" v60|d v60|d [695, 703[696 ShouldHaveRegister  "OneSpillStore"
  v88|q QWORD "[r13|q]" v3|q v3|q [697, 703[698 ShouldHaveRegister  "StoreAtDefinition"
  v89|d DWORD "[vstack:8|d]" v59|d v59|d [703, 710[ "OneSpillStore"
  v90|q QWORD "[vstack:2|q]" v0|q v0|q [703, 728[[792, 951[[952, 972[727 LiveAtLoopEnd  "StoreAtDefinition"
  v91|q QWORD "[vstack:3|q]" v1|q v1|q [703, 728[[792, 826[727 LiveAtLoopEnd  "StoreAtDefinition"
  v92|d DWORD "[vstack:7|d]" v60|d v60|d [703, 710[ "OneSpillStore"
  v93|q QWORD "[vstack:4|q]" v3|q v3|q [703, 728[[792, 951[[952, 972[727 LiveAtLoopEnd  "StoreAtDefinition"
  v94|d DWORD "[rcx|d]" v60|d v60|d [710, 722[722 ShouldHaveRegister  "OneSpillStore"
  v95|d DWORD "[r11|d]" v59|d v59|d [710, 724[724 ShouldHaveRegister  "OneSpillStore"
  v96|q QWORD "[r8|q]" v3|q v3|q [972, 993[ "StoreAtDefinition"
  v97|q QWORD "[rdx|q]" v1|q v1|q [826, 951[[952, 993[836 MustHaveRegister  "StoreAtDefinition"
  v98|q QWORD "[rsi|q]" v0|q v0|q [972, 993[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction v9|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction v10|DWORD = MOVSXB input: [v9|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction v11|DWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  134  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  136  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: v10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v14|DWORD = LEA address: [v11|DWORD - 48] size: DWORD <|@ <|@
      nr  178  <|@ instruction v15|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  180  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v17|DWORD = OR (x: v14|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction v18|DWORD = SETCC condition: >= <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v19|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction v20|QWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr  220  <|@ instruction v21|DWORD = MOVZXB input: [v20|QWORD + v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr  224  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v25|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: v25|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr  260  <|@ instruction [v26|DWORD, v27|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v27|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction v28|DWORD = MOVSXB input: [v27|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  312  <|@ instruction v29|DWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v30|DWORD = LEA address: [v29|DWORD - 48] size: DWORD <|@ <|@
      nr  356  <|@ instruction v31|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  358  <|@ instruction v32|DWORD = SUB (x: v31|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction v33|DWORD = OR (x: v30|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction v34|DWORD = SETCC condition: >= <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v35|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction v36|QWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction v37|DWORD = MOVZXB input: [v36|QWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr  402  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction v41|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction v42|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction v38|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  450  <|@ instruction CMP (x: v38|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  452  <|@ instruction v39|DWORD = SETCC condition: = <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v26|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v27|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  466  <|@ instruction [v47|DWORD, v48|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v47|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: v48|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE input: v48|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction v49|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  550  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  552  <|@ instruction v52|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  554  <|@ instruction v51|QWORD = UNCOMPRESSPOINTER (input: v50|DWORD, ~baseRegister: v52|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  556  <|@ instruction v53|QWORD = MOV input: [v51|QWORD + 496] size: QWORD <|@ <|@
      nr  558  <|@ instruction v54|QWORD = MOV input: [v53|QWORD + 64] size: QWORD <|@ <|@
      nr  560  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  562  <|@ instruction rsi|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  564  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  568  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rbx|QWORD = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rax|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v73|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = STACKMOVE (input: v71|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = STACKMOVE (input: v75|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: v74|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  576  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction v57|DWORD = DEC value: v47|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction v58|DWORD = DEC value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr  618  <|@ instruction [v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction CMPBRANCH (x: v59|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v59|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction v61|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  680  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  682  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  684  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  686  <|@ instruction v65|QWORD = MOV input: [v63|QWORD + 496] size: QWORD <|@ <|@
      nr  688  <|@ instruction v66|QWORD = MOV input: [v65|QWORD + 64] size: QWORD <|@ <|@
      nr  690  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  692  <|@ instruction rsi|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v60|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  698  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rbx|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = STACKMOVE (input: v84|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = STACKMOVE (input: v85|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  706  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: v68|DWORD, y: v68|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: v92|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOVE input: v89|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction v69|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr  724  <|@ instruction v70|DWORD = DEC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  790  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction v22|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  810  <|@ instruction CMP (x: v22|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v26|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v27|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v48|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v76|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v79|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-122387|0xfffffffffffe21ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: int[-31027|0xffffffffffff86cd] // MoveResolver resolve mapping <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-73500|0xfffffffffffee0e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: int[-81436|0xfffffffffffec1e4] // MoveResolver resolve mapping <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-78875|0xfffffffffffecbe5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-47667|0xffffffffffff45cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: int[-86555|0xfffffffffffeade5] // MoveResolver resolve mapping <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: int[-123411|0xfffffffffffe1ded] // MoveResolver resolve mapping <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  930  <|@ instruction [v43|DWORD, v44|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v43|DWORD) size: DWORD <|@ <|@
      nr  948  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v44|QWORD) size: QWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-70195|0xfffffffffffeedcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  972  <|@ instruction [v45|DWORD, v46|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction v9|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction v10|DWORD = MOVSXB input: [v9|QWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction v11|DWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction v13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  134  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  136  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: v10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v14|DWORD = LEA address: [v11|DWORD - 48] size: DWORD <|@ <|@
      nr  178  <|@ instruction v15|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  180  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v17|DWORD = OR (x: v14|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction v18|DWORD = SETCC condition: >= <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v19|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v11|DWORD, y: [v19|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction v20|QWORD = MOVZXB value: v10|DWORD size: DWORD <|@ <|@
      nr  220  <|@ instruction v21|DWORD = MOVZXB input: [v20|QWORD + v19|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v25|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: v25|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v27|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction v28|DWORD = MOVSXB input: [v27|DWORD + v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  312  <|@ instruction v29|DWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v12|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH x: v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v30|DWORD = LEA address: [v29|DWORD - 48] size: DWORD <|@ <|@
      nr  356  <|@ instruction v31|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  358  <|@ instruction v32|DWORD = SUB (x: v31|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction v33|DWORD = OR (x: v30|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction v34|DWORD = SETCC condition: >= <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v35|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v35|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction v36|QWORD = MOVZXB value: v28|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction v37|DWORD = MOVZXB input: [v36|QWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction v41|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction v42|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction v38|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  450  <|@ instruction CMP (x: v38|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  452  <|@ instruction v39|DWORD = SETCC condition: = <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v26|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v27|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v47|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: v48|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE input: v48|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction v49|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  550  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction v50|DWORD = MOV input: [v49|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  552  <|@ instruction v52|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  554  <|@ instruction v51|QWORD = UNCOMPRESSPOINTER (input: v50|DWORD, ~baseRegister: v52|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  556  <|@ instruction v53|QWORD = MOV input: [v51|QWORD + 496] size: QWORD <|@ <|@
      nr  558  <|@ instruction v54|QWORD = MOV input: [v53|QWORD + 64] size: QWORD <|@ <|@
      nr  560  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  562  <|@ instruction rsi|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  564  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  568  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rbx|QWORD = MOVE input: v53|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rax|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = STACKMOVE (input: v75|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: v74|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v47|DWORD v3|QWORD[.] v48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  576  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction v57|DWORD = DEC value: v47|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction v58|DWORD = DEC value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction CMPBRANCH (x: v59|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v59|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction v61|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  680  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction v62|DWORD = MOV input: [v61|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  682  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  684  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  686  <|@ instruction v65|QWORD = MOV input: [v63|QWORD + 496] size: QWORD <|@ <|@
      nr  688  <|@ instruction v66|QWORD = MOV input: [v65|QWORD + 64] size: QWORD <|@ <|@
      nr  690  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  692  <|@ instruction rsi|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v60|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction rcx|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  698  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rbx|QWORD = MOVE input: v65|QWORD moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = STACKMOVE (input: v85|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v0|QWORD[.] v1|QWORD[.] v60|DWORD v3|QWORD[.] v59|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  706  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: v68|DWORD, y: v68|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: v92|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOVE input: v89|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction v69|DWORD = DEC value: v60|DWORD size: DWORD <|@ <|@
      nr  724  <|@ instruction v70|DWORD = DEC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  790  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction v22|DWORD = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  810  <|@ instruction CMP (x: v22|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v26|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v27|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v48|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v76|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: v79|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-122387|0xfffffffffffe21ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: int[-31027|0xffffffffffff86cd] // MoveResolver resolve mapping <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-73500|0xfffffffffffee0e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: int[-81436|0xfffffffffffec1e4] // MoveResolver resolve mapping <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-78875|0xfffffffffffecbe5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-47667|0xffffffffffff45cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: int[-86555|0xfffffffffffeade5] // MoveResolver resolve mapping <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: int[-123411|0xfffffffffffe1ded] // MoveResolver resolve mapping <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v43|DWORD) size: DWORD <|@ <|@
      nr  948  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v44|QWORD) size: QWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v27|DWORD v3|QWORD[.] v26|DWORD v4|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-70195|0xfffffffffffeedcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v45|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v46|QWORD) size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction rdi|DWORD = MOVSXB input: [rdi|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  134  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  136  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rdi|DWORD = LEA address: [rbp|DWORD - 48] size: DWORD <|@ <|@
      nr  178  <|@ instruction r13|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  180  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction rdi|DWORD = OR (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction rdi|DWORD = SETCC condition: >= <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r13|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rdi|QWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  220  <|@ instruction rdi|DWORD = MOVZXB input: [rdi|QWORD + r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction rbp|DWORD = MOVSXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  312  <|@ instruction r13|DWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction rbp|DWORD = LEA address: [r13|DWORD - 48] size: DWORD <|@ <|@
      nr  356  <|@ instruction r14|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  358  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction rbp|DWORD = SETCC condition: >= <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction r14|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: rsi|QWORD[.] rdx|QWORD[.] rdi|DWORD r8|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r13|DWORD, y: [r14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction rbp|QWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction rbp|DWORD = MOVZXB input: [rbp|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  450  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  452  <|@ instruction rbp|DWORD = SETCC condition: = <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  550  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  552  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  554  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  556  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr  558  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  560  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  564  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  568  <|@ instruction r8|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: vstack:2|QWORD[.] vstack:3|QWORD[.] vstack:0|DWORD vstack:4|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction rcx|DWORD = DEC value: vstack:0|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction r11|DWORD = DEC value: vstack:1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  680  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] vstack:8|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  682  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  684  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  686  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr  688  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  690  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  698  <|@ instruction r8|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: vstack:2|QWORD[.] vstack:3|QWORD[.] vstack:7|DWORD vstack:4|QWORD[.] vstack:8|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction rcx|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr  724  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  790  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  810  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction r8|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-122387|0xfffffffffffe21ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-31027|0xffffffffffff86cd] // MoveResolver resolve mapping <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-73500|0xfffffffffffee0e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-81436|0xfffffffffffec1e4] // MoveResolver resolve mapping <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-78875|0xfffffffffffecbe5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-47667|0xffffffffffff45cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-86555|0xfffffffffffeade5] // MoveResolver resolve mapping <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-123411|0xfffffffffffe1ded] // MoveResolver resolve mapping <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  948  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: vstack:2|QWORD[.] rdx|QWORD[.] rdi|DWORD vstack:4|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-70195|0xfffffffffffeedcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction rdi|DWORD = MOVSXB input: [rdi|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  134  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  136  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rdi|DWORD = LEA address: [rbp|DWORD - 48] size: DWORD <|@ <|@
      nr  178  <|@ instruction r13|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  180  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction rdi|DWORD = OR (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction rdi|DWORD = SETCC condition: >= <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r13|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  204  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rdi|QWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  220  <|@ instruction rdi|DWORD = MOVZXB input: [rdi|QWORD + r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction rbp|DWORD = MOVSXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  312  <|@ instruction r13|DWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction rbp|DWORD = LEA address: [r13|DWORD - 48] size: DWORD <|@ <|@
      nr  356  <|@ instruction r14|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  358  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction rbp|DWORD = SETCC condition: >= <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction r14|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: rsi|QWORD[.] rdx|QWORD[.] rdi|DWORD r8|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r13|DWORD, y: [r14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction rbp|QWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction rbp|DWORD = MOVZXB input: [rbp|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  450  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  452  <|@ instruction rbp|DWORD = SETCC condition: = <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  550  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  552  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  554  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  556  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr  558  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  560  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  564  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  568  <|@ instruction r8|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: vstack:2|QWORD[.] vstack:3|QWORD[.] vstack:0|DWORD vstack:4|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction rcx|DWORD = DEC value: vstack:0|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction r11|DWORD = DEC value: vstack:1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  680  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] vstack:8|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  682  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  684  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  686  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr  688  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  690  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  698  <|@ instruction r8|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: vstack:2|QWORD[.] vstack:3|QWORD[.] vstack:7|DWORD vstack:4|QWORD[.] vstack:8|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  708  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction rcx|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr  724  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  790  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  810  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction r8|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  838  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-122387|0xfffffffffffe21ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  858  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-31027|0xffffffffffff86cd] // MoveResolver resolve mapping <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-73500|0xfffffffffffee0e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-81436|0xfffffffffffec1e4] // MoveResolver resolve mapping <|@ <|@
      nr  888  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-78875|0xfffffffffffecbe5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-47667|0xffffffffffff45cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-86555|0xfffffffffffeade5] // MoveResolver resolve mapping <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-123411|0xfffffffffffe1ded] // MoveResolver resolve mapping <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  948  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: vstack:2|QWORD[.] rdx|QWORD[.] rdi|DWORD vstack:4|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-70195|0xfffffffffffeedcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction vstack:4|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = MOVSXB input: [rdi|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbp|DWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  132  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  134  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction rdi|DWORD = LEA address: [rbp|DWORD - 48] size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  178  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = OR (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rdi|DWORD = SETCC condition: >= <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r13|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVZXB input: [rdi|QWORD + r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rbp|DWORD = MOVSXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  384  <|@ instruction r13|DWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = LEA address: [r13|DWORD - 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction r14|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  430  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction rbp|DWORD = SETCC condition: >= <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r14|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: rsi|QWORD[.] rdx|QWORD[.] rdi|DWORD r8|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r13|DWORD, y: [r14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction rbp|DWORD = MOVZXB input: [rbp|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  552  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  520  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction rbp|DWORD = SETCC condition: = <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction vstack:1|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  872  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  874  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  876  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  878  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr  880  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  882  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction r8|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction vstack:0|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: vstack:2|QWORD[.] vstack:3|QWORD[.] vstack:0|DWORD vstack:4|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  906  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = DEC value: vstack:0|DWORD size: DWORD <|@ <|@
      nr  922  <|@ instruction r11|DWORD = DEC value: vstack:1|DWORD size: DWORD <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction vstack:8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] vstack:8|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  998  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1000  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1002  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction r8|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1026  <|@ instruction vstack:7|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: vstack:2|QWORD[.] vstack:3|QWORD[.] vstack:7|DWORD vstack:4|QWORD[.] vstack:8|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr 1030  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction rcx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction r11|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction rcx|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1050  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  276  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = SETCC condition: = <|@ <|@
      nr  280  <|@ instruction rdi|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction vstack:1|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction vstack:0|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  788  <|@ instruction r11|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  744  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-122387|0xfffffffffffe21ed] <|@ <|@
      nr  200  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  600  <|@ instruction r11|DWORD = MOVE input: int[-31027|0xffffffffffff86cd] <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-73500|0xfffffffffffee0e4] <|@ <|@
      nr  688  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r11|DWORD = MOVE input: int[-81436|0xfffffffffffec1e4] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOVE input: int[-78875|0xfffffffffffecbe5] <|@ <|@
      nr  252  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-47667|0xffffffffffff45cd] <|@ <|@
      nr  652  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r11|DWORD = MOVE input: int[-86555|0xfffffffffffeade5] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  450  <|@ instruction r11|DWORD = MOVE input: int[-123411|0xfffffffffffe1ded] <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: vstack:2|QWORD[.] rdx|QWORD[.] rdi|DWORD vstack:4|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-70195|0xfffffffffffeedcd] <|@ <|@
      nr  706  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  668  <|@ instruction r10|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed] <|@ <|@
      nr  670  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [776, 920[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [774, 922[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [28, 1059[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [30, 1059[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [32, 1059[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[vstack:7|d]" vstack:7|d -1 [1026, 1034[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[vstack:8|d]" vstack:8|d -1 [946, 1036[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:32|d]" vstack:0|d -1 [776, 920[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:28|d]" vstack:1|d -1 [774, 922[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:40|q]" vstack:2|q -1 [28, 1059[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:48|q]" vstack:3|q -1 [30, 1059[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:56|q]" vstack:4|q -1 [32, 1059[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[stack:32|d]" vstack:7|d -1 [1026, 1034[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[stack:28|d]" vstack:8|d -1 [946, 1036[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = MOVSXB input: [rdi|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbp|DWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  132  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  134  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction rdi|DWORD = LEA address: [rbp|DWORD - 48] size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  178  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = OR (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rdi|DWORD = SETCC condition: >= <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r13|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVZXB input: [rdi|QWORD + r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rbp|DWORD = MOVSXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  384  <|@ instruction r13|DWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = LEA address: [r13|DWORD - 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction r14|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  430  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction rbp|DWORD = SETCC condition: >= <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r14|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: rsi|QWORD[.] rdx|QWORD[.] rdi|DWORD r8|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r13|DWORD, y: [r14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction rbp|DWORD = MOVZXB input: [rbp|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  552  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  520  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction rbp|DWORD = SETCC condition: = <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  872  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  874  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  876  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  878  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr  880  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  882  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction r8|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  906  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  922  <|@ instruction r11|DWORD = DEC value: stack:28|DWORD size: DWORD <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  998  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1000  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1002  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction r8|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1026  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr 1030  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction rcx|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1050  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  276  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = SETCC condition: = <|@ <|@
      nr  280  <|@ instruction rdi|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  788  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  744  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-122387|0xfffffffffffe21ed] <|@ <|@
      nr  200  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  600  <|@ instruction r11|DWORD = MOVE input: int[-31027|0xffffffffffff86cd] <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-73500|0xfffffffffffee0e4] <|@ <|@
      nr  688  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r11|DWORD = MOVE input: int[-81436|0xfffffffffffec1e4] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOVE input: int[-78875|0xfffffffffffecbe5] <|@ <|@
      nr  252  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-47667|0xffffffffffff45cd] <|@ <|@
      nr  652  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r11|DWORD = MOVE input: int[-86555|0xfffffffffffeade5] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  450  <|@ instruction r11|DWORD = MOVE input: int[-123411|0xfffffffffffe1ded] <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:40|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:56|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-70195|0xfffffffffffeedcd] <|@ <|@
      nr  706  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  668  <|@ instruction r10|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed] <|@ <|@
      nr  670  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = MOVSXB input: [rdi|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbp|DWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  132  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  134  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction rdi|DWORD = LEA address: [rbp|DWORD - 48] size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  178  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = OR (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rdi|DWORD = SETCC condition: >= <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r13|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVZXB input: [rdi|QWORD + r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rbp|DWORD = MOVSXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  384  <|@ instruction r13|DWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = LEA address: [r13|DWORD - 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction r14|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  430  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction rbp|DWORD = SETCC condition: >= <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r14|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: rsi|QWORD[.] rdx|QWORD[.] rdi|DWORD r8|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r13|DWORD, y: [r14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction rbp|DWORD = MOVZXB input: [rbp|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  552  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  520  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction rbp|DWORD = SETCC condition: = <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  872  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  874  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  876  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  878  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr  880  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  882  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction r8|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  906  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  922  <|@ instruction r11|DWORD = DEC value: stack:28|DWORD size: DWORD <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  998  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1000  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1002  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction r8|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1026  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr 1030  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction rcx|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1050  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  276  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = SETCC condition: = <|@ <|@
      nr  280  <|@ instruction rdi|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  788  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  744  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-122387|0xfffffffffffe21ed] <|@ <|@
      nr  200  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  600  <|@ instruction r11|DWORD = MOVE input: int[-31027|0xffffffffffff86cd] <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-73500|0xfffffffffffee0e4] <|@ <|@
      nr  688  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r11|DWORD = MOVE input: int[-81436|0xfffffffffffec1e4] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOVE input: int[-78875|0xfffffffffffecbe5] <|@ <|@
      nr  252  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-47667|0xffffffffffff45cd] <|@ <|@
      nr  652  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r11|DWORD = MOVE input: int[-86555|0xfffffffffffeade5] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  450  <|@ instruction r11|DWORD = MOVE input: int[-123411|0xfffffffffffe1ded] <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:40|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:56|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-70195|0xfffffffffffeedcd] <|@ <|@
      nr  706  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  668  <|@ instruction r10|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed] <|@ <|@
      nr  670  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = MOVSXB input: [rdi|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbp|DWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  132  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  134  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction rdi|DWORD = LEA address: [rbp|DWORD - 48] size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  178  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = OR (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rdi|DWORD = SETCC condition: >= <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r13|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVZXB input: [rdi|QWORD + r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rbp|DWORD = MOVSXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  384  <|@ instruction r13|DWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = LEA address: [r13|DWORD - 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction r14|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  430  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction rbp|DWORD = SETCC condition: >= <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r14|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: rsi|QWORD[.] rdx|QWORD[.] rdi|DWORD r8|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r13|DWORD, y: [r14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction rbp|DWORD = MOVZXB input: [rbp|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  552  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  520  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction rbp|DWORD = SETCC condition: = <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  872  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  874  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  876  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  878  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr  880  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  882  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction r8|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  906  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  922  <|@ instruction r11|DWORD = DEC value: stack:28|DWORD size: DWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  998  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1000  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1002  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction r8|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1026  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr 1030  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction rcx|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1050  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  276  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = SETCC condition: = <|@ <|@
      nr  280  <|@ instruction rdi|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  788  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  744  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-122387|0xfffffffffffe21ed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  600  <|@ instruction r11|DWORD = MOVE input: int[-31027|0xffffffffffff86cd] <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-73500|0xfffffffffffee0e4] <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r11|DWORD = MOVE input: int[-81436|0xfffffffffffec1e4] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOVE input: int[-78875|0xfffffffffffecbe5] <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-47667|0xffffffffffff45cd] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r11|DWORD = MOVE input: int[-86555|0xfffffffffffeade5] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  450  <|@ instruction r11|DWORD = MOVE input: int[-123411|0xfffffffffffe1ded] <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:40|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:56|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-70195|0xfffffffffffeedcd] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  668  <|@ instruction r10|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed] <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  706  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = MOVSXB input: [rdi|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbp|DWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  132  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  134  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction rdi|DWORD = LEA address: [rbp|DWORD - 48] size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  178  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = OR (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rdi|DWORD = SETCC condition: >= <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r13|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVZXB input: [rdi|QWORD + r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rbp|DWORD = MOVSXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  384  <|@ instruction r13|DWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = LEA address: [r13|DWORD - 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction r14|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  430  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction rbp|DWORD = SETCC condition: >= <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r14|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: rsi|QWORD[.] rdx|QWORD[.] rdi|DWORD r8|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r13|DWORD, y: [r14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction rbp|DWORD = MOVZXB input: [rbp|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  552  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  520  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction rbp|DWORD = SETCC condition: = <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  872  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  874  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  876  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  878  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr  880  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  882  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  906  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  922  <|@ instruction r11|DWORD = DEC value: stack:28|DWORD size: DWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  998  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1000  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1002  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1026  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr 1030  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction rcx|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1050  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  276  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = SETCC condition: = <|@ <|@
      nr  280  <|@ instruction rdi|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  792  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  744  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-122387|0xfffffffffffe21ed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  600  <|@ instruction r11|DWORD = MOVE input: int[-31027|0xffffffffffff86cd] <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-73500|0xfffffffffffee0e4] <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r11|DWORD = MOVE input: int[-81436|0xfffffffffffec1e4] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOVE input: int[-78875|0xfffffffffffecbe5] <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-47667|0xffffffffffff45cd] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r11|DWORD = MOVE input: int[-86555|0xfffffffffffeade5] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  450  <|@ instruction r11|DWORD = MOVE input: int[-123411|0xfffffffffffe1ded] <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:40|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:56|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-70195|0xfffffffffffeedcd] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  668  <|@ instruction r10|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed] <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  706  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = MOVSXB input: [rdi|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbp|DWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  132  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  134  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction rdi|DWORD = LEA address: [rbp|DWORD - 48] size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  178  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = OR (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rdi|DWORD = SETCC condition: >= <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r13|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVZXB input: [rdi|QWORD + r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rbp|DWORD = MOVSXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  384  <|@ instruction r13|DWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = LEA address: [r13|DWORD - 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction r14|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  430  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction rbp|DWORD = SETCC condition: >= <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r14|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: rsi|QWORD[.] rdx|QWORD[.] rdi|DWORD r8|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r13|DWORD, y: [r14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction rbp|DWORD = MOVZXB input: [rbp|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  552  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  520  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction rbp|DWORD = SETCC condition: = <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  872  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  874  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  876  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  878  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr  880  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  882  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  906  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  922  <|@ instruction r11|DWORD = DEC value: stack:28|DWORD size: DWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  998  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1000  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1002  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1026  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr 1030  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction rcx|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1050  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  276  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = SETCC condition: = <|@ <|@
      nr  280  <|@ instruction rdi|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  792  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  744  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-122387|0xfffffffffffe21ed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  600  <|@ instruction r11|DWORD = MOVE input: int[-31027|0xffffffffffff86cd] <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-73500|0xfffffffffffee0e4] <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r11|DWORD = MOVE input: int[-81436|0xfffffffffffec1e4] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOVE input: int[-78875|0xfffffffffffecbe5] <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-47667|0xffffffffffff45cd] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r11|DWORD = MOVE input: int[-86555|0xfffffffffffeade5] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  450  <|@ instruction r11|DWORD = MOVE input: int[-123411|0xfffffffffffe1ded] <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:40|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:56|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-70195|0xfffffffffffeedcd] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  668  <|@ instruction r10|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed] <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  706  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = MOVSXB input: [rdi|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbp|DWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  132  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  134  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction rdi|DWORD = LEA address: [rbp|DWORD - 48] size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  178  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = OR (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rdi|DWORD = SETCC condition: >= <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r13|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVZXB input: [rdi|QWORD + r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rbp|DWORD = MOVSXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  384  <|@ instruction r13|DWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = LEA address: [r13|DWORD - 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction r14|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  430  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction rbp|DWORD = SETCC condition: >= <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r14|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: rsi|QWORD[.] rdx|QWORD[.] rdi|DWORD r8|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r13|DWORD, y: [r14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction rbp|DWORD = MOVZXB input: [rbp|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  552  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  520  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction rbp|DWORD = SETCC condition: = <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  872  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  874  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  876  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  878  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr  880  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  882  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  906  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  922  <|@ instruction r11|DWORD = DEC value: stack:28|DWORD size: DWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  998  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1000  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1002  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1026  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr 1030  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction rcx|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1050  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  276  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = SETCC condition: = <|@ <|@
      nr  280  <|@ instruction rdi|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  792  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  744  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-122387|0xfffffffffffe21ed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  600  <|@ instruction r11|DWORD = MOVE input: int[-31027|0xffffffffffff86cd] <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-73500|0xfffffffffffee0e4] <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r11|DWORD = MOVE input: int[-81436|0xfffffffffffec1e4] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOVE input: int[-78875|0xfffffffffffecbe5] <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-47667|0xffffffffffff45cd] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r11|DWORD = MOVE input: int[-86555|0xfffffffffffeade5] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  450  <|@ instruction r11|DWORD = MOVE input: int[-123411|0xfffffffffffe1ded] <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:40|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:56|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-70195|0xfffffffffffeedcd] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  668  <|@ instruction r10|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed] <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  706  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = MOVSXB input: [rdi|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbp|DWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  132  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  134  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction rdi|DWORD = LEA address: [rbp|DWORD - 48] size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  178  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = OR (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rdi|DWORD = SETCC condition: >= <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  872  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  874  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  876  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  878  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr  880  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  882  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  906  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rbp|DWORD = MOVSXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  384  <|@ instruction r13|DWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = LEA address: [r13|DWORD - 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction r14|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  430  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction rbp|DWORD = SETCC condition: >= <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  552  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r14|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: rsi|QWORD[.] rdx|QWORD[.] rdi|DWORD r8|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r13|DWORD, y: [r14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction rbp|DWORD = MOVZXB input: [rbp|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  520  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction rbp|DWORD = SETCC condition: = <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  922  <|@ instruction r11|DWORD = DEC value: stack:28|DWORD size: DWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  998  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1000  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1002  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1026  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr 1030  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction rcx|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1050  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r13|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVZXB input: [rdi|QWORD + r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  276  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = SETCC condition: = <|@ <|@
      nr  280  <|@ instruction rdi|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  792  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  744  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  668  <|@ instruction r10|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed] <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  706  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-47667|0xffffffffffff45cd] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  450  <|@ instruction r11|DWORD = MOVE input: int[-123411|0xfffffffffffe1ded] <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:40|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:56|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-70195|0xfffffffffffeedcd] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  600  <|@ instruction r11|DWORD = MOVE input: int[-31027|0xffffffffffff86cd] <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r11|DWORD = MOVE input: int[-81436|0xfffffffffffec1e4] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-122387|0xfffffffffffe21ed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOVE input: int[-78875|0xfffffffffffecbe5] <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-73500|0xfffffffffffee0e4] <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r11|DWORD = MOVE input: int[-86555|0xfffffffffffeade5] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = MOVSXB input: [rdi|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbp|DWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  132  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  134  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction rdi|DWORD = LEA address: [rbp|DWORD - 48] size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  178  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = OR (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rdi|DWORD = SETCC condition: >= <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  872  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  874  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  876  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  878  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr  880  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  882  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  906  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rbp|DWORD = MOVSXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  384  <|@ instruction r13|DWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = LEA address: [r13|DWORD - 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction r14|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  430  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction rbp|DWORD = SETCC condition: >= <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  552  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r14|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: rsi|QWORD[.] rdx|QWORD[.] rdi|DWORD r8|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r13|DWORD, y: [r14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction rbp|DWORD = MOVZXB input: [rbp|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  520  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction rbp|DWORD = SETCC condition: = <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  922  <|@ instruction r11|DWORD = DEC value: stack:28|DWORD size: DWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  998  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1000  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1002  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1026  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr 1030  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction rcx|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1050  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r13|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVZXB input: [rdi|QWORD + r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  276  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = SETCC condition: = <|@ <|@
      nr  280  <|@ instruction rdi|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  792  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  744  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  668  <|@ instruction r10|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed] <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  706  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-47667|0xffffffffffff45cd] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  450  <|@ instruction r11|DWORD = MOVE input: int[-123411|0xfffffffffffe1ded] <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:40|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:56|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-70195|0xfffffffffffeedcd] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  600  <|@ instruction r11|DWORD = MOVE input: int[-31027|0xffffffffffff86cd] <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r11|DWORD = MOVE input: int[-81436|0xfffffffffffec1e4] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-122387|0xfffffffffffe21ed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOVE input: int[-78875|0xfffffffffffecbe5] <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-73500|0xfffffffffffee0e4] <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r11|DWORD = MOVE input: int[-86555|0xfffffffffffeade5] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = MOVSXB input: [rdi|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbp|DWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  132  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  134  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction rdi|DWORD = LEA address: [rbp|DWORD - 48] size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  178  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = OR (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rdi|DWORD = SETCC condition: >= <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  872  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  874  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  876  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  878  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr  880  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  882  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  906  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rbp|DWORD = MOVSXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  384  <|@ instruction r13|DWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = LEA address: [r13|DWORD - 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction r14|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  430  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction rbp|DWORD = SETCC condition: >= <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  552  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r14|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: rsi|QWORD[.] rdx|QWORD[.] rdi|DWORD r8|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r13|DWORD, y: [r14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction rbp|DWORD = MOVZXB input: [rbp|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  520  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction rbp|DWORD = SETCC condition: = <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  922  <|@ instruction r11|DWORD = DEC value: stack:28|DWORD size: DWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  998  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1000  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1002  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1026  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr 1030  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction rcx|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1050  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r13|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVZXB input: [rdi|QWORD + r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  276  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = SETCC condition: = <|@ <|@
      nr  280  <|@ instruction rdi|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  792  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  744  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  668  <|@ instruction r10|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed] <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  706  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-47667|0xffffffffffff45cd] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  450  <|@ instruction r11|DWORD = MOVE input: int[-123411|0xfffffffffffe1ded] <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:40|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:56|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-70195|0xfffffffffffeedcd] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  600  <|@ instruction r11|DWORD = MOVE input: int[-31027|0xffffffffffff86cd] <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r11|DWORD = MOVE input: int[-81436|0xfffffffffffec1e4] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-122387|0xfffffffffffe21ed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOVE input: int[-78875|0xfffffffffffecbe5] <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-73500|0xfffffffffffee0e4] <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r11|DWORD = MOVE input: int[-86555|0xfffffffffffeade5] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0, stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = MOVSXB input: [rdi|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbp|DWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  132  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  134  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction rdi|DWORD = LEA address: [rbp|DWORD - 48] size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  178  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = OR (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rdi|DWORD = SETCC condition: >= <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  872  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  874  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  876  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  878  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr  880  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  882  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  906  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rbp|DWORD = MOVSXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  384  <|@ instruction r13|DWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = LEA address: [r13|DWORD - 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction r14|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  430  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction rbp|DWORD = SETCC condition: >= <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  552  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r14|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r11:0, r14:0, stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: rsi|QWORD[.] rdx|QWORD[.] rdi|DWORD r8|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r13|DWORD, y: [r14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction rbp|DWORD = MOVZXB input: [rbp|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  520  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction rbp|DWORD = SETCC condition: = <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  922  <|@ instruction r11|DWORD = DEC value: stack:28|DWORD size: DWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  996  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  998  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1000  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1002  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1026  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr 1030  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction rcx|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1050  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r13|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  220  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r11:0, r13:0, stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVZXB input: [rdi|QWORD + r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  276  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = SETCC condition: = <|@ <|@
      nr  280  <|@ instruction rdi|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  792  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  744  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  668  <|@ instruction r10|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed] <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  706  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-47667|0xffffffffffff45cd] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  450  <|@ instruction r11|DWORD = MOVE input: int[-123411|0xfffffffffffe1ded] <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@reference-map: [rdx:0, stack:8, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:40|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:56|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-70195|0xfffffffffffeedcd] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  600  <|@ instruction r11|DWORD = MOVE input: int[-31027|0xffffffffffff86cd] <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r11|DWORD = MOVE input: int[-81436|0xfffffffffffec1e4] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-122387|0xfffffffffffe21ed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOVE input: int[-78875|0xfffffffffffecbe5] <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-73500|0xfffffffffffee0e4] <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r11|DWORD = MOVE input: int[-86555|0xfffffffffffeade5] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B35" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B34" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0, stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B33" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" "B11" "B32" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = MOVSXB input: [rdi|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbp|DWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  132  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  134  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605206670876644786
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction rdi|DWORD = LEA address: [rbp|DWORD - 48] size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  178  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = OR (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rdi|DWORD = SETCC condition: >= <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182415572565267
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603514926676321312
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" "B13" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607182413356301683
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4604828416143039901
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  872  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  874  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  876  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  878  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr  880  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  882  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr  906  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B52" 
    xhandlers
    flags 
    probability 4602728306529471406
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors 
    xhandlers
    flags 
    probability 4604112678565114817
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4601006597710393830
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B21" "B24" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476380
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rbp|DWORD = MOVSXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  384  <|@ instruction r13|DWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569505715188202992
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rbp|DWORD = LEA address: [r13|DWORD - 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction r14|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr  430  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction rbp|DWORD = SETCC condition: >= <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571363600368476381
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4565319793939411552
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  552  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B26" 
    successors "B16" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601036585878520664
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r14|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r11:0, r14:0, stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: rsi|QWORD[.] rdx|QWORD[.] rdi|DWORD r8|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r13|DWORD, y: [r14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561071053858647468
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOVZXB value: rbp|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction rbp|DWORD = MOVZXB input: [rbp|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4540558816501438324
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  520  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction rbp|DWORD = SETCC condition: = <|@ <|@
      nr  524  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B38" 
    xhandlers
    flags 
    probability 4600962936218914516
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B50" 
    xhandlers
    flags 
    probability 4598379625231860931
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B42" 
    successors 
    xhandlers
    flags 
    probability 4599811100387711099
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4597568458744809402
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  922  <|@ instruction r11|DWORD = DEC value: stack:28|DWORD size: DWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597259672700914414
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  996  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54] <|@ <|@
      nr  998  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1000  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1002  <|@ instruction rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1026  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70] <|@ <|@
      nr 1030  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589772749198775622
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction rcx|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1050  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B47" 
    successors "B49" "B46" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4599148921278945583
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r13|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  220  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r11:0, r13:0, stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4596746504161749825
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOVZXB value: rdi|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVZXB input: [rdi|QWORD + r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594705508433109067
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4590390321286565599
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576345540380533850
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  276  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = SETCC condition: = <|@ <|@
      nr  280  <|@ instruction rdi|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B38" 
    xhandlers
    flags 
    probability 4567735093435664522
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4513811376656875519
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  792  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B38" 
    xhandlers
    flags 
    probability 4510368085082898432
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  744  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  668  <|@ instruction r10|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed] <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B33" "B32" "B7" "B10" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  706  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-47667|0xffffffffffff45cd] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  450  <|@ instruction r11|DWORD = MOVE input: int[-123411|0xfffffffffffe1ded] <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" "B20" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@reference-map: [rdx:0, stack:8, stack:24]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:40|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:56|QWORD[.] rcx|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  704  <|@ instruction r10|DWORD = MOVE input: int[-70195|0xfffffffffffeedcd] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  600  <|@ instruction r11|DWORD = MOVE input: int[-31027|0xffffffffffff86cd] <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r11|DWORD = MOVE input: int[-81436|0xfffffffffffec1e4] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-122387|0xfffffffffffe21ed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOVE input: int[-78875|0xfffffffffffecbe5] <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-73500|0xfffffffffffee0e4] <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r11|DWORD = MOVE input: int[-86555|0xfffffffffffeade5] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B31 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: aload_1       
     4: getfield      #1          // java.util.regex.Matcher.to:int
     7: istore        5
     9: iload_2       
    10: iload         5
    12: if_icmpge     43
    15: aload_0       
    16: getfield      #2          // java.util.regex.Pattern$CharPropertyGreedy.predicate:java.util.regex.Pattern$CharPredicate
    19: aload_3       
    20: iload_2       
    21: invokeinterface#3, 2       // java.lang.CharSequence.charAt:(int)char
    26: invokeinterface#4, 2       // java.util.regex.Pattern$CharPredicate.is:(int)boolean
    31: ifeq          43
    34: iinc          
    37: iinc          
    40: goto          9
    43: iload_2       
    44: iload         5
    46: if_icmplt     54
    49: aload_1       
    50: iconst_1      
    51: putfield      #5          // java.util.regex.Matcher.hitEnd:boolean
    54: iload         4
    56: aload_0       
    57: getfield      #6          // java.util.regex.Pattern$CharPropertyGreedy.cmin:int
    60: if_icmplt     87
    63: aload_0       
    64: getfield      #7          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    67: aload_1       
    68: iload_2       
    69: aload_3       
    70: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    73: ifeq          78
    76: iconst_1      
    77: ireturn       
    78: iinc          
    81: iinc          
    84: goto          54
    87: iconst_0      
    88: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec389041817f20000000000f8596050000909090909090909090909048896c2430488974241848895424104c89442408448b5210443bd10f8e450400009090909041817808addeadde0f85cb040000909090909090458b5814468b0cdd0c000000443bc90f86130500009090909090908b5e148b04dd0800000041807810000f8515040000909090909090909090909090909090908bf9420fbe7cdf10400fb6ef49bd0000002b787f0000498d440500483b05000000000f841f000000483b05000000000f840c030000483b05000000000f843e030000e9fa030000909090904080ff800f83690400009090909090909090909090908d7dd041bd39000000442bed410bfd85ff400f9dc7400fb6ff9090909085ff0f85b800000090909041bb0000000090909090443bd10f8e3103000090909090909090443b5e100f8cb301000044895c242490909090909090909090909090909090909090909090908b5e0c8b04dd0800000049ba0000002b787f0000498d0402488b80f00100004c8b504048c1e303488bf3488bfa8be94d8be8488bd8498bc2896c2420ffd00f1f84000000000085c00f84700100009090909090909090909090b801000000488b6c24304883c438493ba7500400000f87e5030000c390909090ffc18bf9b901000000e9aa0000006666660f1f8400000000006666669066669090909090443bcf0f863d030000909090909090909090909090420fbe6cdf10440fb6ed483b05000000000f841f000000483b05000000000f846d000000483b05000000000f848c000000e9e9020000909090904080fd800f8394020000909090909090909090909090418d6dd041be39000000452bf5410bee85ed400f9dc5400fb6ed9090909085ed0f84c00100009090909090ffc7ffc190909090443bd70f8e4c000000e956ffffff9090909090448b34dd0c000000463b2cf50c0000000f83d60200009090909090400fb6ed420fb66cf510ebad909090909090908b2cdd0c000000413bed400f94c5400fb6edeb92909090448bd98bcfe92ffeffff9090909090909090909090b800000000488b6c24304883c438493ba7500400000f87b0020000c390909090908b4c2420ffc9448b5c242441ffcbe98000000066669044895c242490909090909090909090909090909090909090909090908b5e0c8b04dd0800000049ba0000002b787f0000498d0402488b80f00100004c8b504048c1e303488bf3488bfa8be94d8be8488bd8498bc2896c2420ffd00f1f84000000000085c00f85640000008b4c2420448b5c24249090909090ffc941ffcb4c8b442408488b542410488b74241890909090443b5e100f8d66ffffffe9370000009090909090448b2cdd0c000000423b2ced0c0000000f83770100009090909090400fb6ff420fb67cef10e90afdffff909090e9a2fdffff909090e9e3feffff90909090909090448b04dd0c000000443bc5410f94c0450fb6c0418bf84c8b442408488b542410488b742418e9c9fcffff909090448bd98bcf4c8b442408488b542410488b742418e9c2fcffff44895c2424894c242090909090c64230014c8b442408488b742418e9b2fcffff90909041bb000000004c8b442408488b742418e98afcffff90909049c7c39402000041baed25feff4c8b442408488b74241890909090909090458997840400004d899f90040000e8000000000f1f84000000000090909049c7c31405000041bacd45ffffebc290909049c7c0140a000041bbed1dfeff9090909090909045899f840400004d898790040000e8000000000f1f84000000000090909049c7c31400000041bacdedfeffe97bffffff90909049c7c01405000041bbcd86ffffebb790909049c7c00000000041bbe4c1feffeba590909049c7c3140a000041baed21feffe942ffffff90909049c7c30000000041bae5cbfeffe92dffffff90909049c7c30000000041bae4e0feffe918ffffff90909049c7c00000000041bbe5adfeffe951ffffff48896c2430e800000000e95bfafffff4488d0d07fcffff49898f68040000e90dfafffff4488d0d3cfdffff49898f68040000e9f9f9fffff441c78784040000f5f7feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5eefeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5e5feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5d5feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f59cfeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5b2feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f58efeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5d0feff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD  <||@
  Comment 74 28 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 79 30 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 84 32 stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 89 34 r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0]  <||@
  Comment 89 [rdx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 89 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 93 36 CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD  <||@
  Comment 102 block B1 null  <||@
  Comment 102 38 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 102 40 NOP  <||@
  Comment 103 42 NOP  <||@
  Comment 104 44 NOP  <||@
  Comment 105 46 NOP  <||@
  Comment 106 48 CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0]  <||@
  Comment 106 [rdx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 106 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 106 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 120 block B2 null  <||@
  Comment 120 50 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 120 52 NOP  <||@
  Comment 121 54 NOP  <||@
  Comment 122 56 NOP  <||@
  Comment 123 58 NOP  <||@
  Comment 124 60 NOP  <||@
  Comment 125 62 NOP  <||@
  Comment 126 64 r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD  <||@
  Comment 130 66 r9|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 130 [rdx:0, rsi:0, r8:0, r11:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 130 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 138 68 CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD  <||@
  Comment 147 block B3 null  <||@
  Comment 147 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 147 72 NOP  <||@
  Comment 148 74 NOP  <||@
  Comment 149 76 NOP  <||@
  Comment 150 78 NOP  <||@
  Comment 151 80 NOP  <||@
  Comment 152 82 NOP  <||@
  Comment 153 84 rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 156 86 rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 156 [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 156 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 163 88 CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null  <||@
  Comment 174 block B4 null  <||@
  Comment 174 90 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 174 92 NOP  <||@
  Comment 175 94 NOP  <||@
  Comment 176 96 NOP  <||@
  Comment 177 98 NOP  <||@
  Comment 178 100 NOP  <||@
  Comment 179 102 NOP  <||@
  Comment 180 104 NOP  <||@
  Comment 181 106 NOP  <||@
  Comment 182 108 NOP  <||@
  Comment 183 110 NOP  <||@
  Comment 184 112 NOP  <||@
  Comment 185 114 NOP  <||@
  Comment 186 116 NOP  <||@
  Comment 187 118 NOP  <||@
  Comment 188 120 NOP  <||@
  Comment 189 122 NOP  <||@
  Comment 190 124 rdi|QWORD = MOV value: rcx|DWORD size: DWORD  <||@
  Comment 192 126 rdi|DWORD = MOVSXB input: [rdi|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 198 128 rbp|DWORD = MOVZXB value: rdi|DWORD size: DWORD  <||@
  Comment 202 130 r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 212 132 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0  <||@
  Comment 217 134 AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 217 {DataSection[0x0]}  <||@
  Comment 230 {DataSection[0x8]}  <||@
  Comment 243 {DataSection[0x10]}  <||@
  Comment 261 block B5 null  <||@
  Comment 261 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 261 138 NOP  <||@
  Comment 262 140 NOP  <||@
  Comment 263 142 NOP  <||@
  Comment 264 144 NOP  <||@
  Comment 265 146 CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null  <||@
  Comment 275 block B6 null  <||@
  Comment 275 148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 275 150 NOP  <||@
  Comment 276 152 NOP  <||@
  Comment 277 154 NOP  <||@
  Comment 278 156 NOP  <||@
  Comment 279 158 NOP  <||@
  Comment 280 160 NOP  <||@
  Comment 281 162 NOP  <||@
  Comment 282 164 NOP  <||@
  Comment 283 166 NOP  <||@
  Comment 284 168 NOP  <||@
  Comment 285 170 NOP  <||@
  Comment 286 172 NOP  <||@
  Comment 287 174 rdi|DWORD = LEA address: [rbp|DWORD - 48] size: DWORD  <||@
  Comment 290 176 r13|DWORD = MOVE input: int[57|0x39]  <||@
  Comment 296 178 r13|DWORD = SUB (x: r13|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 299 180 rdi|DWORD = OR (x: rdi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 302 182 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 304 184 rdi|DWORD = SETCC condition: >=  <||@
  Comment 312 186 JUMP ~outgoingValues: [] destination: B6 -> B12  <||@
  Comment 312 block B12 null  <||@
  Comment 312 290 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 312 292 NOP  <||@
  Comment 313 294 NOP  <||@
  Comment 314 296 NOP  <||@
  Comment 315 298 NOP  <||@
  Comment 316 300 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD  <||@
  Comment 324 block B13 null  <||@
  Comment 324 302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 324 304 NOP  <||@
  Comment 325 306 NOP  <||@
  Comment 326 308 NOP  <||@
  Comment 327 310 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 333 312 JUMP ~outgoingValues: [] destination: B13 -> B38  <||@
  Comment 333 block B38 null  <||@
  Comment 333 750 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 333 752 NOP  <||@
  Comment 334 754 NOP  <||@
  Comment 335 756 NOP  <||@
  Comment 336 758 NOP  <||@
  Comment 337 760 CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD  <||@
  Comment 346 block B39 null  <||@
  Comment 346 762 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 346 764 NOP  <||@
  Comment 347 766 NOP  <||@
  Comment 348 768 NOP  <||@
  Comment 349 770 JUMP ~outgoingValues: [] destination: B39 -> B41  <||@
  Comment 349 block B41 null  <||@
  Comment 349 798 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 349 800 NOP  <||@
  Comment 350 802 NOP  <||@
  Comment 351 804 NOP  <||@
  Comment 352 806 NOP  <||@
  Comment 353 808 CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD  <||@
  Comment 363 block B43 null  <||@
  Comment 363 820 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 363 822 stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 368 824 NOP  <||@
  Comment 369 826 NOP  <||@
  Comment 370 828 NOP  <||@
  Comment 371 830 NOP  <||@
  Comment 372 832 NOP  <||@
  Comment 373 834 NOP  <||@
  Comment 374 836 NOP  <||@
  Comment 375 838 NOP  <||@
  Comment 376 840 NOP  <||@
  Comment 377 842 NOP  <||@
  Comment 378 844 NOP  <||@
  Comment 379 846 NOP  <||@
  Comment 380 848 NOP  <||@
  Comment 381 850 NOP  <||@
  Comment 382 852 NOP  <||@
  Comment 383 854 NOP  <||@
  Comment 384 856 NOP  <||@
  Comment 385 858 NOP  <||@
  Comment 386 860 NOP  <||@
  Comment 387 862 NOP  <||@
  Comment 388 864 NOP  <||@
  Comment 389 866 NOP  <||@
  Comment 390 868 NOP  <||@
  Comment 391 870 rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 394 872 rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54]  <||@
  Comment 394 [rdx:0, rbx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4               |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:28|DWORD  |-   <||@
  Comment 394 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 401 874 r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 411 876 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0  <||@
  Comment 415 878 rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD  <||@
  Comment 422 880 r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD  <||@
  Comment 426 882 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3  <||@
  Comment 430 884 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 433 886 rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 436 890 rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 438 894 r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 441 898 rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 444 900 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 447 902 stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 451 904 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70]  <||@
  Comment 451 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 451 INLINE_INVOKE  <||@
  Comment 453 [stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4               |5 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:32|DWORD  |stack:56|QWORD[.]  |stack:28|DWORD  |-   <||@
  Comment 461 906 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD  <||@
  Comment 469 block B51 null  <||@
  Comment 469 1102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 469 1104 NOP  <||@
  Comment 470 1106 NOP  <||@
  Comment 471 1108 NOP  <||@
  Comment 472 1110 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 472 block B52 null  <||@
  Comment 472 1112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 472 1114 NOP  <||@
  Comment 473 1116 NOP  <||@
  Comment 474 1118 NOP  <||@
  Comment 475 1120 NOP  <||@
  Comment 476 1122 NOP  <||@
  Comment 477 1124 NOP  <||@
  Comment 478 1126 NOP  <||@
  Comment 479 1128 NOP  <||@
  Comment 480 1130 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 485 1132 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 494 POLL_RETURN_FAR  <||@
  Comment 508 block B14 null  <||@
  Comment 508 314 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 508 316 NOP  <||@
  Comment 509 318 NOP  <||@
  Comment 510 320 NOP  <||@
  Comment 511 322 NOP  <||@
  Comment 512 324 rcx|DWORD = INC value: rcx|DWORD size: DWORD  <||@
  Comment 514 326 rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 516 328 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 521 330 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 526 block B16 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 526 344 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 544 346 NOP  <||@
  Comment 545 348 NOP  <||@
  Comment 546 350 NOP  <||@
  Comment 547 352 NOP  <||@
  Comment 548 354 CMPBRANCH (x: r9|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD  <||@
  Comment 557 block B17 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 557 356 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 557 358 NOP  <||@
  Comment 558 360 NOP  <||@
  Comment 559 362 NOP  <||@
  Comment 560 364 NOP  <||@
  Comment 561 366 NOP  <||@
  Comment 562 368 NOP  <||@
  Comment 563 370 NOP  <||@
  Comment 564 372 NOP  <||@
  Comment 565 374 NOP  <||@
  Comment 566 376 NOP  <||@
  Comment 567 378 NOP  <||@
  Comment 568 380 NOP  <||@
  Comment 569 382 rbp|DWORD = MOVSXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 575 384 r13|DWORD = MOVZXB value: rbp|DWORD size: DWORD  <||@
  Comment 579 386 AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 579 {DataSection[0x0]}  <||@
  Comment 592 {DataSection[0x8]}  <||@
  Comment 605 {DataSection[0x10]}  <||@
  Comment 623 block B18 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 623 388 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 623 390 NOP  <||@
  Comment 624 392 NOP  <||@
  Comment 625 394 NOP  <||@
  Comment 626 396 NOP  <||@
  Comment 627 398 CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null  <||@
  Comment 637 block B19 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 637 400 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 637 402 NOP  <||@
  Comment 638 404 NOP  <||@
  Comment 639 406 NOP  <||@
  Comment 640 408 NOP  <||@
  Comment 641 410 NOP  <||@
  Comment 642 412 NOP  <||@
  Comment 643 414 NOP  <||@
  Comment 644 416 NOP  <||@
  Comment 645 418 NOP  <||@
  Comment 646 420 NOP  <||@
  Comment 647 422 NOP  <||@
  Comment 648 424 NOP  <||@
  Comment 649 426 rbp|DWORD = LEA address: [r13|DWORD - 48] size: DWORD  <||@
  Comment 653 428 r14|DWORD = MOVE input: int[57|0x39]  <||@
  Comment 659 430 r14|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 662 432 rbp|DWORD = OR (x: rbp|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 665 434 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 667 436 rbp|DWORD = SETCC condition: >=  <||@
  Comment 675 438 JUMP ~outgoingValues: [] destination: B19 -> B25  <||@
  Comment 675 block B25 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 675 526 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 675 528 NOP  <||@
  Comment 676 530 NOP  <||@
  Comment 677 532 NOP  <||@
  Comment 678 534 NOP  <||@
  Comment 679 536 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD  <||@
  Comment 687 block B26 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 687 538 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 687 540 NOP  <||@
  Comment 688 542 NOP  <||@
  Comment 689 544 NOP  <||@
  Comment 690 546 NOP  <||@
  Comment 691 548 NOP  <||@
  Comment 692 550 rdi|DWORD = INC value: rdi|DWORD size: DWORD  <||@
  Comment 694 552 rcx|DWORD = INC value: rcx|DWORD size: DWORD  <||@
  Comment 696 554 JUMP ~outgoingValues: [] destination: B26 -> B15  <||@
  Comment 696 block B15 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 696 332 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 696 334 NOP  <||@
  Comment 697 336 NOP  <||@
  Comment 698 338 NOP  <||@
  Comment 699 340 NOP  <||@
  Comment 700 342 CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD  <||@
  Comment 714 block B21 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 714 454 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 714 456 NOP  <||@
  Comment 715 458 NOP  <||@
  Comment 716 460 NOP  <||@
  Comment 717 462 NOP  <||@
  Comment 718 464 NOP  <||@
  Comment 719 466 r14|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 727 468 CMPBRANCH (x: r13|DWORD, y: [r14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9]  <||@
  Comment 727 [rdx:0, rbx:0, rsi:0, r8:0, r11:0, r14:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4          |5         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rdi|DWORD  |r8|QWORD[.]  |rcx|DWORD  |r10|DWORD   <||@
  Comment 727 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 741 block B22 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 741 470 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 741 472 NOP  <||@
  Comment 742 474 NOP  <||@
  Comment 743 476 NOP  <||@
  Comment 744 478 NOP  <||@
  Comment 745 480 NOP  <||@
  Comment 746 482 rbp|QWORD = MOVZXB value: rbp|DWORD size: DWORD  <||@
  Comment 750 484 rbp|DWORD = MOVZXB input: [rbp|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 756 486 JUMP ~outgoingValues: [] destination: B22 -> B25  <||@
  Comment 758 block B24 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 758 502 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 758 504 NOP  <||@
  Comment 759 506 NOP  <||@
  Comment 760 508 NOP  <||@
  Comment 761 510 NOP  <||@
  Comment 762 512 NOP  <||@
  Comment 763 514 NOP  <||@
  Comment 764 516 NOP  <||@
  Comment 765 518 rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 772 520 CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 775 522 rbp|DWORD = SETCC condition: =  <||@
  Comment 783 524 JUMP ~outgoingValues: [] destination: B24 -> B25  <||@
  Comment 785 block B28 null  <||@
  Comment 785 576 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 785 578 NOP  <||@
  Comment 786 580 NOP  <||@
  Comment 787 582 NOP  <||@
  Comment 788 584 r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 791 586 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 793 588 JUMP ~outgoingValues: [] destination: B28 -> B38  <||@
  Comment 798 block B42 null  <||@
  Comment 798 810 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 798 812 NOP  <||@
  Comment 799 814 NOP  <||@
  Comment 800 816 NOP  <||@
  Comment 801 818 JUMP ~outgoingValues: [] destination: B42 -> B50  <||@
  Comment 801 block B50 null  <||@
  Comment 801 1080 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 801 1082 NOP  <||@
  Comment 802 1084 NOP  <||@
  Comment 803 1086 NOP  <||@
  Comment 804 1088 NOP  <||@
  Comment 805 1090 NOP  <||@
  Comment 806 1092 NOP  <||@
  Comment 807 1094 NOP  <||@
  Comment 808 1096 NOP  <||@
  Comment 809 1098 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 814 1100 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 823 POLL_RETURN_FAR  <||@
  Comment 837 block B44 null  <||@
  Comment 837 908 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 837 910 NOP  <||@
  Comment 838 912 NOP  <||@
  Comment 839 914 NOP  <||@
  Comment 840 916 NOP  <||@
  Comment 841 918 NOP  <||@
  Comment 842 920 rcx|DWORD = DEC value: stack:32|DWORD size: DWORD  <||@
  Comment 848 922 r11|DWORD = DEC value: stack:28|DWORD size: DWORD  <||@
  Comment 856 930 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 861 block B46 loop 1 depth 1 header:58|LoopBegin  <||@
  Comment 861 944 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 864 946 stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 869 948 NOP  <||@
  Comment 870 950 NOP  <||@
  Comment 871 952 NOP  <||@
  Comment 872 954 NOP  <||@
  Comment 873 956 NOP  <||@
  Comment 874 958 NOP  <||@
  Comment 875 960 NOP  <||@
  Comment 876 962 NOP  <||@
  Comment 877 964 NOP  <||@
  Comment 878 966 NOP  <||@
  Comment 879 968 NOP  <||@
  Comment 880 970 NOP  <||@
  Comment 881 972 NOP  <||@
  Comment 882 974 NOP  <||@
  Comment 883 976 NOP  <||@
  Comment 884 978 NOP  <||@
  Comment 885 980 NOP  <||@
  Comment 886 982 NOP  <||@
  Comment 887 984 NOP  <||@
  Comment 888 986 NOP  <||@
  Comment 889 988 NOP  <||@
  Comment 890 990 NOP  <||@
  Comment 891 992 NOP  <||@
  Comment 892 994 rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 895 996 rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54]  <||@
  Comment 895 [rdx:0, rbx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4               |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:28|DWORD  |-   <||@
  Comment 895 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 902 998 r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 912 1000 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0  <||@
  Comment 916 1002 rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD  <||@
  Comment 923 1004 r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD  <||@
  Comment 927 1006 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3  <||@
  Comment 931 1008 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 934 1010 rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 937 1014 rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 939 1018 r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 942 1022 rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 945 1024 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 948 1026 stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 952 1028 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70]  <||@
  Comment 952 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 952 INLINE_INVOKE  <||@
  Comment 954 [stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4               |5 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:32|DWORD  |stack:56|QWORD[.]  |stack:28|DWORD  |-   <||@
  Comment 962 1030 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD  <||@
  Comment 970 block B47 loop 1 depth 1 header:58|LoopBegin  <||@
  Comment 970 1032 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 970 1034 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 974 1036 r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 979 1038 NOP  <||@
  Comment 980 1040 NOP  <||@
  Comment 981 1042 NOP  <||@
  Comment 982 1044 NOP  <||@
  Comment 983 1046 NOP  <||@
  Comment 984 1048 rcx|DWORD = DEC value: rcx|DWORD size: DWORD  <||@
  Comment 986 1050 r11|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 989 1058 JUMP ~outgoingValues: [] destination: B47 -> B45  <||@
  Comment 989 block B45 loop 1 depth 1 header:58|LoopBegin  <||@
  Comment 989 932 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 989 924 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 994 926 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 999 928 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1004 934 NOP  <||@
  Comment 1005 936 NOP  <||@
  Comment 1006 938 NOP  <||@
  Comment 1007 940 NOP  <||@
  Comment 1008 942 CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD  <||@
  Comment 1023 block B8 null  <||@
  Comment 1023 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1023 208 NOP  <||@
  Comment 1024 210 NOP  <||@
  Comment 1025 212 NOP  <||@
  Comment 1026 214 NOP  <||@
  Comment 1027 216 NOP  <||@
  Comment 1028 218 r13|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1036 220 CMPBRANCH (x: rbp|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0]  <||@
  Comment 1036 [rdx:0, rbx:0, rsi:0, r8:0, r11:0, r13:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 1036 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1050 block B9 null  <||@
  Comment 1050 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1050 224 NOP  <||@
  Comment 1051 226 NOP  <||@
  Comment 1052 228 NOP  <||@
  Comment 1053 230 NOP  <||@
  Comment 1054 232 NOP  <||@
  Comment 1055 234 rdi|QWORD = MOVZXB value: rdi|DWORD size: DWORD  <||@
  Comment 1059 236 rdi|DWORD = MOVZXB input: [rdi|QWORD + r13|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1065 238 JUMP ~outgoingValues: [] destination: B9 -> B12  <||@
  Comment 1070 block B48 null  <||@
  Comment 1070 1060 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1070 1062 NOP  <||@
  Comment 1071 1064 NOP  <||@
  Comment 1072 1066 NOP  <||@
  Comment 1073 1068 JUMP ~outgoingValues: [] destination: B48 -> B52  <||@
  Comment 1078 block B49 null  <||@
  Comment 1078 1070 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1078 1072 NOP  <||@
  Comment 1079 1074 NOP  <||@
  Comment 1080 1076 NOP  <||@
  Comment 1081 1078 JUMP ~outgoingValues: [] destination: B49 -> B50  <||@
  Comment 1086 block B11 null  <||@
  Comment 1086 258 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1086 260 NOP  <||@
  Comment 1087 262 NOP  <||@
  Comment 1088 264 NOP  <||@
  Comment 1089 266 NOP  <||@
  Comment 1090 268 NOP  <||@
  Comment 1091 270 NOP  <||@
  Comment 1092 272 NOP  <||@
  Comment 1093 274 r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1101 276 CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1104 278 r8|DWORD = SETCC condition: =  <||@
  Comment 1112 280 rdi|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1115 282 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1120 284 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1125 286 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1130 288 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 1135 block B27 null  <||@
  Comment 1135 556 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1135 558 NOP  <||@
  Comment 1136 560 NOP  <||@
  Comment 1137 562 NOP  <||@
  Comment 1138 564 r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1141 566 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1143 568 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1148 570 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1153 572 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1158 574 JUMP ~outgoingValues: [] destination: B27 -> B38  <||@
  Comment 1163 block B40 null  <||@
  Comment 1163 772 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1163 774 stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1168 776 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1172 778 NOP  <||@
  Comment 1173 780 NOP  <||@
  Comment 1174 782 NOP  <||@
  Comment 1175 784 NOP  <||@
  Comment 1176 786 MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE  <||@
  Comment 1180 792 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1185 794 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1190 796 JUMP ~outgoingValues: [] destination: B40 -> B41  <||@
  Comment 1195 block B37 null  <||@
  Comment 1195 734 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1195 736 NOP  <||@
  Comment 1196 738 NOP  <||@
  Comment 1197 740 NOP  <||@
  Comment 1198 742 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1204 744 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1209 746 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1214 748 JUMP ~outgoingValues: [] destination: B37 -> B38  <||@
  Comment 1219 block B33 null  <||@
  Comment 1219 658 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1219 660 NOP  <||@
  Comment 1220 662 NOP  <||@
  Comment 1221 664 NOP  <||@
  Comment 1222 666 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1229 668 r10|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed]  <||@
  Comment 1235 674 JUMP ~outgoingValues: [] destination: B33 -> B36  <||@
  Comment 1235 block B36 null  <||@
  Comment 1235 712 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1235 706 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1240 708 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1245 714 NOP  <||@
  Comment 1246 716 NOP  <||@
  Comment 1247 718 NOP  <||@
  Comment 1248 720 NOP  <||@
  Comment 1249 722 NOP  <||@
  Comment 1250 724 NOP  <||@
  Comment 1251 726 NOP  <||@
  Comment 1252 728 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1259 730 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1266 732 DEOPT info [bci:0]  <||@
  Comment 1266 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1271 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 1279 block B32 null  <||@
  Comment 1279 640 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1279 642 NOP  <||@
  Comment 1280 644 NOP  <||@
  Comment 1281 646 NOP  <||@
  Comment 1282 648 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1289 650 r10|DWORD = MOVE input: int[-47667|0xffffffffffff45cd]  <||@
  Comment 1295 656 JUMP ~outgoingValues: [] destination: B32 -> B36  <||@
  Comment 1297 block B20 null  <||@
  Comment 1297 440 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1297 442 NOP  <||@
  Comment 1298 444 NOP  <||@
  Comment 1299 446 NOP  <||@
  Comment 1300 448 r8|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 1307 450 r11|DWORD = MOVE input: int[-123411|0xfffffffffffe1ded]  <||@
  Comment 1313 452 JUMP ~outgoingValues: [] destination: B20 -> B31  <||@
  Comment 1313 block B31 null  <||@
  Comment 1313 618 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1313 620 NOP  <||@
  Comment 1314 622 NOP  <||@
  Comment 1315 624 NOP  <||@
  Comment 1316 626 NOP  <||@
  Comment 1317 628 NOP  <||@
  Comment 1318 630 NOP  <||@
  Comment 1319 632 NOP  <||@
  Comment 1320 634 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1327 636 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 1334 638 DEOPT info [bci:9]  <||@
  Comment 1334 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1339 [rdx:0, stack:8, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4          |5         
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]  |rdi|DWORD  |stack:56|QWORD[.]  |rcx|DWORD  |r10|DWORD   <||@
  Comment 1347 block B35 null  <||@
  Comment 1347 694 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1347 696 NOP  <||@
  Comment 1348 698 NOP  <||@
  Comment 1349 700 NOP  <||@
  Comment 1350 702 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1357 704 r10|DWORD = MOVE input: int[-70195|0xfffffffffffeedcd]  <||@
  Comment 1363 710 JUMP ~outgoingValues: [] destination: B35 -> B36  <||@
  Comment 1368 block B29 null  <||@
  Comment 1368 590 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1368 592 NOP  <||@
  Comment 1369 594 NOP  <||@
  Comment 1370 596 NOP  <||@
  Comment 1371 598 r8|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1378 600 r11|DWORD = MOVE input: int[-31027|0xffffffffffff86cd]  <||@
  Comment 1384 602 JUMP ~outgoingValues: [] destination: B29 -> B31  <||@
  Comment 1386 block B30 null  <||@
  Comment 1386 604 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1386 606 NOP  <||@
  Comment 1387 608 NOP  <||@
  Comment 1388 610 NOP  <||@
  Comment 1389 612 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1396 614 r11|DWORD = MOVE input: int[-81436|0xfffffffffffec1e4]  <||@
  Comment 1402 616 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 1404 block B7 null  <||@
  Comment 1404 188 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1404 190 NOP  <||@
  Comment 1405 192 NOP  <||@
  Comment 1406 194 NOP  <||@
  Comment 1407 196 r11|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 1414 198 r10|DWORD = MOVE input: int[-122387|0xfffffffffffe21ed]  <||@
  Comment 1420 204 JUMP ~outgoingValues: [] destination: B7 -> B36  <||@
  Comment 1425 block B10 null  <||@
  Comment 1425 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1425 242 NOP  <||@
  Comment 1426 244 NOP  <||@
  Comment 1427 246 NOP  <||@
  Comment 1428 248 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1435 250 r10|DWORD = MOVE input: int[-78875|0xfffffffffffecbe5]  <||@
  Comment 1441 256 JUMP ~outgoingValues: [] destination: B10 -> B36  <||@
  Comment 1446 block B34 null  <||@
  Comment 1446 676 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1446 678 NOP  <||@
  Comment 1447 680 NOP  <||@
  Comment 1448 682 NOP  <||@
  Comment 1449 684 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1456 686 r10|DWORD = MOVE input: int[-73500|0xfffffffffffee0e4]  <||@
  Comment 1462 692 JUMP ~outgoingValues: [] destination: B34 -> B36  <||@
  Comment 1467 block B23 null  <||@
  Comment 1467 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1467 490 NOP  <||@
  Comment 1468 492 NOP  <||@
  Comment 1469 494 NOP  <||@
  Comment 1470 496 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1477 498 r11|DWORD = MOVE input: int[-86555|0xfffffffffffeade5]  <||@
  Comment 1483 500 JUMP ~outgoingValues: [] destination: B23 -> B31  <||@
  Comment 1493 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1518 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1538 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1566 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1571 [rdx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 1601 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1606 [rdx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 1636 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1641 [rdx:0, rsi:0, r8:0, r11:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 1671 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1676 [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 1706 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1711 [rdx:0, rbx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4               |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:28|DWORD  |-   <||@
  Comment 1741 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1746 [rdx:0, rbx:0, rsi:0, r8:0, r11:0, r14:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4          |5         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rdi|DWORD  |r8|QWORD[.]  |rcx|DWORD  |r10|DWORD   <||@
  Comment 1776 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1781 [rdx:0, rbx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4               |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:28|DWORD  |-   <||@
  Comment 1811 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1816 [rdx:0, rbx:0, rsi:0, r8:0, r11:0, r13:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 1824 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1824 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1830 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1830 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4500[java.util.regex.Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-4500[java.util.regex.Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)]"
  date 1724269710885
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789aaaaa60 448b560849bc0000002b787f00004d03d44d33e4493bc20f8503a6cdfe66669089842400c0feff4883ec389041817f20030000000f8596050000909090909090909090909048896c2430488974241848895424104c89442408448b5210443bd10f8e450400009090909041817808d8e800000f85cb040000909090909090458b5814468b0cdd0c000000443bc90f86130500009090909090908b5e148b04dd0800000041807810000f8515040000909090909090909090909090909090908bf9420fbe7cdf10400fb6ef49bd0000002b787f0000498d440500483b0500ffffff0f841f000000483b05fbfeffff0f840c030000483b05f6feffff0f843e030000e9fa030000909090904080ff800f83690400009090909090909090909090908d7dd041bd39000000442bed410bfd85ff400f9dc7400fb6ff9090909085ff0f85b800000090909041bb0000000090909090443bd10f8e3103000090909090909090443b5e100f8cb301000044895c242490909090909090909090909090909090909090909090908b5e0c8b04dd0800000049ba0000002b787f0000498d0402488b80f00100004c8b504048c1e303488bf3488bfa8be94d8be8488bd8498bc2896c2420ffd00f1f84000000000085c00f84700100009090909090909090909090b801000000488b6c24304883c438493ba7500400000f87e5030000c390909090ffc18bf9b901000000e9aa0000006666660f1f8400000000006666669066669090909090443bcf0f863d030000909090909090909090909090420fbe6cdf10440fb6ed483b0596fdffff0f841f000000483b0591fdffff0f846d000000483b058cfdffff0f848c000000e9e9020000909090904080fd800f8394020000909090909090909090909090418d6dd041be39000000452bf5410bee85ed400f9dc5400fb6ed9090909085ed0f84c00100009090909090ffc7ffc190909090443bd70f8e4c000000e956ffffff9090909090448b34dd0c000000463b2cf50c0000000f83d60200009090909090400fb6ed420fb66cf510ebad909090909090908b2cdd0c000000413bed400f94c5400fb6edeb92909090448bd98bcfe92ffeffff9090909090909090909090b800000000488b6c24304883c438493ba7500400000f87b0020000c390909090908b4c2420ffc9448b5c242441ffcbe98000000066669044895c242490909090909090909090909090909090909090909090908b5e0c8b04dd0800000049ba0000002b787f0000498d0402488b80f00100004c8b504048c1e303488bf3488bfa8be94d8be8488bd8498bc2896c2420ffd00f1f84000000000085c00f85640000008b4c2420448b5c24249090909090ffc941ffcb4c8b442408488b542410488b74241890909090443b5e100f8d66ffffffe9370000009090909090448b2cdd0c000000423b2ced0c0000000f83770100009090909090400fb6ff420fb67cef10e90afdffff909090e9a2fdffff909090e9e3feffff90909090909090448b04dd0c000000443bc5410f94c0450fb6c0418bf84c8b442408488b542410488b742418e9c9fcffff909090448bd98bcf4c8b442408488b542410488b742418e9c2fcffff44895c2424894c242090909090c64230014c8b442408488b742418e9b2fcffff90909041bb000000004c8b442408488b742418e98afcffff90909049c7c39402000041baed25feff4c8b442408488b74241890909090909090458997840400004d899f90040000e82302cefe0f1f84000000000090909049c7c31405000041bacd45ffffebc290909049c7c0140a000041bbed1dfeff9090909090909045899f840400004d898790040000e8df01cefe0f1f84000000000090909049c7c31400000041bacdedfeffe97bffffff90909049c7c01405000041bbcd86ffffebb790909049c7c00000000041bbe4c1feffeba590909049c7c3140a000041baed21feffe942ffffff90909049c7c30000000041bae5cbfeffe92dffffff90909049c7c30000000041bae4e0feffe918ffffff90909049c7c00000000041bbe5adfeffe951ffffff48896c2430e8e601ccfee95bfafffff4488d0d07fcffff49898f68040000e9ad0fcefef4488d0d3cfdffff49898f68040000e9990fcefef441c78784040000f5f7feff49c7879004000000000000e8f700cefe0f1f84000000000041c78784040000f5eefeff49c7879004000000000000e8d400cefe0f1f84000000000041c78784040000f5e5feff49c7879004000000000000e8b100cefe0f1f84000000000041c78784040000f5d5feff49c7879004000000000000e88e00cefe0f1f84000000000041c78784040000f59cfeff49c7879004000000000000e86b00cefe0f1f84000000000041c78784040000f5b2feff49c7879004000000000000e84800cefe0f1f84000000000041c78784040000f58efeff49c7879004000000000000e82500cefe0f1f84000000000041c78784040000f5d0feff49c7879004000000000000e80200cefe0f1f840000000000e87ba1e1fef4e895fdcdfef4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@14e710a slotKind: QWORD  <||@
  Comment 74 28 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 79 30 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 84 32 stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 89 34 r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0]  <||@
  Comment 89 [rdx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 89 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 93 36 CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999996416808322 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B37 size: DWORD  <||@
  Comment 102 block B1 null  <||@
  Comment 102 38 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 102 40 NOP  <||@
  Comment 103 42 NOP  <||@
  Comment 104 44 NOP  <||@
  Comment 105 46 NOP  <||@
  Comment 106 48 CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B35 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0]  <||@
  Comment 106 [rdx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 106 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 106 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 120 block B2 null  <||@
  Comment 120 50 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 120 52 NOP  <||@
  Comment 121 54 NOP  <||@
  Comment 122 56 NOP  <||@
  Comment 123 58 NOP  <||@
  Comment 124 60 NOP  <||@
  Comment 125 62 NOP  <||@
  Comment 126 64 r11|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD  <||@
  Comment 130 66 r9|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 130 [rdx:0, rsi:0, r8:0, r11:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 130 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 138 68 CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B34 size: DWORD  <||@
  Comment 147 block B3 null  <||@
  Comment 147 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 147 72 NOP  <||@
  Comment 148 74 NOP  <||@
  Comment 149 76 NOP  <||@
  Comment 150 78 NOP  <||@
  Comment 151 80 NOP  <||@
  Comment 152 82 NOP  <||@
  Comment 153 84 rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 156 86 rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 156 [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 156 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 163 88 CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B33 y: 0 size: BYTE inlinedY: null  <||@
  Comment 174 block B4 null  <||@
  Comment 174 90 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 174 92 NOP  <||@
  Comment 175 94 NOP  <||@
  Comment 176 96 NOP  <||@
  Comment 177 98 NOP  <||@
  Comment 178 100 NOP  <||@
  Comment 179 102 NOP  <||@
  Comment 180 104 NOP  <||@
  Comment 181 106 NOP  <||@
  Comment 182 108 NOP  <||@
  Comment 183 110 NOP  <||@
  Comment 184 112 NOP  <||@
  Comment 185 114 NOP  <||@
  Comment 186 116 NOP  <||@
  Comment 187 118 NOP  <||@
  Comment 188 120 NOP  <||@
  Comment 189 122 NOP  <||@
  Comment 190 124 rdi|QWORD = MOV value: rcx|DWORD size: DWORD  <||@
  Comment 192 126 rdi|DWORD = MOVSXB input: [rdi|QWORD + r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 198 128 rbp|DWORD = MOVZXB value: rdi|DWORD size: DWORD  <||@
  Comment 202 130 r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 212 132 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0  <||@
  Comment 217 134 AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B4 -> B5, B4 -> B8, B4 -> B11] defaultTarget: B4 -> B32 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 217 {DataSection[0x0]}  <||@
  Comment 230 {DataSection[0x8]}  <||@
  Comment 243 {DataSection[0x10]}  <||@
  Comment 261 block B5 null  <||@
  Comment 261 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 261 138 NOP  <||@
  Comment 262 140 NOP  <||@
  Comment 263 142 NOP  <||@
  Comment 264 144 NOP  <||@
  Comment 265 146 CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -128 size: BYTE inlinedY: null  <||@
  Comment 275 block B6 null  <||@
  Comment 275 148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 275 150 NOP  <||@
  Comment 276 152 NOP  <||@
  Comment 277 154 NOP  <||@
  Comment 278 156 NOP  <||@
  Comment 279 158 NOP  <||@
  Comment 280 160 NOP  <||@
  Comment 281 162 NOP  <||@
  Comment 282 164 NOP  <||@
  Comment 283 166 NOP  <||@
  Comment 284 168 NOP  <||@
  Comment 285 170 NOP  <||@
  Comment 286 172 NOP  <||@
  Comment 287 174 rdi|DWORD = LEA address: [rbp|DWORD - 48] size: DWORD  <||@
  Comment 290 176 r13|DWORD = MOVE input: int[57|0x39]  <||@
  Comment 296 178 r13|DWORD = SUB (x: r13|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 299 180 rdi|DWORD = OR (x: rdi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 302 182 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 304 184 rdi|DWORD = SETCC condition: >=  <||@
  Comment 312 186 JUMP ~outgoingValues: [] destination: B6 -> B12  <||@
  Comment 312 block B12 null  <||@
  Comment 312 290 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 312 292 NOP  <||@
  Comment 313 294 NOP  <||@
  Comment 314 296 NOP  <||@
  Comment 315 298 NOP  <||@
  Comment 316 300 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD  <||@
  Comment 324 block B13 null  <||@
  Comment 324 302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 324 304 NOP  <||@
  Comment 325 306 NOP  <||@
  Comment 326 308 NOP  <||@
  Comment 327 310 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 333 312 JUMP ~outgoingValues: [] destination: B13 -> B38  <||@
  Comment 333 block B38 null  <||@
  Comment 333 750 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 333 752 NOP  <||@
  Comment 334 754 NOP  <||@
  Comment 335 756 NOP  <||@
  Comment 336 758 NOP  <||@
  Comment 337 760 CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9999993956261464 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD  <||@
  Comment 346 block B39 null  <||@
  Comment 346 762 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 346 764 NOP  <||@
  Comment 347 766 NOP  <||@
  Comment 348 768 NOP  <||@
  Comment 349 770 JUMP ~outgoingValues: [] destination: B39 -> B41  <||@
  Comment 349 block B41 null  <||@
  Comment 349 798 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 349 800 NOP  <||@
  Comment 350 802 NOP  <||@
  Comment 351 804 NOP  <||@
  Comment 352 806 NOP  <||@
  Comment 353 808 CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD  <||@
  Comment 363 block B43 null  <||@
  Comment 363 820 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 363 822 stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 368 824 NOP  <||@
  Comment 369 826 NOP  <||@
  Comment 370 828 NOP  <||@
  Comment 371 830 NOP  <||@
  Comment 372 832 NOP  <||@
  Comment 373 834 NOP  <||@
  Comment 374 836 NOP  <||@
  Comment 375 838 NOP  <||@
  Comment 376 840 NOP  <||@
  Comment 377 842 NOP  <||@
  Comment 378 844 NOP  <||@
  Comment 379 846 NOP  <||@
  Comment 380 848 NOP  <||@
  Comment 381 850 NOP  <||@
  Comment 382 852 NOP  <||@
  Comment 383 854 NOP  <||@
  Comment 384 856 NOP  <||@
  Comment 385 858 NOP  <||@
  Comment 386 860 NOP  <||@
  Comment 387 862 NOP  <||@
  Comment 388 864 NOP  <||@
  Comment 389 866 NOP  <||@
  Comment 390 868 NOP  <||@
  Comment 391 870 rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 394 872 rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54]  <||@
  Comment 394 [rdx:0, rbx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4               |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:28|DWORD  |-   <||@
  Comment 394 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 401 874 r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 411 876 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0  <||@
  Comment 415 878 rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD  <||@
  Comment 422 880 r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD  <||@
  Comment 426 882 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3  <||@
  Comment 430 884 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 433 886 rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 436 890 rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 438 894 r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 441 898 rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 444 900 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 447 902 stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 451 904 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70]  <||@
  Comment 451 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 451 INLINE_INVOKE  <||@
  Comment 453 [stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4               |5 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:32|DWORD  |stack:56|QWORD[.]  |stack:28|DWORD  |-   <||@
  Comment 461 906 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B51 size: DWORD  <||@
  Comment 469 block B51 null  <||@
  Comment 469 1102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 469 1104 NOP  <||@
  Comment 470 1106 NOP  <||@
  Comment 471 1108 NOP  <||@
  Comment 472 1110 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 472 block B52 null  <||@
  Comment 472 1112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 472 1114 NOP  <||@
  Comment 473 1116 NOP  <||@
  Comment 474 1118 NOP  <||@
  Comment 475 1120 NOP  <||@
  Comment 476 1122 NOP  <||@
  Comment 477 1124 NOP  <||@
  Comment 478 1126 NOP  <||@
  Comment 479 1128 NOP  <||@
  Comment 480 1130 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 485 1132 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 494 POLL_RETURN_FAR  <||@
  Comment 508 block B14 null  <||@
  Comment 508 314 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 508 316 NOP  <||@
  Comment 509 318 NOP  <||@
  Comment 510 320 NOP  <||@
  Comment 511 322 NOP  <||@
  Comment 512 324 rcx|DWORD = INC value: rcx|DWORD size: DWORD  <||@
  Comment 514 326 rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 516 328 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 521 330 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 526 block B16 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 526 344 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 544 346 NOP  <||@
  Comment 545 348 NOP  <||@
  Comment 546 350 NOP  <||@
  Comment 547 352 NOP  <||@
  Comment 548 354 CMPBRANCH (x: r9|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD  <||@
  Comment 557 block B17 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 557 356 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 557 358 NOP  <||@
  Comment 558 360 NOP  <||@
  Comment 559 362 NOP  <||@
  Comment 560 364 NOP  <||@
  Comment 561 366 NOP  <||@
  Comment 562 368 NOP  <||@
  Comment 563 370 NOP  <||@
  Comment 564 372 NOP  <||@
  Comment 565 374 NOP  <||@
  Comment 566 376 NOP  <||@
  Comment 567 378 NOP  <||@
  Comment 568 380 NOP  <||@
  Comment 569 382 rbp|DWORD = MOVSXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 575 384 r13|DWORD = MOVZXB value: rbp|DWORD size: DWORD  <||@
  Comment 579 386 AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/CharPredicates$$Lambda.0x800000037;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}] keyTargets: [B17 -> B18, B17 -> B21, B17 -> B24] defaultTarget: B17 -> B29 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 579 {DataSection[0x0]}  <||@
  Comment 592 {DataSection[0x8]}  <||@
  Comment 605 {DataSection[0x10]}  <||@
  Comment 623 block B18 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 623 388 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 623 390 NOP  <||@
  Comment 624 392 NOP  <||@
  Comment 625 394 NOP  <||@
  Comment 626 396 NOP  <||@
  Comment 627 398 CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: -128 size: BYTE inlinedY: null  <||@
  Comment 637 block B19 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 637 400 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 637 402 NOP  <||@
  Comment 638 404 NOP  <||@
  Comment 639 406 NOP  <||@
  Comment 640 408 NOP  <||@
  Comment 641 410 NOP  <||@
  Comment 642 412 NOP  <||@
  Comment 643 414 NOP  <||@
  Comment 644 416 NOP  <||@
  Comment 645 418 NOP  <||@
  Comment 646 420 NOP  <||@
  Comment 647 422 NOP  <||@
  Comment 648 424 NOP  <||@
  Comment 649 426 rbp|DWORD = LEA address: [r13|DWORD - 48] size: DWORD  <||@
  Comment 653 428 r14|DWORD = MOVE input: int[57|0x39]  <||@
  Comment 659 430 r14|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 662 432 rbp|DWORD = OR (x: rbp|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 665 434 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 667 436 rbp|DWORD = SETCC condition: >=  <||@
  Comment 675 438 JUMP ~outgoingValues: [] destination: B19 -> B25  <||@
  Comment 675 block B25 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 675 526 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 675 528 NOP  <||@
  Comment 676 530 NOP  <||@
  Comment 677 532 NOP  <||@
  Comment 678 534 NOP  <||@
  Comment 679 536 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.5928267925853211 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: DWORD  <||@
  Comment 687 block B26 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 687 538 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 687 540 NOP  <||@
  Comment 688 542 NOP  <||@
  Comment 689 544 NOP  <||@
  Comment 690 546 NOP  <||@
  Comment 691 548 NOP  <||@
  Comment 692 550 rdi|DWORD = INC value: rdi|DWORD size: DWORD  <||@
  Comment 694 552 rcx|DWORD = INC value: rcx|DWORD size: DWORD  <||@
  Comment 696 554 JUMP ~outgoingValues: [] destination: B26 -> B15  <||@
  Comment 696 block B15 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 696 332 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 696 334 NOP  <||@
  Comment 697 336 NOP  <||@
  Comment 698 338 NOP  <||@
  Comment 699 340 NOP  <||@
  Comment 700 342 CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B28 size: DWORD  <||@
  Comment 714 block B21 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 714 454 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 714 456 NOP  <||@
  Comment 715 458 NOP  <||@
  Comment 716 460 NOP  <||@
  Comment 717 462 NOP  <||@
  Comment 718 464 NOP  <||@
  Comment 719 466 r14|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 727 468 CMPBRANCH (x: r13|DWORD, y: [r14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD state [bci:9]  <||@
  Comment 727 [rdx:0, rbx:0, rsi:0, r8:0, r11:0, r14:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4          |5         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rdi|DWORD  |r8|QWORD[.]  |rcx|DWORD  |r10|DWORD   <||@
  Comment 727 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 741 block B22 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 741 470 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 741 472 NOP  <||@
  Comment 742 474 NOP  <||@
  Comment 743 476 NOP  <||@
  Comment 744 478 NOP  <||@
  Comment 745 480 NOP  <||@
  Comment 746 482 rbp|QWORD = MOVZXB value: rbp|DWORD size: DWORD  <||@
  Comment 750 484 rbp|DWORD = MOVZXB input: [rbp|QWORD + r14|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 756 486 JUMP ~outgoingValues: [] destination: B22 -> B25  <||@
  Comment 758 block B24 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 758 502 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 758 504 NOP  <||@
  Comment 759 506 NOP  <||@
  Comment 760 508 NOP  <||@
  Comment 761 510 NOP  <||@
  Comment 762 512 NOP  <||@
  Comment 763 514 NOP  <||@
  Comment 764 516 NOP  <||@
  Comment 765 518 rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 772 520 CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 775 522 rbp|DWORD = SETCC condition: =  <||@
  Comment 783 524 JUMP ~outgoingValues: [] destination: B24 -> B25  <||@
  Comment 785 block B28 null  <||@
  Comment 785 576 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 785 578 NOP  <||@
  Comment 786 580 NOP  <||@
  Comment 787 582 NOP  <||@
  Comment 788 584 r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 791 586 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 793 588 JUMP ~outgoingValues: [] destination: B28 -> B38  <||@
  Comment 798 block B42 null  <||@
  Comment 798 810 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 798 812 NOP  <||@
  Comment 799 814 NOP  <||@
  Comment 800 816 NOP  <||@
  Comment 801 818 JUMP ~outgoingValues: [] destination: B42 -> B50  <||@
  Comment 801 block B50 null  <||@
  Comment 801 1080 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 801 1082 NOP  <||@
  Comment 802 1084 NOP  <||@
  Comment 803 1086 NOP  <||@
  Comment 804 1088 NOP  <||@
  Comment 805 1090 NOP  <||@
  Comment 806 1092 NOP  <||@
  Comment 807 1094 NOP  <||@
  Comment 808 1096 NOP  <||@
  Comment 809 1098 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 814 1100 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 823 POLL_RETURN_FAR  <||@
  Comment 837 block B44 null  <||@
  Comment 837 908 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 837 910 NOP  <||@
  Comment 838 912 NOP  <||@
  Comment 839 914 NOP  <||@
  Comment 840 916 NOP  <||@
  Comment 841 918 NOP  <||@
  Comment 842 920 rcx|DWORD = DEC value: stack:32|DWORD size: DWORD  <||@
  Comment 848 922 r11|DWORD = DEC value: stack:28|DWORD size: DWORD  <||@
  Comment 856 930 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 861 block B46 loop 1 depth 1 header:58|LoopBegin  <||@
  Comment 861 944 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 864 946 stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 869 948 NOP  <||@
  Comment 870 950 NOP  <||@
  Comment 871 952 NOP  <||@
  Comment 872 954 NOP  <||@
  Comment 873 956 NOP  <||@
  Comment 874 958 NOP  <||@
  Comment 875 960 NOP  <||@
  Comment 876 962 NOP  <||@
  Comment 877 964 NOP  <||@
  Comment 878 966 NOP  <||@
  Comment 879 968 NOP  <||@
  Comment 880 970 NOP  <||@
  Comment 881 972 NOP  <||@
  Comment 882 974 NOP  <||@
  Comment 883 976 NOP  <||@
  Comment 884 978 NOP  <||@
  Comment 885 980 NOP  <||@
  Comment 886 982 NOP  <||@
  Comment 887 984 NOP  <||@
  Comment 888 986 NOP  <||@
  Comment 889 988 NOP  <||@
  Comment 890 990 NOP  <||@
  Comment 891 992 NOP  <||@
  Comment 892 994 rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 895 996 rax|DWORD = MOV input: [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:54]  <||@
  Comment 895 [rdx:0, rbx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4               |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:28|DWORD  |-   <||@
  Comment 895 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 902 998 r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 912 1000 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 140154094223360 shift: 0  <||@
  Comment 916 1002 rax|QWORD = MOV input: [rax|QWORD + 496] size: QWORD  <||@
  Comment 923 1004 r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD  <||@
  Comment 927 1006 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@37ca0133 encoding: base: 0 shift: 3  <||@
  Comment 931 1008 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 934 1010 rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 937 1014 rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 939 1018 r13|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 942 1022 rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 945 1024 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 948 1026 stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 952 1028 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70]  <||@
  Comment 952 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 952 INLINE_INVOKE  <||@
  Comment 954 [stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4               |5 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:32|DWORD  |stack:56|QWORD[.]  |stack:28|DWORD  |-   <||@
  Comment 962 1030 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.315654224658634 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: DWORD  <||@
  Comment 970 block B47 loop 1 depth 1 header:58|LoopBegin  <||@
  Comment 970 1032 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 970 1034 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 974 1036 r11|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 979 1038 NOP  <||@
  Comment 980 1040 NOP  <||@
  Comment 981 1042 NOP  <||@
  Comment 982 1044 NOP  <||@
  Comment 983 1046 NOP  <||@
  Comment 984 1048 rcx|DWORD = DEC value: rcx|DWORD size: DWORD  <||@
  Comment 986 1050 r11|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 989 1058 JUMP ~outgoingValues: [] destination: B47 -> B45  <||@
  Comment 989 block B45 loop 1 depth 1 header:58|LoopBegin  <||@
  Comment 989 932 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 989 924 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 994 926 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 999 928 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1004 934 NOP  <||@
  Comment 1005 936 NOP  <||@
  Comment 1006 938 NOP  <||@
  Comment 1007 940 NOP  <||@
  Comment 1008 942 CMPBRANCH (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 0.26134679498052216 condition: < trueDestination: B45 -> B49 falseDestination: B45 -> B46 size: DWORD  <||@
  Comment 1023 block B8 null  <||@
  Comment 1023 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1023 208 NOP  <||@
  Comment 1024 210 NOP  <||@
  Comment 1025 212 NOP  <||@
  Comment 1026 214 NOP  <||@
  Comment 1027 216 NOP  <||@
  Comment 1028 218 r13|DWORD[_] = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1036 220 CMPBRANCH (x: rbp|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD state [bci:0]  <||@
  Comment 1036 [rdx:0, rbx:0, rsi:0, r8:0, r11:0, r13:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 1036 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1050 block B9 null  <||@
  Comment 1050 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1050 224 NOP  <||@
  Comment 1051 226 NOP  <||@
  Comment 1052 228 NOP  <||@
  Comment 1053 230 NOP  <||@
  Comment 1054 232 NOP  <||@
  Comment 1055 234 rdi|QWORD = MOVZXB value: rdi|DWORD size: DWORD  <||@
  Comment 1059 236 rdi|DWORD = MOVZXB input: [rdi|QWORD + r13|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1065 238 JUMP ~outgoingValues: [] destination: B9 -> B12  <||@
  Comment 1070 block B48 null  <||@
  Comment 1070 1060 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1070 1062 NOP  <||@
  Comment 1071 1064 NOP  <||@
  Comment 1072 1066 NOP  <||@
  Comment 1073 1068 JUMP ~outgoingValues: [] destination: B48 -> B52  <||@
  Comment 1078 block B49 null  <||@
  Comment 1078 1070 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1078 1072 NOP  <||@
  Comment 1079 1074 NOP  <||@
  Comment 1080 1076 NOP  <||@
  Comment 1081 1078 JUMP ~outgoingValues: [] destination: B49 -> B50  <||@
  Comment 1086 block B11 null  <||@
  Comment 1086 258 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1086 260 NOP  <||@
  Comment 1087 262 NOP  <||@
  Comment 1088 264 NOP  <||@
  Comment 1089 266 NOP  <||@
  Comment 1090 268 NOP  <||@
  Comment 1091 270 NOP  <||@
  Comment 1092 272 NOP  <||@
  Comment 1093 274 r8|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1101 276 CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1104 278 r8|DWORD = SETCC condition: =  <||@
  Comment 1112 280 rdi|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1115 282 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1120 284 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1125 286 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1130 288 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 1135 block B27 null  <||@
  Comment 1135 556 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1135 558 NOP  <||@
  Comment 1136 560 NOP  <||@
  Comment 1137 562 NOP  <||@
  Comment 1138 564 r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1141 566 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1143 568 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1148 570 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1153 572 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1158 574 JUMP ~outgoingValues: [] destination: B27 -> B38  <||@
  Comment 1163 block B40 null  <||@
  Comment 1163 772 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1163 774 stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1168 776 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1172 778 NOP  <||@
  Comment 1173 780 NOP  <||@
  Comment 1174 782 NOP  <||@
  Comment 1175 784 NOP  <||@
  Comment 1176 786 MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE  <||@
  Comment 1180 792 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1185 794 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1190 796 JUMP ~outgoingValues: [] destination: B40 -> B41  <||@
  Comment 1195 block B37 null  <||@
  Comment 1195 734 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1195 736 NOP  <||@
  Comment 1196 738 NOP  <||@
  Comment 1197 740 NOP  <||@
  Comment 1198 742 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1204 744 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1209 746 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1214 748 JUMP ~outgoingValues: [] destination: B37 -> B38  <||@
  Comment 1219 block B33 null  <||@
  Comment 1219 658 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1219 660 NOP  <||@
  Comment 1220 662 NOP  <||@
  Comment 1221 664 NOP  <||@
  Comment 1222 666 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1229 668 r10|DWORD = MOVE input: int[-121363|0xfffffffffffe25ed]  <||@
  Comment 1235 674 JUMP ~outgoingValues: [] destination: B33 -> B36  <||@
  Comment 1235 block B36 null  <||@
  Comment 1235 712 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1235 706 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1240 708 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1245 714 NOP  <||@
  Comment 1246 716 NOP  <||@
  Comment 1247 718 NOP  <||@
  Comment 1248 720 NOP  <||@
  Comment 1249 722 NOP  <||@
  Comment 1250 724 NOP  <||@
  Comment 1251 726 NOP  <||@
  Comment 1252 728 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1259 730 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1266 732 DEOPT info [bci:0]  <||@
  Comment 1266 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1271 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 1279 block B32 null  <||@
  Comment 1279 640 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1279 642 NOP  <||@
  Comment 1280 644 NOP  <||@
  Comment 1281 646 NOP  <||@
  Comment 1282 648 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1289 650 r10|DWORD = MOVE input: int[-47667|0xffffffffffff45cd]  <||@
  Comment 1295 656 JUMP ~outgoingValues: [] destination: B32 -> B36  <||@
  Comment 1297 block B20 null  <||@
  Comment 1297 440 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1297 442 NOP  <||@
  Comment 1298 444 NOP  <||@
  Comment 1299 446 NOP  <||@
  Comment 1300 448 r8|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 1307 450 r11|DWORD = MOVE input: int[-123411|0xfffffffffffe1ded]  <||@
  Comment 1313 452 JUMP ~outgoingValues: [] destination: B20 -> B31  <||@
  Comment 1313 block B31 null  <||@
  Comment 1313 618 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1313 620 NOP  <||@
  Comment 1314 622 NOP  <||@
  Comment 1315 624 NOP  <||@
  Comment 1316 626 NOP  <||@
  Comment 1317 628 NOP  <||@
  Comment 1318 630 NOP  <||@
  Comment 1319 632 NOP  <||@
  Comment 1320 634 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1327 636 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 1334 638 DEOPT info [bci:9]  <||@
  Comment 1334 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1339 [rdx:0, stack:8, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4          |5         
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]  |rdi|DWORD  |stack:56|QWORD[.]  |rcx|DWORD  |r10|DWORD   <||@
  Comment 1347 block B35 null  <||@
  Comment 1347 694 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1347 696 NOP  <||@
  Comment 1348 698 NOP  <||@
  Comment 1349 700 NOP  <||@
  Comment 1350 702 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1357 704 r10|DWORD = MOVE input: int[-70195|0xfffffffffffeedcd]  <||@
  Comment 1363 710 JUMP ~outgoingValues: [] destination: B35 -> B36  <||@
  Comment 1368 block B29 null  <||@
  Comment 1368 590 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1368 592 NOP  <||@
  Comment 1369 594 NOP  <||@
  Comment 1370 596 NOP  <||@
  Comment 1371 598 r8|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1378 600 r11|DWORD = MOVE input: int[-31027|0xffffffffffff86cd]  <||@
  Comment 1384 602 JUMP ~outgoingValues: [] destination: B29 -> B31  <||@
  Comment 1386 block B30 null  <||@
  Comment 1386 604 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1386 606 NOP  <||@
  Comment 1387 608 NOP  <||@
  Comment 1388 610 NOP  <||@
  Comment 1389 612 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1396 614 r11|DWORD = MOVE input: int[-81436|0xfffffffffffec1e4]  <||@
  Comment 1402 616 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 1404 block B7 null  <||@
  Comment 1404 188 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1404 190 NOP  <||@
  Comment 1405 192 NOP  <||@
  Comment 1406 194 NOP  <||@
  Comment 1407 196 r11|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 1414 198 r10|DWORD = MOVE input: int[-122387|0xfffffffffffe21ed]  <||@
  Comment 1420 204 JUMP ~outgoingValues: [] destination: B7 -> B36  <||@
  Comment 1425 block B10 null  <||@
  Comment 1425 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1425 242 NOP  <||@
  Comment 1426 244 NOP  <||@
  Comment 1427 246 NOP  <||@
  Comment 1428 248 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1435 250 r10|DWORD = MOVE input: int[-78875|0xfffffffffffecbe5]  <||@
  Comment 1441 256 JUMP ~outgoingValues: [] destination: B10 -> B36  <||@
  Comment 1446 block B34 null  <||@
  Comment 1446 676 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1446 678 NOP  <||@
  Comment 1447 680 NOP  <||@
  Comment 1448 682 NOP  <||@
  Comment 1449 684 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1456 686 r10|DWORD = MOVE input: int[-73500|0xfffffffffffee0e4]  <||@
  Comment 1462 692 JUMP ~outgoingValues: [] destination: B34 -> B36  <||@
  Comment 1467 block B23 null  <||@
  Comment 1467 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1467 490 NOP  <||@
  Comment 1468 492 NOP  <||@
  Comment 1469 494 NOP  <||@
  Comment 1470 496 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1477 498 r11|DWORD = MOVE input: int[-86555|0xfffffffffffeade5]  <||@
  Comment 1483 500 JUMP ~outgoingValues: [] destination: B23 -> B31  <||@
  Comment 1493 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1518 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1538 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1566 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1571 [rdx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 1601 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1606 [rdx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 1636 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1641 [rdx:0, rsi:0, r8:0, r11:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 1671 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1676 [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 1706 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1711 [rdx:0, rbx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4               |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:28|DWORD  |-   <||@
  Comment 1741 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1746 [rdx:0, rbx:0, rsi:0, r8:0, r11:0, r14:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4          |5         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rdi|DWORD  |r8|QWORD[.]  |rcx|DWORD  |r10|DWORD   <||@
  Comment 1776 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1781 [rdx:0, rbx:0, rsi:0, r8:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4               |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:28|DWORD  |-   <||@
  Comment 1811 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1816 [rdx:0, rbx:0, rsi:0, r8:0, r11:0, r13:0, stack:8, stack:16, stack:24]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4500) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 1824 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1824 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1830 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1830 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
