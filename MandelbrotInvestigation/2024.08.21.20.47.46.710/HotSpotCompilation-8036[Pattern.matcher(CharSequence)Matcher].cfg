begin_compilation
  name " HotSpotCompilation-8036[java.util.regex.Pattern.matcher(CharSequence)]"
  method "HotSpotCompilation-8036[java.util.regex.Pattern.matcher(CharSequence)]"
  date 1724269751368
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i172 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i172  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Pattern
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1104 v1103 ?6 v1105 a356 ?167 v1106 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i172 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.compiled
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 1]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1103 
lastLocationAccess: - 
=== Succesors ===
next: v332 
=== Usages ===
i173 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1103 lastLocationAccess: - #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 1]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i172 
=== Succesors ===
=== Usages ===
v8 ?6 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i172  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
v1111 ?6 ?167 a364 v1113 v1176 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: ifne
code: ResolvedJavaMethodBytecode<Pattern.matcher(CharSequence)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 1]
sourceFile: Pattern.java
sourceLine: 1174
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i173 a1 a2 
=== Succesors ===
=== Usages ===
v716 v1094 v1096 v1098 a782 a862 a934 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i173 a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 v163 v1024 v102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i173 
y: i7 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i173 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v330 
falseSuccessor: v331 
=== Usages ===
=== Predecessor ===
i172 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v330 #falseSuccessor: v331  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid j180 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 80]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i713 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
rawvalue: -84243
stableDimension: 0
stamp: i32 [-84243]
stampKind: i32
value: int[-84243|0xfffffffffffeb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
v330 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v827 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: j747 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j747 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j809 
=== Usages ===
v1146 v1147 
=== Predecessor ===
v827 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j809  <|@  <|@
f <@~|@floating>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j747 
index: - 
=== Succesors ===
=== Usages ===
j809 v811 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j747 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j809 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1146 
lastLocationAccess: - 
=== Succesors ===
next: j810 
=== Usages ===
j754 v1148 v1149 v1150 a781 v1151 v1155 v1152 v1153 v1154 
=== Predecessor ===
j747 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1146 lastLocationAccess: - #next: j810  <|@  <|@
f <@~|@floating>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j747 
index: - 
=== Succesors ===
=== Usages ===
j810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j747 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j810 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1147 
lastLocationAccess: - 
=== Succesors ===
next: i1084 
=== Usages ===
v755 
=== Predecessor ===
j809 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1147 lastLocationAccess: - #next: i1084  <|@  <|@
f <@~|@floating>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1084 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1084 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.capturingGroupCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 50]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1104 
lastLocationAccess: - 
=== Succesors ===
next: v758 
=== Usages ===
v37 i50 
=== Predecessor ===
j810 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1104 lastLocationAccess: - #next: v758  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 53]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 10
stableDimension: 0
stamp: i32 [10]
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 i50 i666 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1084 
y: i36 
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1084 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32 [10 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v37 
trueValue: i36 
falseValue: i1084 
=== Succesors ===
=== Usages ===
i51 v239 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v37 trueValue: i36 falseValue: i1084  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:227) [bci: 35]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
?167 i51 i71 i86 v349 i138 i160 i383 i403 i427 i447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 62]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i50 
y: i28 
=== Succesors ===
=== Usages ===
v816 v420 i681 j263 v399 a782 i421 v276 i296 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i50 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i51 
=== Succesors ===
=== Usages ===
v271 j751 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i51  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i506 j751 j905 v276 j833 v291 i464 i505 i421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [0 - 17179869176] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j263 
y: i190 
=== Succesors ===
=== Usages ===
j792 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j263 y: i190  <|@  <|@
f <@~|@floating>@ <|@
tid j791 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j792 j869 j941 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [23 - 17179869199] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx111
=== Inputs ===
x: j751 
y: j791 
=== Succesors ===
=== Usages ===
j753 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j751 y: j791  <|@  <|@
f <@~|@floating>@ <|@
tid j752 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j753 j834 j906 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j753 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [0 - 17179869192] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j792 
y: j752 
=== Succesors ===
=== Usages ===
j754 v770 j794 v1152 v1153 v1154 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j792 y: j752  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
=== Inputs ===
x: j753 
y: j809 
=== Succesors ===
=== Usages ===
v755 v811 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j753 y: j809  <|@  <|@
f <@~|@floating>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j810 
y: j754 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j810 y: j754  <|@  <|@
f <@~|@floating>@ <|@
tid j795 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:205) [bci: 57]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:184) [bci: 167]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j778 j930 j858 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j719 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j715 v1032 v1030 v1031 v1029 v817 v1028 v888 v1027 v960 v1026 v1025 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j192 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j921 j849 j769 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j793 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j794 j870 j942 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j796 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v762 v842 v914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v815 v886 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j759 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 v883 v955 v1020 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a782 a862 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v755 
=== Succesors ===
trueSuccessor: v757 
falseSuccessor: v756 
=== Usages ===
=== Predecessor ===
i1084 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v755 #trueSuccessor: v757 #falseSuccessor: v756  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a782 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a782  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a782 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v746 i51 
=== Succesors ===
next: v1094 
=== Usages ===
v1094 a807 
=== Predecessor ===
v757 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v746 i51 #next: v1094  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-210801|0xfffffffffffcc88f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?6 
object: a782 
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
a782 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?6 object: a782 #next: v786  <|@  <|@
f <@*|@fixed>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
v1094 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v811 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1146 
lastLocationAccess: - 
value: j754 
stateAfter: - 
=== Succesors ===
next: v799 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1146 lastLocationAccess: - value: j754 stateAfter: - #next: v799  <|@  <|@
f <@~|@floating>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j753 
index: j809 
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j753 index: j809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
address: v1152 
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v811 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1152 #next: v802  <|@  <|@
f <@~|@floating>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j753 
index: j809 
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j753 index: j809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
address: v1153 
=== Succesors ===
next: v805 
=== Usages ===
=== Predecessor ===
v799 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1153 #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j753 
index: j809 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j753 index: j809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
address: v1154 
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1154 #next: v812  <|@  <|@
f <@~|@floating>@ <|@
tid v1148 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j809 
index: - 
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j809 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1148 
lastLocationAccess: - 
value: j759 
stateAfter: - 
=== Succesors ===
next: v815 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1148 lastLocationAccess: - value: j759 stateAfter: - #next: v815  <|@  <|@
f <@~|@floating>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j809 
index: - 
=== Succesors ===
=== Usages ===
v815 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j809 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1155 
lastLocationAccess: - 
value: v1044 
stateAfter: - 
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1155 lastLocationAccess: - value: v1044 stateAfter: - #next: v816  <|@  <|@
f <@~|@floating>@ <|@
tid v1149 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j809 
index: - 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j809 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1149 
lastLocationAccess: - 
value: i51 
stateAfter: - 
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1149 lastLocationAccess: - value: i51 stateAfter: - #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid j794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [-16 - 17179869176] bits:x...x000
=== Inputs ===
x: j753 
y: j793 
=== Succesors ===
=== Usages ===
v762 v766 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j753 y: j793  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j794 
y: j796 
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j794 y: j796  <|@  <|@
f <@*|@fixed>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v764 
falseSuccessor: v763 
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v764 #falseSuccessor: v763  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v767 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v767  <|@  <|@
f <@*|@fixed>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
v764 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v768 
values: j192 j778 
=== Succesors ===
=== Usages ===
v770 v1150 j778 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v768 values: j192 j778  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v767 
=== Succesors ===
next: v776 
=== Usages ===
j769 v775 v779 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v767 #next: v776  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j769 
y: j753 
=== Succesors ===
=== Usages ===
v776 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j769 y: j753  <|@  <|@
f <@*|@fixed>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v770 
=== Succesors ===
trueSuccessor: v771 
falseSuccessor: v775 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v770 #trueSuccessor: v771 #falseSuccessor: v775  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v817 
=== Usages ===
=== Predecessor ===
v776 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v817  <|@  <|@
f <@~|@floating>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j809 
index: j769 
=== Succesors ===
=== Usages ===
v817 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j809 index: j769  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1150 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1150 lastLocationAccess: - value: j719 stateAfter: - #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid j778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
=== Inputs ===
x: j769 
y: j795 
=== Succesors ===
=== Usages ===
j769 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j769 y: j795  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v768 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v817 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v768  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v768 
=== Succesors ===
next: v774 
=== Usages ===
=== Predecessor ===
v776 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v768 #next: v774  <|@  <|@
f <@*|@fixed>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
v775 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v766  <|@  <|@
f <@~|@floating>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j809 
index: - 
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j809 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1151 
lastLocationAccess: - 
length: j794 
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v1151 lastLocationAccess: - length: j794 #next: v772  <|@  <|@
f <@*|@fixed>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
v766 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v772 v774 
=== Succesors ===
next: v780 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v772 v774 #next: v780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a781 
=== Usages ===
=== Predecessor ===
v773 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j809 
=== Succesors ===
next: v784 
=== Usages ===
a807 
=== Predecessor ===
v780 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j809 #next: v784  <|@  <|@
f <@*|@fixed>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
a781 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v785 
values: a781 a782 
=== Succesors ===
=== Usages ===
v1144 v1145 a360 ?167 v1108 v1107 v1124 v1125 v1128 v1130 v1131 v1134 v1135 v1136 v1137 v1138 v1139 v1140 v1141 v1142 v1143 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v785 values: a781 a782  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v784 v786 
=== Succesors ===
next: v898 
=== Usages ===
a807 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v784 v786 #next: v898  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: j829 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j829 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j880 
=== Usages ===
v1156 v1157 
=== Predecessor ===
v898 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j880  <|@  <|@
f <@~|@floating>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j829 
index: - 
=== Succesors ===
=== Usages ===
j880 v882 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j829 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j880 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1156 
lastLocationAccess: - 
=== Succesors ===
next: j881 
=== Usages ===
j835 v1158 v1159 v1160 a861 v1161 v1165 v1162 v1163 v1164 
=== Predecessor ===
j829 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1156 lastLocationAccess: - #next: j881  <|@  <|@
f <@~|@floating>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j829 
index: - 
=== Succesors ===
=== Usages ===
j881 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j829 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j881 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1157 
lastLocationAccess: - 
=== Succesors ===
next: i1085 
=== Usages ===
v836 
=== Predecessor ===
j880 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1157 lastLocationAccess: - #next: i1085  <|@  <|@
f <@~|@floating>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1085 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1085 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.localCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 70]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1105 
lastLocationAccess: - 
=== Succesors ===
next: v839 
=== Usages ===
v887 v291 i684 v463 j279 v443 a862 i464 v163 i299 
=== Predecessor ===
j881 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1105 lastLocationAccess: - #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid j279 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1085 
=== Succesors ===
=== Usages ===
v286 j833 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1085  <|@  <|@
f <@~|@floating>@ <|@
tid j833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [0 - 17179869180] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00
=== Inputs ===
x: j279 
y: i190 
=== Succesors ===
=== Usages ===
j869 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j279 y: i190  <|@  <|@
f <@~|@floating>@ <|@
tid j869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [23 - 17179869203] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
=== Inputs ===
x: j833 
y: j791 
=== Succesors ===
=== Usages ===
j834 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j833 y: j791  <|@  <|@
f <@~|@floating>@ <|@
tid j834 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [0 - 17179869200] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j869 
y: j752 
=== Succesors ===
=== Usages ===
j835 v850 j870 v1162 v1163 v1164 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j869 y: j752  <|@  <|@
f <@~|@floating>@ <|@
tid j835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
=== Inputs ===
x: j834 
y: j880 
=== Succesors ===
=== Usages ===
v836 v882 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j834 y: j880  <|@  <|@
f <@~|@floating>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j881 
y: j835 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j881 y: j835  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v836 
=== Succesors ===
trueSuccessor: v838 
falseSuccessor: v837 
=== Usages ===
=== Predecessor ===
i1085 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v836 #trueSuccessor: v838 #falseSuccessor: v837  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a862 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a862 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v746 i1085 
=== Succesors ===
next: v1096 
=== Usages ===
v1096 a878 
=== Predecessor ===
v838 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v746 i1085 #next: v1096  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-228977|0xfffffffffffc818f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?6 
object: a862 
=== Succesors ===
next: v866 
=== Usages ===
=== Predecessor ===
a862 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?6 object: a862 #next: v866  <|@  <|@
f <@*|@fixed>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
v1096 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v882 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1156 
lastLocationAccess: - 
value: j835 
stateAfter: - 
=== Succesors ===
next: v873 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1156 lastLocationAccess: - value: j835 stateAfter: - #next: v873  <|@  <|@
f <@~|@floating>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j834 
index: j880 
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: j880  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
address: v1162 
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v882 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1162 #next: v875  <|@  <|@
f <@~|@floating>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j834 
index: j880 
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: j880  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
address: v1163 
=== Succesors ===
next: v877 
=== Usages ===
=== Predecessor ===
v873 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1163 #next: v877  <|@  <|@
f <@~|@floating>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j834 
index: j880 
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: j880  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
address: v1164 
=== Succesors ===
next: v883 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1164 #next: v883  <|@  <|@
f <@~|@floating>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j880 
index: - 
=== Succesors ===
=== Usages ===
v883 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1158 
lastLocationAccess: - 
value: j759 
stateAfter: - 
=== Succesors ===
next: v886 
=== Usages ===
=== Predecessor ===
v877 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1158 lastLocationAccess: - value: j759 stateAfter: - #next: v886  <|@  <|@
f <@~|@floating>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j880 
index: - 
=== Succesors ===
=== Usages ===
v886 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1165 
lastLocationAccess: - 
value: v1044 
stateAfter: - 
=== Succesors ===
next: v887 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1165 lastLocationAccess: - value: v1044 stateAfter: - #next: v887  <|@  <|@
f <@~|@floating>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j880 
index: - 
=== Succesors ===
=== Usages ===
v887 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1159 
lastLocationAccess: - 
value: i1085 
stateAfter: - 
=== Succesors ===
next: v845 
=== Usages ===
=== Predecessor ===
v886 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1159 lastLocationAccess: - value: i1085 stateAfter: - #next: v845  <|@  <|@
f <@~|@floating>@ <|@
tid j870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [-16 - 17179869184] bits:x...x000
=== Inputs ===
x: j834 
y: j793 
=== Succesors ===
=== Usages ===
v842 v846 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j834 y: j793  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j870 
y: j796 
=== Succesors ===
=== Usages ===
v845 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j870 y: j796  <|@  <|@
f <@*|@fixed>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v842 
=== Succesors ===
trueSuccessor: v844 
falseSuccessor: v843 
=== Usages ===
=== Predecessor ===
v887 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v842 #trueSuccessor: v844 #falseSuccessor: v843  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v847 
=== Usages ===
=== Predecessor ===
v845 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v847  <|@  <|@
f <@*|@fixed>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
v844 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v848 
values: j192 j858 
=== Succesors ===
=== Usages ===
v850 v1160 j858 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v848 values: j192 j858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v847 
=== Succesors ===
next: v856 
=== Usages ===
j849 v855 v859 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v847 #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j849 
y: j834 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j849 y: j834  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v850 
=== Succesors ===
trueSuccessor: v851 
falseSuccessor: v855 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v850 #trueSuccessor: v851 #falseSuccessor: v855  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v888 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v888  <|@  <|@
f <@~|@floating>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j880 
index: j849 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: j849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1160 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1160 lastLocationAccess: - value: j719 stateAfter: - #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid j858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
=== Inputs ===
x: j849 
y: j795 
=== Succesors ===
=== Usages ===
j849 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j849 y: j795  <|@  <|@
f <@*|@fixed>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v848 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v848  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v848 
=== Succesors ===
next: v854 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v848 #next: v854  <|@  <|@
f <@*|@fixed>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v855 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v846 
=== Usages ===
=== Predecessor ===
v845 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v846  <|@  <|@
f <@~|@floating>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j880 
index: - 
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1161 
lastLocationAccess: - 
length: j870 
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v843 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v1161 lastLocationAccess: - length: j870 #next: v852  <|@  <|@
f <@*|@fixed>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v846 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v852 v854 
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v852 v854 #next: v860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a861 
=== Usages ===
=== Predecessor ===
v853 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j880 
=== Succesors ===
next: v864 
=== Usages ===
a878 
=== Predecessor ===
v860 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j880 #next: v864  <|@  <|@
f <@*|@fixed>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
a861 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v865 
values: a861 a862 
=== Succesors ===
=== Usages ===
v1132 v1133 a368 ?167 v1109 v1110 v1126 v1127 v1129 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v865 values: a861 a862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v864 v866 
=== Succesors ===
next: v970 
=== Usages ===
a878 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v864 v866 #next: v970  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: j901 
=== Usages ===
=== Predecessor ===
v865 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j901 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j952 
=== Usages ===
v1166 v1167 
=== Predecessor ===
v970 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j952  <|@  <|@
f <@~|@floating>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j901 
index: - 
=== Succesors ===
=== Usages ===
j952 v954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j901 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j952 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
lastLocationAccess: - 
=== Succesors ===
next: j953 
=== Usages ===
j907 v1168 v1169 v1170 a933 v1171 v1175 v1172 v1173 v1174 
=== Predecessor ===
j901 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1166 lastLocationAccess: - #next: j953  <|@  <|@
f <@~|@floating>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j901 
index: - 
=== Succesors ===
=== Usages ===
j953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j901 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j953 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1167 
lastLocationAccess: - 
=== Succesors ===
next: i1086 
=== Usages ===
v908 
=== Predecessor ===
j952 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1167 lastLocationAccess: - #next: i1086  <|@  <|@
f <@~|@floating>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1086 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1086 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.localTCNCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 80]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1106 
lastLocationAccess: - 
=== Succesors ===
next: v911 
=== Usages ===
v959 v102 j904 a934 
=== Predecessor ===
j953 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1106 lastLocationAccess: - #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid j904 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1086 
=== Succesors ===
=== Usages ===
j905 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1086  <|@  <|@
f <@~|@floating>@ <|@
tid j905 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [0 - 17179869180] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00
=== Inputs ===
x: j904 
y: i190 
=== Succesors ===
=== Usages ===
j941 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j904 y: i190  <|@  <|@
f <@~|@floating>@ <|@
tid j941 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [23 - 17179869203] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
=== Inputs ===
x: j905 
y: j791 
=== Succesors ===
=== Usages ===
j906 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j905 y: j791  <|@  <|@
f <@~|@floating>@ <|@
tid j906 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [0 - 17179869200] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j941 
y: j752 
=== Succesors ===
=== Usages ===
j907 v922 j942 v1172 v1173 v1174 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j941 y: j752  <|@  <|@
f <@~|@floating>@ <|@
tid j907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
=== Inputs ===
x: j906 
y: j952 
=== Succesors ===
=== Usages ===
v908 v954 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j906 y: j952  <|@  <|@
f <@~|@floating>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j953 
y: j907 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j953 y: j907  <|@  <|@
f <@*|@fixed>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v908 
=== Succesors ===
trueSuccessor: v910 
falseSuccessor: v909 
=== Usages ===
=== Predecessor ===
i1086 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v908 #trueSuccessor: v910 #falseSuccessor: v909  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a934 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a934  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a934 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v900 i1086 
=== Succesors ===
next: v1098 
=== Usages ===
v1098 a950 
=== Predecessor ===
v910 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v900 i1086 #next: v1098  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-247409|0xfffffffffffc398f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?6 
object: a934 
=== Succesors ===
next: v938 
=== Usages ===
=== Predecessor ===
a934 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?6 object: a934 #next: v938  <|@  <|@
f <@*|@fixed>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
v1098 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v954  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
lastLocationAccess: - 
value: j907 
stateAfter: - 
=== Succesors ===
next: v945 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1166 lastLocationAccess: - value: j907 stateAfter: - #next: v945  <|@  <|@
f <@~|@floating>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j906 
index: j952 
=== Succesors ===
=== Usages ===
v945 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j906 index: j952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
address: v1172 
=== Succesors ===
next: v947 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1172 #next: v947  <|@  <|@
f <@~|@floating>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j906 
index: j952 
=== Succesors ===
=== Usages ===
v947 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j906 index: j952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
address: v1173 
=== Succesors ===
next: v949 
=== Usages ===
=== Predecessor ===
v945 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1173 #next: v949  <|@  <|@
f <@~|@floating>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j906 
index: j952 
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j906 index: j952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
address: v1174 
=== Succesors ===
next: v955 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1174 #next: v955  <|@  <|@
f <@~|@floating>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j952 
index: - 
=== Succesors ===
=== Usages ===
v955 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j952 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1168 
lastLocationAccess: - 
value: j759 
stateAfter: - 
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1168 lastLocationAccess: - value: j759 stateAfter: - #next: v958  <|@  <|@
f <@~|@floating>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j952 
index: - 
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j952 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1175 
lastLocationAccess: - 
value: v1045 
stateAfter: - 
=== Succesors ===
next: v959 
=== Usages ===
=== Predecessor ===
v955 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1175 lastLocationAccess: - value: v1045 stateAfter: - #next: v959  <|@  <|@
f <@~|@floating>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j952 
index: - 
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j952 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1169 
lastLocationAccess: - 
value: i1086 
stateAfter: - 
=== Succesors ===
next: v917 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1169 lastLocationAccess: - value: i1086 stateAfter: - #next: v917  <|@  <|@
f <@~|@floating>@ <|@
tid j942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [-16 - 17179869184] bits:x...x000
=== Inputs ===
x: j906 
y: j793 
=== Succesors ===
=== Usages ===
v914 v918 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j906 y: j793  <|@  <|@
f <@~|@floating>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j942 
y: j796 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j942 y: j796  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v914 
=== Succesors ===
trueSuccessor: v916 
falseSuccessor: v915 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v914 #trueSuccessor: v916 #falseSuccessor: v915  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v919 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v919  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v916 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j921 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v920 
values: j192 j930 
=== Succesors ===
=== Usages ===
v922 v1170 j930 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v920 values: j192 j930  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v919 
=== Succesors ===
next: v928 
=== Usages ===
j921 v927 v931 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v919 #next: v928  <|@  <|@
f <@~|@floating>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j921 
y: j906 
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j921 y: j906  <|@  <|@
f <@*|@fixed>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v922 
=== Succesors ===
trueSuccessor: v923 
falseSuccessor: v927 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v922 #trueSuccessor: v923 #falseSuccessor: v927  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v960 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v960  <|@  <|@
f <@~|@floating>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j952 
index: j921 
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j952 index: j921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1170 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v931 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1170 lastLocationAccess: - value: j719 stateAfter: - #next: v931  <|@  <|@
f <@~|@floating>@ <|@
tid j930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
=== Inputs ===
x: j921 
y: j795 
=== Succesors ===
=== Usages ===
j921 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j921 y: j795  <|@  <|@
f <@*|@fixed>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v920 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v920  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v920 
=== Succesors ===
next: v926 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v920 #next: v926  <|@  <|@
f <@*|@fixed>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v925 
=== Predecessor ===
v927 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v918 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v918  <|@  <|@
f <@~|@floating>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j952 
index: - 
=== Succesors ===
=== Usages ===
v918 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j952 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1171 
lastLocationAccess: - 
length: j942 
=== Succesors ===
next: v924 
=== Usages ===
=== Predecessor ===
v915 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v1171 lastLocationAccess: - length: j942 #next: v924  <|@  <|@
f <@*|@fixed>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v925 
=== Predecessor ===
v918 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v924 v926 
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v924 v926 #next: v932  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a933 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a933 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j952 
=== Succesors ===
next: v936 
=== Usages ===
a950 
=== Predecessor ===
v932 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j952 #next: v936  <|@  <|@
f <@*|@fixed>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
a933 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v937 
values: a933 a934 
=== Succesors ===
=== Usages ===
a372 ?167 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v937 values: a933 a934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v936 v938 
=== Succesors ===
next: v121 
=== Usages ===
a950 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v936 v938 #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid i238 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647]
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
x: i50 
y: i238 
=== Succesors ===
=== Usages ===
v307 v121 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i50 y: i238  <|@  <|@
f <@~|@floating>@ <|@
tid i529 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i554 i552 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i419 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 v463 i551 i553 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:162) [bci: 10]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 v343 ?167 ?167 v203 v219 v195 v211 i296 i299 v390 v410 v434 v454 v477 v497 v519 v525 v541 v547 v567 v573 v580 v586 v611 v617 v624 v630 v638 v644 v650 v656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: PROFILED designatedSuccessorProbability: 0.04763539526237903
stamp: void
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v119 #falseSuccessor: v120  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
v119 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1056 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1056  <|@  <|@
f <@~|@floating>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i190 
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i51 y: i190  <|@  <|@
f <@*|@fixed>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v276 
=== Succesors ===
trueSuccessor: v1052 
falseSuccessor: v1055 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v276 #trueSuccessor: v1052 #falseSuccessor: v1055  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1050 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1050  <|@  <|@
f <@*|@fixed>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1049 
=== Predecessor ===
v1052 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1064 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1064  <|@  <|@
f <@~|@floating>@ <|@
tid i296 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
x: i51 
y: i17 
=== Succesors ===
=== Usages ===
j270 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i51 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid j270 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
value: i296 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i296  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j270 
y: j263 
=== Succesors ===
=== Usages ===
v1064 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j270 y: j263  <|@  <|@
f <@*|@fixed>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v271 
=== Succesors ===
trueSuccessor: v1063 
falseSuccessor: v1060 
=== Usages ===
=== Predecessor ===
v1055 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v271 #trueSuccessor: v1063 #falseSuccessor: v1060  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1051 
=== Usages ===
=== Predecessor ===
v1064 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1051  <|@  <|@
f <@*|@fixed>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1049 
=== Predecessor ===
v1063 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1050 v1051 
=== Succesors ===
next: v307 
=== Usages ===
v278 v413 v658 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1050 v1051 #next: v307  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v306 
falseSuccessor: v304 
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v306 #falseSuccessor: v304  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@~|@floating>@ <|@
tid i718 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
rawvalue: -61467
stableDimension: 0
stamp: i32 [-61467]
stampKind: i32
value: int[-61467|0xffffffffffff0fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
v306 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
v195 
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a807 
index: - 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v304 
address: v1107 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v58 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v304 address: v1107 lastLocationAccess: - value: i17 stateAfter: - #next: v58  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i419 
=== Succesors ===
=== Usages ===
i421 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i51 y: i419  <|@  <|@
f <@~|@floating>@ <|@
tid i421 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
condition: v420 
trueValue: i51 
falseValue: i190 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v420 trueValue: i51 falseValue: i190  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v195 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v59 
values: i28 i71 
=== Succesors ===
=== Usages ===
i71 v64 j242 i385 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v59 values: i28 i71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 68
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.992793163401544
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v58 
=== Succesors ===
next: v68 
=== Usages ===
i138 v65 v72 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v58 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i138 
y: i421 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i138 y: i421  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v67 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v67 #falseSuccessor: v65  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v203 
=== Usages ===
v278 
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
guards: v1049 v67 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1049 v67  <|@  <|@
f <@~|@floating>@ <|@
tid j242 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i138 
=== Succesors ===
=== Usages ===
v1108 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i138  <|@  <|@
f <@~|@floating>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j242 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v278 
address: v1108 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v278 address: v1108 lastLocationAccess: - value: i17 stateAfter: - #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid i71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i138 
y: i28 
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i138 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v59 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v59  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v59 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v59 #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16]
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i681 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i681 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i51 
y: i680 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i51 y: i680  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
v65 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v378 
values: i138 i677 
=== Succesors ===
=== Usages ===
v379 i383 j391 i405 i505 i551 i552 i593 i595 i597 i598 i665 i666 i668 i670 i672 i674 i676 i677 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v378 values: i138 i677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 59
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.992793163401544
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 16
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v394 
=== Succesors ===
next: v382 
=== Usages ===
v380 v384 i385 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v394 #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i385 
y: i681 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i385 y: i681  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.19971162262162956
stamp: void
=== Inputs ===
condition: v379 
=== Succesors ===
trueSuccessor: v381 
falseSuccessor: v380 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v379 #trueSuccessor: v381 #falseSuccessor: v380  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
v658 
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
guards: v1049 v381 
=== Succesors ===
=== Usages ===
v586 v611 v477 v617 v580 v624 v519 v630 v573 v638 v390 v644 v567 v650 v525 v656 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1049 v381  <|@  <|@
f <@~|@floating>@ <|@
tid j391 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i385 
=== Succesors ===
=== Usages ===
v1124 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i385  <|@  <|@
f <@~|@floating>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j391 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1124 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1124 lastLocationAccess: - value: i17 stateAfter: - #next: v477  <|@  <|@
f <@~|@floating>@ <|@
tid i383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i28 
=== Succesors ===
=== Usages ===
j478 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid j478 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i383 
=== Succesors ===
=== Usages ===
v1128 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i383  <|@  <|@
f <@~|@floating>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j478 
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1128 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v519 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1128 lastLocationAccess: - value: i17 stateAfter: - #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid i505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i190 
=== Succesors ===
=== Usages ===
j520 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i190  <|@  <|@
f <@~|@floating>@ <|@
tid j520 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i505 
=== Succesors ===
=== Usages ===
v1130 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i505  <|@  <|@
f <@~|@floating>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j520 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1130 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1130 lastLocationAccess: - value: i17 stateAfter: - #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid i551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i419 
=== Succesors ===
=== Usages ===
j526 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i419  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i551 
=== Succesors ===
=== Usages ===
v1131 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i551  <|@  <|@
f <@~|@floating>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j526 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1131 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1131 lastLocationAccess: - value: i17 stateAfter: - #next: v567  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i529 
=== Succesors ===
=== Usages ===
j568 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i529  <|@  <|@
f <@~|@floating>@ <|@
tid j568 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i552 
=== Succesors ===
=== Usages ===
v1134 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i552  <|@  <|@
f <@~|@floating>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j568 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1134 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1134 lastLocationAccess: - value: i17 stateAfter: - #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid i592 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i593 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i592 
=== Succesors ===
=== Usages ===
j574 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i592  <|@  <|@
f <@~|@floating>@ <|@
tid j574 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i593 
=== Succesors ===
=== Usages ===
v1135 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i593  <|@  <|@
f <@~|@floating>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j574 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1135 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1135 lastLocationAccess: - value: i17 stateAfter: - #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid i594 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 6
stableDimension: 0
stamp: i32 [6]
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i595 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i594 
=== Succesors ===
=== Usages ===
j581 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i594  <|@  <|@
f <@~|@floating>@ <|@
tid j581 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i595 
=== Succesors ===
=== Usages ===
v1136 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i595  <|@  <|@
f <@~|@floating>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j581 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j581  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1136 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1136 lastLocationAccess: - value: i17 stateAfter: - #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid i596 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i597 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i596 
=== Succesors ===
=== Usages ===
j587 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i596  <|@  <|@
f <@~|@floating>@ <|@
tid j587 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i597 
=== Succesors ===
=== Usages ===
v1137 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i597  <|@  <|@
f <@~|@floating>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j587 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j587  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1137 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1137 lastLocationAccess: - value: i17 stateAfter: - #next: v611  <|@  <|@
f <@~|@floating>@ <|@
tid i591 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i598 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i591 
=== Succesors ===
=== Usages ===
j612 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i591  <|@  <|@
f <@~|@floating>@ <|@
tid j612 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i598 
=== Succesors ===
=== Usages ===
v1138 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i598  <|@  <|@
f <@~|@floating>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j612 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1138 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1138 lastLocationAccess: - value: i17 stateAfter: - #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid i664 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
i665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i665 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i664 
=== Succesors ===
=== Usages ===
j618 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i664  <|@  <|@
f <@~|@floating>@ <|@
tid j618 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i665 
=== Succesors ===
=== Usages ===
v1139 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i665  <|@  <|@
f <@~|@floating>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j618 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1139 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1139 lastLocationAccess: - value: i17 stateAfter: - #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid i666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i36 
=== Succesors ===
=== Usages ===
j625 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid j625 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i666 
=== Succesors ===
=== Usages ===
v1140 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i666  <|@  <|@
f <@~|@floating>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j625 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j625  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1140 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1140 lastLocationAccess: - value: i17 stateAfter: - #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid i667 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 11
stableDimension: 0
stamp: i32 [11]
stampKind: i32
value: int[11|0xb]
=== Inputs ===
=== Succesors ===
=== Usages ===
i668 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i667 
=== Succesors ===
=== Usages ===
j631 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i667  <|@  <|@
f <@~|@floating>@ <|@
tid j631 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i668 
=== Succesors ===
=== Usages ===
v1141 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i668  <|@  <|@
f <@~|@floating>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j631 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1141 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1141 lastLocationAccess: - value: i17 stateAfter: - #next: v638  <|@  <|@
f <@~|@floating>@ <|@
tid i669 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 12
stableDimension: 0
stamp: i32 [12]
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i670 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i669 
=== Succesors ===
=== Usages ===
j639 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i669  <|@  <|@
f <@~|@floating>@ <|@
tid j639 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i670 
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i670  <|@  <|@
f <@~|@floating>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j639 
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1142 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1142 lastLocationAccess: - value: i17 stateAfter: - #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid i671 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 13
stableDimension: 0
stamp: i32 [13]
stampKind: i32
value: int[13|0xd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i671 
=== Succesors ===
=== Usages ===
j645 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i671  <|@  <|@
f <@~|@floating>@ <|@
tid j645 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i672 
=== Succesors ===
=== Usages ===
v1143 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i672  <|@  <|@
f <@~|@floating>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j645 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j645  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1143 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1143 lastLocationAccess: - value: i17 stateAfter: - #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid i673 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 14
stableDimension: 0
stamp: i32 [14]
stampKind: i32
value: int[14|0xe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i674 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i673 
=== Succesors ===
=== Usages ===
j651 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i673  <|@  <|@
f <@~|@floating>@ <|@
tid j651 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i674 
=== Succesors ===
=== Usages ===
v1144 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i674  <|@  <|@
f <@~|@floating>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j651 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1144 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1144 lastLocationAccess: - value: i17 stateAfter: - #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid i675 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 15
stableDimension: 0
stamp: i32 [15]
stampKind: i32
value: int[15|0xf]
=== Inputs ===
=== Succesors ===
=== Usages ===
i676 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i675 
=== Succesors ===
=== Usages ===
j657 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i675  <|@  <|@
f <@~|@floating>@ <|@
tid j657 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i676 
=== Succesors ===
=== Usages ===
v1145 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i676  <|@  <|@
f <@~|@floating>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j657 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j657  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1145 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1145 lastLocationAccess: - value: i17 stateAfter: - #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid i663 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i677 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i663 
=== Succesors ===
=== Usages ===
i385 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i663  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v378 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v378  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v378 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v378 #next: v414  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v380 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v398 
values: i385 i403 
=== Succesors ===
=== Usages ===
v399 i403 j411 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v398 values: i385 i403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 59
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.992793163401544
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v414 
=== Succesors ===
next: v402 
=== Usages ===
v400 v404 i405 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v414 #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i405 
y: i51 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i405 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v399 
=== Succesors ===
trueSuccessor: v401 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v399 #trueSuccessor: v401 #falseSuccessor: v400  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v410 
=== Usages ===
v413 
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
guards: v1049 v401 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1049 v401  <|@  <|@
f <@~|@floating>@ <|@
tid j411 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i405 
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i405  <|@  <|@
f <@~|@floating>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j411 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v413 
address: v1125 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v404 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v413 address: v1125 lastLocationAccess: - value: i17 stateAfter: - #next: v404  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i405 
y: i28 
=== Succesors ===
=== Usages ===
i405 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i405 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v398 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v398  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v398 
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v398 #next: v130  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
v400 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v130 v131 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v130 v131 #next: v143  <|@  <|@
tid a166 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.from int:12>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.to int:16>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.lookbehindTo int:20>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.acceptMode int:24>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.first int:28>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.last int:32>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.oldLast int:36>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.lastAppendPosition int:40>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.modCount int:44>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.hitEnd boolean:48>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.requireEnd boolean:49>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.transparentBounds boolean:50>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.anchoringBounds boolean:51>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.parentPattern Pattern:52>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.groups int[]:56>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.text CharSequence:60>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.locals int[]:64>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.localsPos IntHashSet[]:68>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.namedGroups Map:72>]
hasIdentity: true
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
objectId: 0
stamp: a!# java.util.regex.Matcher
type: HotSpotType<Ljava/util/regex/Matcher;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?135 ?159 ?167 ?157 ?137 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?167 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a166 
values: - - - - i17 - i17 - - - - - i28 a1 a807 a2 a878 a950 - 
=== Succesors ===
=== Usages ===
?137 ?159 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a166 values: - - - - i17 - i17 - - - - - i28 a1 a807 a2 a878 a950 -  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1085 
y: i7 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1085 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: PROFILED designatedSuccessorProbability: 0.14455854068526564
stamp: void
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v142 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v141 #falseSuccessor: v142  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v153  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1072 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1072  <|@  <|@
f <@~|@floating>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1085 
y: i190 
=== Succesors ===
=== Usages ===
v1072 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1085 y: i190  <|@  <|@
f <@*|@fixed>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v291 
=== Succesors ===
trueSuccessor: v1068 
falseSuccessor: v1071 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v291 #trueSuccessor: v1068 #falseSuccessor: v1071  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1066 
=== Usages ===
=== Predecessor ===
v1072 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1066  <|@  <|@
f <@*|@fixed>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
v1068 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1080 
=== Usages ===
=== Predecessor ===
v1072 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1080  <|@  <|@
f <@~|@floating>@ <|@
tid i299 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i1085 
y: i17 
=== Succesors ===
=== Usages ===
j285 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1085 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid j285 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i299 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i299  <|@  <|@
f <@~|@floating>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j285 
y: j279 
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j285 y: j279  <|@  <|@
f <@*|@fixed>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v286 
=== Succesors ===
trueSuccessor: v1079 
falseSuccessor: v1076 
=== Usages ===
=== Predecessor ===
v1071 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v286 #trueSuccessor: v1079 #falseSuccessor: v1076  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1067 
=== Usages ===
=== Predecessor ===
v1080 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1067  <|@  <|@
f <@*|@fixed>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
v1079 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1066 v1067 
=== Succesors ===
next: v211 
=== Usages ===
v293 v457 v549 v211 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1066 v1067 #next: v211  <|@  <|@
f <@~|@floating>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a878 
index: - 
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a878 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v1065 
address: v1109 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v1065 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1065 address: v1109 lastLocationAccess: - value: i17 stateAfter: - #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1085 
y: i419 
=== Succesors ===
=== Usages ===
i464 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1085 y: i419  <|@  <|@
f <@~|@floating>@ <|@
tid i464 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v463 
trueValue: i1085 
falseValue: i190 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v463 trueValue: i1085 falseValue: i190  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v211 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v74 
values: i28 i86 
=== Succesors ===
=== Usages ===
i86 v79 j246 i429 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v74 values: i28 i86  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 83
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.917612721182696
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v73 
=== Succesors ===
next: v83 
=== Usages ===
i160 v80 v87 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v73 #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i160 
y: i464 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i160 y: i464  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v79 
=== Succesors ===
trueSuccessor: v82 
falseSuccessor: v80 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v79 #trueSuccessor: v82 #falseSuccessor: v80  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v219 
=== Usages ===
v293 
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
guards: v1065 v82 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1065 v82  <|@  <|@
f <@~|@floating>@ <|@
tid j246 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i160 
=== Succesors ===
=== Usages ===
v1110 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i160  <|@  <|@
f <@~|@floating>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a878 
index: j246 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a878 index: j246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v293 
address: v1110 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v293 address: v1110 lastLocationAccess: - value: i17 stateAfter: - #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid i86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i160 
y: i28 
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i160 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v74 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v74  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid i683 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i32 [-4]
stampKind: i32
value: int[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i684 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i684 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i1085 
y: i683 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1085 y: i683  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
v80 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v422 
values: i160 i554 
=== Succesors ===
=== Usages ===
v423 i427 j435 i449 i506 i553 i554 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v422 values: i160 i554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 74
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.917612721182696
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 4
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v438 
=== Succesors ===
next: v426 
=== Usages ===
v424 v428 i429 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v438 #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i429 
y: i684 
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i429 y: i684  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.3240517437578174
stamp: void
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v425 
falseSuccessor: v424 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v425 #falseSuccessor: v424  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v434 
=== Usages ===
v549 
=== Predecessor ===
v426 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
guards: v1065 v425 
=== Succesors ===
=== Usages ===
v497 v541 v434 v547 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1065 v425  <|@  <|@
f <@~|@floating>@ <|@
tid j435 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i429 
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i429  <|@  <|@
f <@~|@floating>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a878 
index: j435 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a878 index: j435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v549 
address: v1126 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v549 address: v1126 lastLocationAccess: - value: i17 stateAfter: - #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid i427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i429 
y: i28 
=== Succesors ===
=== Usages ===
j498 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i429 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid j498 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i427 
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i427  <|@  <|@
f <@~|@floating>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a878 
index: j498 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a878 index: j498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v549 
address: v1129 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v549 address: v1129 lastLocationAccess: - value: i17 stateAfter: - #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid i506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i429 
y: i190 
=== Succesors ===
=== Usages ===
j542 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i429 y: i190  <|@  <|@
f <@~|@floating>@ <|@
tid j542 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i506 
=== Succesors ===
=== Usages ===
v1132 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i506  <|@  <|@
f <@~|@floating>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a878 
index: j542 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a878 index: j542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v549 
address: v1132 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v549 address: v1132 lastLocationAccess: - value: i17 stateAfter: - #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i429 
y: i419 
=== Succesors ===
=== Usages ===
j548 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i429 y: i419  <|@  <|@
f <@~|@floating>@ <|@
tid j548 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i553 
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i553  <|@  <|@
f <@~|@floating>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a878 
index: j548 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a878 index: j548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v549 
address: v1133 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v549 address: v1133 lastLocationAccess: - value: i17 stateAfter: - #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid i554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i429 
y: i529 
=== Succesors ===
=== Usages ===
i429 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i429 y: i529  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v422 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v422  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v422 
=== Succesors ===
next: v458 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v422 #next: v458  <|@  <|@
f <@*|@fixed>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
v424 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v442 
values: i429 i447 
=== Succesors ===
=== Usages ===
v443 i447 j455 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v442 values: i429 i447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 74
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.917612721182696
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v458 
=== Succesors ===
next: v446 
=== Usages ===
v444 v448 i449 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v458 #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i449 
y: i1085 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i449 y: i1085  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v443 
=== Succesors ===
trueSuccessor: v445 
falseSuccessor: v444 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v443 #trueSuccessor: v445 #falseSuccessor: v444  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v454 
=== Usages ===
v457 
=== Predecessor ===
v446 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
guards: v1065 v445 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1065 v445  <|@  <|@
f <@~|@floating>@ <|@
tid j455 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i449 
=== Succesors ===
=== Usages ===
v1127 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i449  <|@  <|@
f <@~|@floating>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a878 
index: j455 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a878 index: j455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v457 
address: v1127 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v457 address: v1127 lastLocationAccess: - value: i17 stateAfter: - #next: v448  <|@  <|@
f <@~|@floating>@ <|@
tid i447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i449 
y: i28 
=== Succesors ===
=== Usages ===
i449 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i449 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v442 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v442  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v442 
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v442 #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v444 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v152 v153 
=== Succesors ===
next: v1087 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v152 v153 #next: v1087  <|@  <|@
tid ?157 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<Pattern.matcher(CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Pattern.java
sourceLine: 1180
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a166 
=== Succesors ===
=== Usages ===
?158 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a166  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
bci: 90
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Matcher.java
sourceLine: 256
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?157 
=== Succesors ===
=== Usages ===
?159 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?157  <|@  <|@
tid ?159 <|@
d <@d|@=== Debug Properties ===
bci: 63
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 455
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?158 
values: a166 
virtualObjectMappings: ?167 
=== Succesors ===
=== Usages ===
v737 v1100 a994 v1087 i1089 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?158 values: a166 virtualObjectMappings: ?167  <|@  <|@
f <@~|@floating>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1087 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-57099|0xffffffffffff20f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?159 
guard: - 
address: v1176 
lastLocationAccess: - 
=== Succesors ===
next: v323 
=== Usages ===
v1047 
=== Predecessor ===
v151 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?159 guard: - address: v1176 lastLocationAccess: - #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1047 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1087 
y: v1046 
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1087 y: v1046  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1047 
=== Succesors ===
trueSuccessor: v320 
falseSuccessor: v322 
=== Usages ===
=== Predecessor ===
v1087 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1047 #trueSuccessor: v320 #falseSuccessor: v322  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1088 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1088  <|@  <|@
f <@~|@floating>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1088 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1088 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1111 
lastLocationAccess: - 
=== Succesors ===
next: i1089 
=== Usages ===
v1112 
=== Predecessor ===
v320 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1111 lastLocationAccess: - #next: i1089  <|@  <|@
f <@~|@floating>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1088 
=== Succesors ===
=== Usages ===
i1089 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1088  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1089 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-58635|0xffffffffffff1af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?159 
guard: - 
address: v1112 
lastLocationAccess: - 
=== Succesors ===
next: v338 
=== Usages ===
i113 
=== Predecessor ===
a1088 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?159 guard: - address: v1112 lastLocationAccess: - #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1086 
y: i7 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1086 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v102 
=== Succesors ===
trueSuccessor: v336 
falseSuccessor: v337 
=== Usages ===
=== Predecessor ===
i1089 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v102 #trueSuccessor: v336 #falseSuccessor: v337  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:459) [bci: 98]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1042 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: j983 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j983  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j983 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1017 
=== Usages ===
v1177 v1178 
=== Predecessor ===
v1042 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1017  <|@  <|@
f <@~|@floating>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j983 
index: - 
=== Succesors ===
=== Usages ===
j1017 v1019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j983 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1017 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
lastLocationAccess: - 
=== Succesors ===
next: j1018 
=== Usages ===
j986 v1179 v1180 a993 v1181 v1182 v1183 v1184 v1185 v1186 v1187 v1188 v1189 v1190 
=== Predecessor ===
j983 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1177 lastLocationAccess: - #next: j1018  <|@  <|@
f <@~|@floating>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j983 
index: - 
=== Succesors ===
=== Usages ===
j1018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j983 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1018 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1178 
lastLocationAccess: - 
=== Succesors ===
next: v990 
=== Usages ===
v987 
=== Predecessor ===
j1017 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1178 lastLocationAccess: - #next: v990  <|@  <|@
f <@~|@floating>@ <|@
tid j982 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
rawvalue: 80
stableDimension: 0
stamp: i64 [80]
stampKind: i64
value: long[80|0x50]
=== Inputs ===
=== Succesors ===
=== Usages ===
j986 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: i64
=== Inputs ===
x: j1017 
y: j982 
=== Succesors ===
=== Usages ===
v987 v1019 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1017 y: j982  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1018 
y: j986 
=== Succesors ===
=== Usages ===
v990 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j1018 y: j986  <|@  <|@
f <@*|@fixed>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v987 
=== Succesors ===
trueSuccessor: v989 
falseSuccessor: v988 
=== Usages ===
=== Predecessor ===
j1018 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v987 #trueSuccessor: v989 #falseSuccessor: v988  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a994 
=== Usages ===
=== Predecessor ===
v990 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a994  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
rawvalue: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a994 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a994 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?159 
arguments: v981 
=== Succesors ===
next: v1100 
=== Usages ===
v1100 a1015 
=== Predecessor ===
v989 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?159 arguments: v981 #next: v1100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-265841|0xfffffffffffbf18f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?159 
object: a994 
=== Succesors ===
next: v998 
=== Usages ===
=== Predecessor ===
a994 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?159 object: a994 #next: v998  <|@  <|@
f <@*|@fixed>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
v1100 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1019 
=== Usages ===
=== Predecessor ===
v990 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1019  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
lastLocationAccess: - 
value: j986 
stateAfter: - 
=== Succesors ===
next: v1001 
=== Usages ===
=== Predecessor ===
v988 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1177 lastLocationAccess: - value: j986 stateAfter: - #next: v1001  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
displacement: 336
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
=== Inputs ===
address: v1181 
=== Succesors ===
next: v1020 
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1181 #next: v1020  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1020 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1179 
lastLocationAccess: - 
value: j759 
stateAfter: - 
=== Succesors ===
next: v1023 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1179 lastLocationAccess: - value: j759 stateAfter: - #next: v1023  <|@  <|@
f <@~|@floating>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
rawvalue: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1190 
lastLocationAccess: - 
value: v1048 
stateAfter: - 
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
v1020 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1190 lastLocationAccess: - value: v1048 stateAfter: - #next: v1024  <|@  <|@
f <@~|@floating>@ <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1180 
lastLocationAccess: - 
value: i7 
stateAfter: - 
=== Succesors ===
next: v1025 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1180 lastLocationAccess: - value: i7 stateAfter: - #next: v1025  <|@  <|@
f <@~|@floating>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1025 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1182 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v1026 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1182 lastLocationAccess: - value: j719 stateAfter: - #next: v1026  <|@  <|@
f <@~|@floating>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1026 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1183 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v1027 
=== Usages ===
=== Predecessor ===
v1025 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1183 lastLocationAccess: - value: j719 stateAfter: - #next: v1027  <|@  <|@
f <@~|@floating>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1184 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v1026 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1184 lastLocationAccess: - value: j719 stateAfter: - #next: v1028  <|@  <|@
f <@~|@floating>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1185 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v1029 
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1185 lastLocationAccess: - value: j719 stateAfter: - #next: v1029  <|@  <|@
f <@~|@floating>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1029 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1186 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v1030 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1186 lastLocationAccess: - value: j719 stateAfter: - #next: v1030  <|@  <|@
f <@~|@floating>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1030 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1187 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v1031 
=== Usages ===
=== Predecessor ===
v1029 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1187 lastLocationAccess: - value: j719 stateAfter: - #next: v1031  <|@  <|@
f <@~|@floating>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1031 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1188 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v1032 
=== Usages ===
=== Predecessor ===
v1030 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1188 lastLocationAccess: - value: j719 stateAfter: - #next: v1032  <|@  <|@
f <@~|@floating>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1189 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: a993 
=== Usages ===
=== Predecessor ===
v1031 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1189 lastLocationAccess: - value: j719 stateAfter: - #next: a993  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a993 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j1017 
=== Succesors ===
next: v996 
=== Usages ===
a1015 
=== Predecessor ===
v1032 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j1017 #next: v996  <|@  <|@
f <@*|@fixed>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
a993 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1015 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v997 
values: a993 a994 
=== Succesors ===
=== Usages ===
v1123 a374 v1114 v1115 v1116 v1117 v1118 v1119 v1120 v1121 v1122 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v997 values: a993 a994  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v996 v998 
=== Succesors ===
next: v373 
=== Usages ===
a1015 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v996 v998 #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S1
=== Inputs ===
base: a1015 
index: - 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a372 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
op: Compress
stamp: n!# java.util.regex.IntHashSet[]
=== Inputs ===
value: a950 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1123 
lastLocationAccess: - 
value: a372 
stateAfter: - 
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v997 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1123 lastLocationAccess: - value: a372 stateAfter: - #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: a1015 
index: - 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a368 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
op: Compress
stamp: n!# int[]
=== Inputs ===
value: a878 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1122 
lastLocationAccess: - 
value: a368 
stateAfter: - 
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1122 lastLocationAccess: - value: a368 stateAfter: - #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S1
=== Inputs ===
base: a1015 
index: - 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a364 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1121 
lastLocationAccess: - 
value: a364 
stateAfter: - 
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1121 lastLocationAccess: - value: a364 stateAfter: - #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: a1015 
index: - 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a360 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
op: Compress
stamp: n!# int[]
=== Inputs ===
value: a807 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1120 
lastLocationAccess: - 
value: a360 
stateAfter: - 
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1120 lastLocationAccess: - value: a360 stateAfter: - #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S1
=== Inputs ===
base: a1015 
index: - 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a356 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
op: Compress
stamp: n!# java.util.regex.Pattern
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1119 
lastLocationAccess: - 
value: a356 
stateAfter: - 
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1119 lastLocationAccess: - value: a356 stateAfter: - #next: v353  <|@  <|@
f <@~|@floating>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
displacement: 51
stamp: void*
stride: S1
=== Inputs ===
base: a1015 
index: - 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i376 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
rawvalue: 1
stableDimension: 0
stamp: i8 [1]
stampKind: i8
value: byte[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1118 
lastLocationAccess: - 
value: i376 
stateAfter: - 
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1118 lastLocationAccess: - value: i376 stateAfter: - #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a1015 
index: - 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1117 
lastLocationAccess: - 
value: i28 
stateAfter: - 
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1117 lastLocationAccess: - value: i28 stateAfter: - #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1015 
index: - 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1116 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1116 lastLocationAccess: - value: i17 stateAfter: - #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1015 
index: - 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1115 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: i1090 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1115 lastLocationAccess: - value: i17 stateAfter: - #next: i1090  <|@  <|@
f <@~|@floating>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1090 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1090 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1113 
lastLocationAccess: - 
=== Succesors ===
next: v341 
=== Usages ===
i235 
=== Predecessor ===
v343 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1113 lastLocationAccess: - #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1015 
index: - 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1090 
=== Succesors ===
=== Usages ===
i113 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1090  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1089 
y: i235 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1089 y: i235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1114 
lastLocationAccess: - 
value: i113 
stateAfter: - 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
i1090 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1114 lastLocationAccess: - value: i113 stateAfter: - #next: v375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at java.util.regex.Pattern.matcher(CharSequence) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a374 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(CharSequence) [bci: -6] Placeholder
stamp: a!# java.util.regex.Matcher
=== Inputs ===
object: a1015 
=== Succesors ===
next: v14 
=== Usages ===
v14 
=== Predecessor ===
v375 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1015 #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1181) [bci: 43]
stamp: void
=== Inputs ===
memoryMap: - 
result: a374 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a374 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a374  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i744 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: -85779
stableDimension: 0
stamp: i32 [-85779]
stampKind: i32
value: int[-85779|0xfffffffffffeb0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i735 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
v337 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid j742 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i741 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: -57395
stableDimension: 0
stamp: i32 [-57395]
stampKind: i32
value: int[-57395|0xffffffffffff1fcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i735 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
v322 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32 [-85779 - -57395] bits:1...1xx0x1xxxx11x01101
valueDescription: i32
=== Inputs ===
merge: v732 
values: i741 i744 
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v732 values: i741 i744  <|@  <|@
f <@~|@floating>@ <|@
tid j736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [660 - 1300] bits:0...0xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v732 
values: j742 j745 
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v732 values: j742 j745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v740 v743 
=== Succesors ===
next: v737 
=== Usages ===
i735 j736 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v740 v743 #next: v737  <|@  <|@
f <@*|@fixed>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateBefore: ?159 
actionAndReason: i735 
speculation: j736 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v732 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?159 actionAndReason: i735 speculation: j736  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1092 
=== Usages ===
=== Predecessor ===
v1080 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1092  <|@  <|@
tid ?135 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<Pattern.matcher(CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Pattern.java
sourceLine: 1180
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a166 
=== Succesors ===
=== Usages ===
?136 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a166  <|@  <|@
tid ?136 <|@
d <@d|@=== Debug Properties ===
bci: 90
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Matcher.java
sourceLine: 256
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?135 
=== Succesors ===
=== Usages ===
?137 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?135  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 39
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 453
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?136 
values: a166 
virtualObjectMappings: ?167 
=== Succesors ===
=== Usages ===
v1092 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?136 values: a166 virtualObjectMappings: ?167  <|@  <|@
f <@*|@fixed>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 213
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
reason: BoundsCheckException
speculation: {0x0000000000000a98[index: 84, len: 24, hash: 0x2f363014]: GuardMovement@3[HotSpotMethod<Matcher.reset()>, 41, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?137 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?137  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v720 
=== Usages ===
=== Predecessor ===
v1064 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid j722 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
rawvalue: 1944
stableDimension: 0
stamp: i64 [1944]
stampKind: i64
value: long[1944|0x798]
=== Inputs ===
=== Succesors ===
=== Usages ===
j715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i721 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
rawvalue: -50459
stableDimension: 0
stamp: i32 [-50459]
stampKind: i32
value: int[-50459|0xffffffffffff3ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
v1060 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stamp: i32 [-84243 - -50459] bits:1...1xx0xxxx1x1110x101
valueDescription: i32
=== Inputs ===
merge: v711 
values: i713 i718 i721 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v711 values: i713 i718 i721  <|@  <|@
f <@~|@floating>@ <|@
tid j715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stamp: i64 [0 - 1944] bits:0...0xxxx00xxx00
valueDescription: i64
=== Inputs ===
merge: v711 
values: j180 j719 j722 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v711 values: j180 j719 j722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v712 v717 v720 
=== Succesors ===
next: v716 
=== Usages ===
i714 j715 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v712 v717 v720 #next: v716  <|@  <|@
f <@*|@fixed>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i714 
speculation: j715 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i714 speculation: j715  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVZXB input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v5|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v7|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHL x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v4|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA address: [v12|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v17|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + v17|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA address: [v26|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = AND x: v27|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = ADD (x: v28|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v23|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD + 12], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v28|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: v32|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + v32|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA address: [v32|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = SHL x: v40|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v38|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVSXD value: v53|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v54|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v8|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v55|DWORD, y: v56|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v56|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = LEA address: [v8|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|DWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v59|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v59|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v60|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = LEA address: [v59|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v61|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = LEA address: [v59|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v62|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = LEA address: [v59|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v63|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = LEA address: [v59|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v64|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = LEA address: [v59|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v65|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v59|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v66|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = LEA address: [v59|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v67|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v59|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v68|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = LEA address: [v59|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v69|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = LEA address: [v59|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v70|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = LEA address: [v59|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v71|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = LEA address: [v59|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v72|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = LEA address: [v59|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v73|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = LEA address: [v59|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v74|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = LEA address: [v59|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v76|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v76|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC value: v76|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v77|DWORD] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVSXD value: v78|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v79|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v24|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v24|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = LEA address: [v24|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v83|DWORD, y: v84|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v84|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v84|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v84|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v88|DWORD] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v84|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|DWORD, y: v89|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = INC value: v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction v92|DWORD = MOV input: [v91|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = LEA address: [v93|QWORD + 80] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v94|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v93|QWORD + 336] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v93|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v98|QWORD[.]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[_] = COMPRESSPOINTER (input: v52|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 68], y: v100|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v36|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 64], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 60], y: v102|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 56], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 52], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v99|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SHR (x: v92|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 16], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v95|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [v96|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v30|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v37|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v3|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v22|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-57395|0xffffffffffff1fcd], long[1300|0x514]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85779|0xfffffffffffeb0ed], long[660|0x294]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|DWORD, v108|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61467|0xffffffffffff0fe5], long[0|0x0]] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50459|0xffffffffffff3ae5], long[1944|0x798]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD, v110|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i172 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i172  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Pattern
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1104 v1103 ?6 v1105 a356 ?167 v1106 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1103 <|@
result [v0|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i172 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.compiled
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 1]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1103 
lastLocationAccess: - 
=== Succesors ===
next: v332 
=== Usages ===
i173 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1103 lastLocationAccess: - #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 1]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i172 
=== Succesors ===
=== Usages ===
v8 ?6 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i172  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
v1111 ?6 ?167 a364 v1113 v1176 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: ifne
code: ResolvedJavaMethodBytecode<Pattern.matcher(CharSequence)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 1]
sourceFile: Pattern.java
sourceLine: 1174
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i173 a1 a2 
=== Succesors ===
=== Usages ===
v716 v1094 v1096 v1098 a782 a862 a934 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i173 a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 v163 v1024 v102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i173 
y: i7 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i173 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v330 
falseSuccessor: v331 
=== Usages ===
=== Predecessor ===
i172 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v330 #falseSuccessor: v331  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVZXB input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid j180 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 80]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i713 <|@
result int[-84243|0xfffffffffffeb6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
rawvalue: -84243
stableDimension: 0
stamp: i32 [-84243]
stampKind: i32
value: int[-84243|0xfffffffffffeb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
v330 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v827 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: j747 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j747 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j809 
=== Usages ===
v1146 v1147 
=== Predecessor ===
v827 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j809  <|@  <|@
f <@~|@floating>@ <|@
tid v1146 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j747 
index: - 
=== Succesors ===
=== Usages ===
j809 v811 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j747 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j809 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1146 
lastLocationAccess: - 
=== Succesors ===
next: j810 
=== Usages ===
j754 v1148 v1149 v1150 a781 v1151 v1155 v1152 v1153 v1154 
=== Predecessor ===
j747 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1146 lastLocationAccess: - #next: j810  <|@  <|@
f <@~|@floating>@ <|@
tid v1147 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j747 
index: - 
=== Succesors ===
=== Usages ===
j810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j747 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j810 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1147 
lastLocationAccess: - 
=== Succesors ===
next: i1084 
=== Usages ===
v755 
=== Predecessor ===
j809 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1147 lastLocationAccess: - #next: i1084  <|@  <|@
f <@~|@floating>@ <|@
tid v1104 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1084 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1084 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.capturingGroupCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 50]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1104 
lastLocationAccess: - 
=== Succesors ===
next: v758 
=== Usages ===
v37 i50 
=== Predecessor ===
j810 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1104 lastLocationAccess: - #next: v758  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 53]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 10
stableDimension: 0
stamp: i32 [10]
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 i50 i666 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1084 
y: i36 
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1084 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32 [10 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v37 
trueValue: i36 
falseValue: i1084 
=== Succesors ===
=== Usages ===
i51 v239 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v37 trueValue: i36 falseValue: i1084  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:227) [bci: 35]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
?167 i51 i71 i86 v349 i138 i160 i383 i403 i427 i447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 62]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i50 
y: i28 
=== Succesors ===
=== Usages ===
v816 v420 i681 j263 v399 a782 i421 v276 i296 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i50 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i51 
=== Succesors ===
=== Usages ===
v271 j751 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i51  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i506 j751 j905 v276 j833 v291 i464 i505 i421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j751 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [0 - 17179869176] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j263 
y: i190 
=== Succesors ===
=== Usages ===
j792 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j263 y: i190  <|@  <|@
f <@~|@floating>@ <|@
tid j791 <|@
result long[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j792 j869 j941 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j792 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [23 - 17179869199] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx111
=== Inputs ===
x: j751 
y: j791 
=== Succesors ===
=== Usages ===
j753 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j751 y: j791  <|@  <|@
f <@~|@floating>@ <|@
tid j752 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j753 j834 j906 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j753 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [0 - 17179869192] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j792 
y: j752 
=== Succesors ===
=== Usages ===
j754 v770 j794 v1152 v1153 v1154 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j792 y: j752  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
=== Inputs ===
x: j753 
y: j809 
=== Succesors ===
=== Usages ===
v755 v811 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j753 y: j809  <|@  <|@
f <@~|@floating>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j810 
y: j754 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j810 y: j754  <|@  <|@
f <@~|@floating>@ <|@
tid j795 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:205) [bci: 57]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:184) [bci: 167]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j778 j930 j858 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j719 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j715 v1032 v1030 v1031 v1029 v817 v1028 v888 v1027 v960 v1026 v1025 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j192 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j921 j849 j769 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j793 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j794 j870 j942 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j796 <|@
result long[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v762 v842 v914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1044 <|@
result meta{HotSpotType<[I, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v815 v886 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j759 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 v883 v955 v1020 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a782 a862 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v755 
=== Succesors ===
trueSuccessor: v757 
falseSuccessor: v756 
=== Usages ===
=== Predecessor ===
i1084 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v755 #trueSuccessor: v757 #falseSuccessor: v756  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v5|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v7|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHL x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v4|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a782 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a782  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a782 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v746 i51 
=== Succesors ===
next: v1094 
=== Usages ===
v1094 a807 
=== Predecessor ===
v757 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v746 i51 #next: v1094  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-210801|0xfffffffffffcc88f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?6 
object: a782 
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
a782 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?6 object: a782 #next: v786  <|@  <|@
f <@*|@fixed>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
v1094 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v811 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1146 
lastLocationAccess: - 
value: j754 
stateAfter: - 
=== Succesors ===
next: v799 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1146 lastLocationAccess: - value: j754 stateAfter: - #next: v799  <|@  <|@
f <@~|@floating>@ <|@
tid v1152 <|@
result [v12|QWORD + v3|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j753 
index: j809 
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j753 index: j809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
address: v1152 
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v811 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1152 #next: v802  <|@  <|@
f <@~|@floating>@ <|@
tid v1153 <|@
result [v12|QWORD + v3|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j753 
index: j809 
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j753 index: j809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
address: v1153 
=== Succesors ===
next: v805 
=== Usages ===
=== Predecessor ===
v799 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1153 #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid v1154 <|@
result [v12|QWORD + v3|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j753 
index: j809 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j753 index: j809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
address: v1154 
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1154 #next: v812  <|@  <|@
f <@~|@floating>@ <|@
tid v1148 <|@
result [v3|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j809 
index: - 
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j809 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1148 
lastLocationAccess: - 
value: j759 
stateAfter: - 
=== Succesors ===
next: v815 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1148 lastLocationAccess: - value: j759 stateAfter: - #next: v815  <|@  <|@
f <@~|@floating>@ <|@
tid v1155 <|@
result [v3|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j809 
index: - 
=== Succesors ===
=== Usages ===
v815 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j809 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1155 
lastLocationAccess: - 
value: v1044 
stateAfter: - 
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1155 lastLocationAccess: - value: v1044 stateAfter: - #next: v816  <|@  <|@
f <@~|@floating>@ <|@
tid v1149 <|@
result [v3|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j809 
index: - 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j809 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1149 
lastLocationAccess: - 
value: i51 
stateAfter: - 
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1149 lastLocationAccess: - value: i51 stateAfter: - #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid j794 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [-16 - 17179869176] bits:x...x000
=== Inputs ===
x: j753 
y: j793 
=== Succesors ===
=== Usages ===
v762 v766 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j753 y: j793  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j794 
y: j796 
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j794 y: j796  <|@  <|@
f <@*|@fixed>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v764 
falseSuccessor: v763 
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v764 #falseSuccessor: v763  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA address: [v12|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v767 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v767  <|@  <|@
f <@*|@fixed>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
v764 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j769 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v768 
values: j192 j778 
=== Succesors ===
=== Usages ===
v770 v1150 j778 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v768 values: j192 j778  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v767 
=== Succesors ===
next: v776 
=== Usages ===
j769 v775 v779 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v767 #next: v776  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j769 
y: j753 
=== Succesors ===
=== Usages ===
v776 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j769 y: j753  <|@  <|@
f <@*|@fixed>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v770 
=== Succesors ===
trueSuccessor: v771 
falseSuccessor: v775 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v770 #trueSuccessor: v771 #falseSuccessor: v775  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v17|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v817 
=== Usages ===
=== Predecessor ===
v776 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v817  <|@  <|@
f <@~|@floating>@ <|@
tid v1150 <|@
result [v3|QWORD + v17|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j809 
index: j769 
=== Succesors ===
=== Usages ===
v817 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j809 index: j769  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1150 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1150 lastLocationAccess: - value: j719 stateAfter: - #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid j778 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
=== Inputs ===
x: j769 
y: j795 
=== Succesors ===
=== Usages ===
j769 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j769 y: j795  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v768 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v817 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v768  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + v17|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v768 
=== Succesors ===
next: v774 
=== Usages ===
=== Predecessor ===
v776 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v768 #next: v774  <|@  <|@
f <@*|@fixed>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
v775 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v766  <|@  <|@
f <@~|@floating>@ <|@
tid v1151 <|@
result [v3|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j809 
index: - 
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j809 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1151 
lastLocationAccess: - 
length: j794 
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v1151 lastLocationAccess: - length: j794 #next: v772  <|@  <|@
f <@*|@fixed>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
v766 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v3|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v772 v774 
=== Succesors ===
next: v780 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v772 v774 #next: v780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a781 
=== Usages ===
=== Predecessor ===
v773 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a781 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j809 
=== Succesors ===
next: v784 
=== Usages ===
a807 
=== Predecessor ===
v780 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j809 #next: v784  <|@  <|@
f <@*|@fixed>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
a781 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a807 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v785 
values: a781 a782 
=== Succesors ===
=== Usages ===
v1144 v1145 a360 ?167 v1108 v1107 v1124 v1125 v1128 v1130 v1131 v1134 v1135 v1136 v1137 v1138 v1139 v1140 v1141 v1142 v1143 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v785 values: a781 a782  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v784 v786 
=== Succesors ===
next: v898 
=== Usages ===
a807 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v784 v786 #next: v898  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: j829 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j829 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j880 
=== Usages ===
v1156 v1157 
=== Predecessor ===
v898 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j880  <|@  <|@
f <@~|@floating>@ <|@
tid v1156 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j829 
index: - 
=== Succesors ===
=== Usages ===
j880 v882 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j829 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j880 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1156 
lastLocationAccess: - 
=== Succesors ===
next: j881 
=== Usages ===
j835 v1158 v1159 v1160 a861 v1161 v1165 v1162 v1163 v1164 
=== Predecessor ===
j829 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1156 lastLocationAccess: - #next: j881  <|@  <|@
f <@~|@floating>@ <|@
tid v1157 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j829 
index: - 
=== Succesors ===
=== Usages ===
j881 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j829 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j881 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1157 
lastLocationAccess: - 
=== Succesors ===
next: i1085 
=== Usages ===
v836 
=== Predecessor ===
j880 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1157 lastLocationAccess: - #next: i1085  <|@  <|@
f <@~|@floating>@ <|@
tid v1105 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1085 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1085 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.localCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 70]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1105 
lastLocationAccess: - 
=== Succesors ===
next: v839 
=== Usages ===
v887 v291 i684 v463 j279 v443 a862 i464 v163 i299 
=== Predecessor ===
j881 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1105 lastLocationAccess: - #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid j279 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1085 
=== Succesors ===
=== Usages ===
v286 j833 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1085  <|@  <|@
f <@~|@floating>@ <|@
tid j833 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [0 - 17179869180] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00
=== Inputs ===
x: j279 
y: i190 
=== Succesors ===
=== Usages ===
j869 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j279 y: i190  <|@  <|@
f <@~|@floating>@ <|@
tid j869 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [23 - 17179869203] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
=== Inputs ===
x: j833 
y: j791 
=== Succesors ===
=== Usages ===
j834 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j833 y: j791  <|@  <|@
f <@~|@floating>@ <|@
tid j834 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [0 - 17179869200] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j869 
y: j752 
=== Succesors ===
=== Usages ===
j835 v850 j870 v1162 v1163 v1164 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j869 y: j752  <|@  <|@
f <@~|@floating>@ <|@
tid j835 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
=== Inputs ===
x: j834 
y: j880 
=== Succesors ===
=== Usages ===
v836 v882 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j834 y: j880  <|@  <|@
f <@~|@floating>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j881 
y: j835 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j881 y: j835  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v836 
=== Succesors ===
trueSuccessor: v838 
falseSuccessor: v837 
=== Usages ===
=== Predecessor ===
i1085 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v836 #trueSuccessor: v838 #falseSuccessor: v837  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA address: [v26|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = AND x: v27|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = ADD (x: v28|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v23|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a862 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a862 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v746 i1085 
=== Succesors ===
next: v1096 
=== Usages ===
v1096 a878 
=== Predecessor ===
v838 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v746 i1085 #next: v1096  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-228977|0xfffffffffffc818f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?6 
object: a862 
=== Succesors ===
next: v866 
=== Usages ===
=== Predecessor ===
a862 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?6 object: a862 #next: v866  <|@  <|@
f <@*|@fixed>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
v1096 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v30|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v882 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1156 
lastLocationAccess: - 
value: j835 
stateAfter: - 
=== Succesors ===
next: v873 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1156 lastLocationAccess: - value: j835 stateAfter: - #next: v873  <|@  <|@
f <@~|@floating>@ <|@
tid v1162 <|@
result [v28|QWORD + v22|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j834 
index: j880 
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: j880  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
address: v1162 
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v882 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1162 #next: v875  <|@  <|@
f <@~|@floating>@ <|@
tid v1163 <|@
result [v28|QWORD + v22|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j834 
index: j880 
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: j880  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
address: v1163 
=== Succesors ===
next: v877 
=== Usages ===
=== Predecessor ===
v873 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1163 #next: v877  <|@  <|@
f <@~|@floating>@ <|@
tid v1164 <|@
result [v28|QWORD + v22|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j834 
index: j880 
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: j880  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
address: v1164 
=== Succesors ===
next: v883 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1164 #next: v883  <|@  <|@
f <@~|@floating>@ <|@
tid v1158 <|@
result [v22|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j880 
index: - 
=== Succesors ===
=== Usages ===
v883 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1158 
lastLocationAccess: - 
value: j759 
stateAfter: - 
=== Succesors ===
next: v886 
=== Usages ===
=== Predecessor ===
v877 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1158 lastLocationAccess: - value: j759 stateAfter: - #next: v886  <|@  <|@
f <@~|@floating>@ <|@
tid v1165 <|@
result [v22|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j880 
index: - 
=== Succesors ===
=== Usages ===
v886 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1165 
lastLocationAccess: - 
value: v1044 
stateAfter: - 
=== Succesors ===
next: v887 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1165 lastLocationAccess: - value: v1044 stateAfter: - #next: v887  <|@  <|@
f <@~|@floating>@ <|@
tid v1159 <|@
result [v22|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j880 
index: - 
=== Succesors ===
=== Usages ===
v887 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1159 
lastLocationAccess: - 
value: i1085 
stateAfter: - 
=== Succesors ===
next: v845 
=== Usages ===
=== Predecessor ===
v886 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1159 lastLocationAccess: - value: i1085 stateAfter: - #next: v845  <|@  <|@
f <@~|@floating>@ <|@
tid j870 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [-16 - 17179869184] bits:x...x000
=== Inputs ===
x: j834 
y: j793 
=== Succesors ===
=== Usages ===
v842 v846 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j834 y: j793  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j870 
y: j796 
=== Succesors ===
=== Usages ===
v845 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j870 y: j796  <|@  <|@
f <@*|@fixed>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v842 
=== Succesors ===
trueSuccessor: v844 
falseSuccessor: v843 
=== Usages ===
=== Predecessor ===
v887 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v842 #trueSuccessor: v844 #falseSuccessor: v843  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD + 12], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v28|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v847 
=== Usages ===
=== Predecessor ===
v845 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v847  <|@  <|@
f <@*|@fixed>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
v844 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j849 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v848 
values: j192 j858 
=== Succesors ===
=== Usages ===
v850 v1160 j858 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v848 values: j192 j858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v847 
=== Succesors ===
next: v856 
=== Usages ===
j849 v855 v859 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v847 #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j849 
y: j834 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j849 y: j834  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v850 
=== Succesors ===
trueSuccessor: v851 
falseSuccessor: v855 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v850 #trueSuccessor: v851 #falseSuccessor: v855  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: v32|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v888 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v888  <|@  <|@
f <@~|@floating>@ <|@
tid v1160 <|@
result [v22|QWORD + v32|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j880 
index: j849 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: j849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1160 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1160 lastLocationAccess: - value: j719 stateAfter: - #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid j858 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
=== Inputs ===
x: j849 
y: j795 
=== Succesors ===
=== Usages ===
j849 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j849 y: j795  <|@  <|@
f <@*|@fixed>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v848 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v848  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + v32|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA address: [v32|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v848 
=== Succesors ===
next: v854 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v848 #next: v854  <|@  <|@
f <@*|@fixed>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v855 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v846 
=== Usages ===
=== Predecessor ===
v845 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v846  <|@  <|@
f <@~|@floating>@ <|@
tid v1161 <|@
result [v22|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j880 
index: - 
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1161 
lastLocationAccess: - 
length: j870 
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v843 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v1161 lastLocationAccess: - length: j870 #next: v852  <|@  <|@
f <@*|@fixed>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v846 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v22|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v852 v854 
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v852 v854 #next: v860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a861 
=== Usages ===
=== Predecessor ===
v853 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a861 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j880 
=== Succesors ===
next: v864 
=== Usages ===
a878 
=== Predecessor ===
v860 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j880 #next: v864  <|@  <|@
f <@*|@fixed>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
a861 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a878 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v865 
values: a861 a862 
=== Succesors ===
=== Usages ===
v1132 v1133 a368 ?167 v1109 v1110 v1126 v1127 v1129 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v865 values: a861 a862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v864 v866 
=== Succesors ===
next: v970 
=== Usages ===
a878 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v864 v866 #next: v970  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: j901 
=== Usages ===
=== Predecessor ===
v865 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j901 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j952 
=== Usages ===
v1166 v1167 
=== Predecessor ===
v970 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j952  <|@  <|@
f <@~|@floating>@ <|@
tid v1166 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j901 
index: - 
=== Succesors ===
=== Usages ===
j952 v954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j901 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j952 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
lastLocationAccess: - 
=== Succesors ===
next: j953 
=== Usages ===
j907 v1168 v1169 v1170 a933 v1171 v1175 v1172 v1173 v1174 
=== Predecessor ===
j901 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1166 lastLocationAccess: - #next: j953  <|@  <|@
f <@~|@floating>@ <|@
tid v1167 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j901 
index: - 
=== Succesors ===
=== Usages ===
j953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j901 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j953 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1167 
lastLocationAccess: - 
=== Succesors ===
next: i1086 
=== Usages ===
v908 
=== Predecessor ===
j952 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1167 lastLocationAccess: - #next: i1086  <|@  <|@
f <@~|@floating>@ <|@
tid v1106 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1086 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1086 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.localTCNCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 80]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1106 
lastLocationAccess: - 
=== Succesors ===
next: v911 
=== Usages ===
v959 v102 j904 a934 
=== Predecessor ===
j953 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1106 lastLocationAccess: - #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid j904 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1086 
=== Succesors ===
=== Usages ===
j905 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1086  <|@  <|@
f <@~|@floating>@ <|@
tid j905 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [0 - 17179869180] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00
=== Inputs ===
x: j904 
y: i190 
=== Succesors ===
=== Usages ===
j941 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j904 y: i190  <|@  <|@
f <@~|@floating>@ <|@
tid j941 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [23 - 17179869203] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
=== Inputs ===
x: j905 
y: j791 
=== Succesors ===
=== Usages ===
j906 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j905 y: j791  <|@  <|@
f <@~|@floating>@ <|@
tid j906 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [0 - 17179869200] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j941 
y: j752 
=== Succesors ===
=== Usages ===
j907 v922 j942 v1172 v1173 v1174 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j941 y: j752  <|@  <|@
f <@~|@floating>@ <|@
tid j907 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
=== Inputs ===
x: j906 
y: j952 
=== Succesors ===
=== Usages ===
v908 v954 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j906 y: j952  <|@  <|@
f <@~|@floating>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j953 
y: j907 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j953 y: j907  <|@  <|@
f <@*|@fixed>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v908 
=== Succesors ===
trueSuccessor: v910 
falseSuccessor: v909 
=== Usages ===
=== Predecessor ===
i1086 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v908 #trueSuccessor: v910 #falseSuccessor: v909  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = SHL x: v40|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v38|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a934 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a934  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a934 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v900 i1086 
=== Succesors ===
next: v1098 
=== Usages ===
v1098 a950 
=== Predecessor ===
v910 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v900 i1086 #next: v1098  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-247409|0xfffffffffffc398f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?6 
object: a934 
=== Succesors ===
next: v938 
=== Usages ===
=== Predecessor ===
a934 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?6 object: a934 #next: v938  <|@  <|@
f <@*|@fixed>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
v1098 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v954  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
lastLocationAccess: - 
value: j907 
stateAfter: - 
=== Succesors ===
next: v945 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1166 lastLocationAccess: - value: j907 stateAfter: - #next: v945  <|@  <|@
f <@~|@floating>@ <|@
tid v1172 <|@
result [v43|QWORD + v37|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j906 
index: j952 
=== Succesors ===
=== Usages ===
v945 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j906 index: j952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
address: v1172 
=== Succesors ===
next: v947 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1172 #next: v947  <|@  <|@
f <@~|@floating>@ <|@
tid v1173 <|@
result [v43|QWORD + v37|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j906 
index: j952 
=== Succesors ===
=== Usages ===
v947 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j906 index: j952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
address: v1173 
=== Succesors ===
next: v949 
=== Usages ===
=== Predecessor ===
v945 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1173 #next: v949  <|@  <|@
f <@~|@floating>@ <|@
tid v1174 <|@
result [v43|QWORD + v37|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j906 
index: j952 
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j906 index: j952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
address: v1174 
=== Succesors ===
next: v955 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1174 #next: v955  <|@  <|@
f <@~|@floating>@ <|@
tid v1168 <|@
result [v37|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j952 
index: - 
=== Succesors ===
=== Usages ===
v955 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j952 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1168 
lastLocationAccess: - 
value: j759 
stateAfter: - 
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1168 lastLocationAccess: - value: j759 stateAfter: - #next: v958  <|@  <|@
f <@~|@floating>@ <|@
tid v1175 <|@
result [v37|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j952 
index: - 
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j952 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1045 <|@
result meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1175 
lastLocationAccess: - 
value: v1045 
stateAfter: - 
=== Succesors ===
next: v959 
=== Usages ===
=== Predecessor ===
v955 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1175 lastLocationAccess: - value: v1045 stateAfter: - #next: v959  <|@  <|@
f <@~|@floating>@ <|@
tid v1169 <|@
result [v37|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j952 
index: - 
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j952 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1169 
lastLocationAccess: - 
value: i1086 
stateAfter: - 
=== Succesors ===
next: v917 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1169 lastLocationAccess: - value: i1086 stateAfter: - #next: v917  <|@  <|@
f <@~|@floating>@ <|@
tid j942 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [-16 - 17179869184] bits:x...x000
=== Inputs ===
x: j906 
y: j793 
=== Succesors ===
=== Usages ===
v914 v918 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j906 y: j793  <|@  <|@
f <@~|@floating>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j942 
y: j796 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j942 y: j796  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v914 
=== Succesors ===
trueSuccessor: v916 
falseSuccessor: v915 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v914 #trueSuccessor: v916 #falseSuccessor: v915  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v919 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v919  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v916 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j921 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v920 
values: j192 j930 
=== Succesors ===
=== Usages ===
v922 v1170 j930 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v920 values: j192 j930  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v919 
=== Succesors ===
next: v928 
=== Usages ===
j921 v927 v931 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v919 #next: v928  <|@  <|@
f <@~|@floating>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j921 
y: j906 
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j921 y: j906  <|@  <|@
f <@*|@fixed>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v922 
=== Succesors ===
trueSuccessor: v923 
falseSuccessor: v927 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v922 #trueSuccessor: v923 #falseSuccessor: v927  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v960 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v960  <|@  <|@
f <@~|@floating>@ <|@
tid v1170 <|@
result [v37|QWORD + v48|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j952 
index: j921 
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j952 index: j921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1170 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v931 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1170 lastLocationAccess: - value: j719 stateAfter: - #next: v931  <|@  <|@
f <@~|@floating>@ <|@
tid j930 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64
=== Inputs ===
x: j921 
y: j795 
=== Succesors ===
=== Usages ===
j921 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j921 y: j795  <|@  <|@
f <@*|@fixed>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v920 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v920  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v920 
=== Succesors ===
next: v926 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v920 #next: v926  <|@  <|@
f <@*|@fixed>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v925 
=== Predecessor ===
v927 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v918 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v918  <|@  <|@
f <@~|@floating>@ <|@
tid v1171 <|@
result [v37|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j952 
index: - 
=== Succesors ===
=== Usages ===
v918 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j952 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1171 
lastLocationAccess: - 
length: j942 
=== Succesors ===
next: v924 
=== Usages ===
=== Predecessor ===
v915 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v1171 lastLocationAccess: - length: j942 #next: v924  <|@  <|@
f <@*|@fixed>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v925 
=== Predecessor ===
v918 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v37|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v924 v926 
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v924 v926 #next: v932  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a933 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a933 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j952 
=== Succesors ===
next: v936 
=== Usages ===
a950 
=== Predecessor ===
v932 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j952 #next: v936  <|@  <|@
f <@*|@fixed>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
a933 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a950 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v937 
values: a933 a934 
=== Succesors ===
=== Usages ===
a372 ?167 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v937 values: a933 a934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v936 v938 
=== Succesors ===
next: v121 
=== Usages ===
a950 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v936 v938 #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid i238 <|@
result int[2147483647|0x7fffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647]
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
x: i50 
y: i238 
=== Succesors ===
=== Usages ===
v307 v121 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i50 y: i238  <|@  <|@
f <@~|@floating>@ <|@
tid i529 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i554 i552 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i419 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 v463 i551 i553 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:162) [bci: 10]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 v343 ?167 ?167 v203 v219 v195 v211 i296 i299 v390 v410 v434 v454 v477 v497 v519 v525 v541 v547 v567 v573 v580 v586 v611 v617 v624 v630 v638 v644 v650 v656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: PROFILED designatedSuccessorProbability: 0.04763539526237903
stamp: void
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v119 #falseSuccessor: v120  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
v119 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1056 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1056  <|@  <|@
f <@~|@floating>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i190 
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i51 y: i190  <|@  <|@
f <@*|@fixed>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v276 
=== Succesors ===
trueSuccessor: v1052 
falseSuccessor: v1055 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v276 #trueSuccessor: v1052 #falseSuccessor: v1055  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1050 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1050  <|@  <|@
f <@*|@fixed>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1049 
=== Predecessor ===
v1052 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1064 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1064  <|@  <|@
f <@~|@floating>@ <|@
tid i296 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
x: i51 
y: i17 
=== Succesors ===
=== Usages ===
j270 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i51 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid j270 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
value: i296 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i296  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j270 
y: j263 
=== Succesors ===
=== Usages ===
v1064 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j270 y: j263  <|@  <|@
f <@*|@fixed>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v271 
=== Succesors ===
trueSuccessor: v1063 
falseSuccessor: v1060 
=== Usages ===
=== Predecessor ===
v1055 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v271 #trueSuccessor: v1063 #falseSuccessor: v1060  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVSXD value: v53|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v54|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1051 
=== Usages ===
=== Predecessor ===
v1064 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1051  <|@  <|@
f <@*|@fixed>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1049 
=== Predecessor ===
v1063 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1050 v1051 
=== Succesors ===
next: v307 
=== Usages ===
v278 v413 v658 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1050 v1051 #next: v307  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v306 
falseSuccessor: v304 
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v306 #falseSuccessor: v304  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@~|@floating>@ <|@
tid i718 <|@
result int[-61467|0xffffffffffff0fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
rawvalue: -61467
stableDimension: 0
stamp: i32 [-61467]
stampKind: i32
value: int[-61467|0xffffffffffff0fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
v306 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61467|0xffffffffffff0fe5], long[0|0x0]] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
v195 
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid v1107 <|@
result [v21|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a807 
index: - 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v304 
address: v1107 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v58 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v304 address: v1107 lastLocationAccess: - value: i17 stateAfter: - #next: v58  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i419 
=== Succesors ===
=== Usages ===
i421 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i51 y: i419  <|@  <|@
f <@~|@floating>@ <|@
tid i421 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
condition: v420 
trueValue: i51 
falseValue: i190 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v420 trueValue: i51 falseValue: i190  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v195 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v8|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i138 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v59 
values: i28 i71 
=== Succesors ===
=== Usages ===
i71 v64 j242 i385 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v59 values: i28 i71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 68
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.992793163401544
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v58 
=== Succesors ===
next: v68 
=== Usages ===
i138 v65 v72 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v58 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i138 
y: i421 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i138 y: i421  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v67 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v67 #falseSuccessor: v65  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v55|DWORD, y: v56|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v203 
=== Usages ===
v278 
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
guards: v1049 v67 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1049 v67  <|@  <|@
f <@~|@floating>@ <|@
tid j242 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i138 
=== Succesors ===
=== Usages ===
v1108 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i138  <|@  <|@
f <@~|@floating>@ <|@
tid v1108 <|@
result [v21|QWORD[.] + v56|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j242 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v278 
address: v1108 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v278 address: v1108 lastLocationAccess: - value: i17 stateAfter: - #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid i71 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i138 
y: i28 
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i138 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v59 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v59  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v56|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v59 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v59 #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
result int[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16]
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i681 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i681 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i51 
y: i680 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i51 y: i680  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
v65 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = LEA address: [v8|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|DWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i385 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v378 
values: i138 i677 
=== Succesors ===
=== Usages ===
v379 i383 j391 i405 i505 i551 i552 i593 i595 i597 i598 i665 i666 i668 i670 i672 i674 i676 i677 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v378 values: i138 i677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 59
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.992793163401544
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 16
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v394 
=== Succesors ===
next: v382 
=== Usages ===
v380 v384 i385 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v394 #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i385 
y: i681 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i385 y: i681  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.19971162262162956
stamp: void
=== Inputs ===
condition: v379 
=== Succesors ===
trueSuccessor: v381 
falseSuccessor: v380 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v379 #trueSuccessor: v381 #falseSuccessor: v380  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v59|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
v658 
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
guards: v1049 v381 
=== Succesors ===
=== Usages ===
v586 v611 v477 v617 v580 v624 v519 v630 v573 v638 v390 v644 v567 v650 v525 v656 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1049 v381  <|@  <|@
f <@~|@floating>@ <|@
tid j391 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i385 
=== Succesors ===
=== Usages ===
v1124 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i385  <|@  <|@
f <@~|@floating>@ <|@
tid v1124 <|@
result [v21|QWORD[.] + v59|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j391 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1124 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1124 lastLocationAccess: - value: i17 stateAfter: - #next: v477  <|@  <|@
f <@~|@floating>@ <|@
tid i383 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i28 
=== Succesors ===
=== Usages ===
j478 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid j478 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i383 
=== Succesors ===
=== Usages ===
v1128 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i383  <|@  <|@
f <@~|@floating>@ <|@
tid v1128 <|@
result [v21|QWORD[.] + v60|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j478 
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1128 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v519 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1128 lastLocationAccess: - value: i17 stateAfter: - #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid i505 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i190 
=== Succesors ===
=== Usages ===
j520 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i190  <|@  <|@
f <@~|@floating>@ <|@
tid j520 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i505 
=== Succesors ===
=== Usages ===
v1130 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i505  <|@  <|@
f <@~|@floating>@ <|@
tid v1130 <|@
result [v21|QWORD[.] + v61|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j520 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1130 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1130 lastLocationAccess: - value: i17 stateAfter: - #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid i551 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i419 
=== Succesors ===
=== Usages ===
j526 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i419  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i551 
=== Succesors ===
=== Usages ===
v1131 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i551  <|@  <|@
f <@~|@floating>@ <|@
tid v1131 <|@
result [v21|QWORD[.] + v62|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j526 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1131 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1131 lastLocationAccess: - value: i17 stateAfter: - #next: v567  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i529 
=== Succesors ===
=== Usages ===
j568 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i529  <|@  <|@
f <@~|@floating>@ <|@
tid j568 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i552 
=== Succesors ===
=== Usages ===
v1134 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i552  <|@  <|@
f <@~|@floating>@ <|@
tid v1134 <|@
result [v21|QWORD[.] + v63|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j568 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1134 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1134 lastLocationAccess: - value: i17 stateAfter: - #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid i592 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i593 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i593 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i592 
=== Succesors ===
=== Usages ===
j574 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i592  <|@  <|@
f <@~|@floating>@ <|@
tid j574 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i593 
=== Succesors ===
=== Usages ===
v1135 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i593  <|@  <|@
f <@~|@floating>@ <|@
tid v1135 <|@
result [v21|QWORD[.] + v64|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j574 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1135 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1135 lastLocationAccess: - value: i17 stateAfter: - #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid i594 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 6
stableDimension: 0
stamp: i32 [6]
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i595 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i595 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i594 
=== Succesors ===
=== Usages ===
j581 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i594  <|@  <|@
f <@~|@floating>@ <|@
tid j581 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i595 
=== Succesors ===
=== Usages ===
v1136 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i595  <|@  <|@
f <@~|@floating>@ <|@
tid v1136 <|@
result [v21|QWORD[.] + v65|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j581 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j581  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1136 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1136 lastLocationAccess: - value: i17 stateAfter: - #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid i596 <|@
result int[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i597 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i597 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i596 
=== Succesors ===
=== Usages ===
j587 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i596  <|@  <|@
f <@~|@floating>@ <|@
tid j587 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i597 
=== Succesors ===
=== Usages ===
v1137 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i597  <|@  <|@
f <@~|@floating>@ <|@
tid v1137 <|@
result [v21|QWORD[.] + v66|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j587 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j587  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1137 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1137 lastLocationAccess: - value: i17 stateAfter: - #next: v611  <|@  <|@
f <@~|@floating>@ <|@
tid i591 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i598 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i598 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i591 
=== Succesors ===
=== Usages ===
j612 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i591  <|@  <|@
f <@~|@floating>@ <|@
tid j612 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i598 
=== Succesors ===
=== Usages ===
v1138 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i598  <|@  <|@
f <@~|@floating>@ <|@
tid v1138 <|@
result [v21|QWORD[.] + v67|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j612 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1138 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1138 lastLocationAccess: - value: i17 stateAfter: - #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid i664 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
i665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i665 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i664 
=== Succesors ===
=== Usages ===
j618 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i664  <|@  <|@
f <@~|@floating>@ <|@
tid j618 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i665 
=== Succesors ===
=== Usages ===
v1139 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i665  <|@  <|@
f <@~|@floating>@ <|@
tid v1139 <|@
result [v21|QWORD[.] + v68|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j618 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1139 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1139 lastLocationAccess: - value: i17 stateAfter: - #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid i666 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i36 
=== Succesors ===
=== Usages ===
j625 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid j625 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i666 
=== Succesors ===
=== Usages ===
v1140 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i666  <|@  <|@
f <@~|@floating>@ <|@
tid v1140 <|@
result [v21|QWORD[.] + v69|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j625 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j625  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1140 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1140 lastLocationAccess: - value: i17 stateAfter: - #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid i667 <|@
result int[11|0xb] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 11
stableDimension: 0
stamp: i32 [11]
stampKind: i32
value: int[11|0xb]
=== Inputs ===
=== Succesors ===
=== Usages ===
i668 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i668 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i667 
=== Succesors ===
=== Usages ===
j631 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i667  <|@  <|@
f <@~|@floating>@ <|@
tid j631 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i668 
=== Succesors ===
=== Usages ===
v1141 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i668  <|@  <|@
f <@~|@floating>@ <|@
tid v1141 <|@
result [v21|QWORD[.] + v70|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j631 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1141 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1141 lastLocationAccess: - value: i17 stateAfter: - #next: v638  <|@  <|@
f <@~|@floating>@ <|@
tid i669 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 12
stableDimension: 0
stamp: i32 [12]
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i670 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i670 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i669 
=== Succesors ===
=== Usages ===
j639 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i669  <|@  <|@
f <@~|@floating>@ <|@
tid j639 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i670 
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i670  <|@  <|@
f <@~|@floating>@ <|@
tid v1142 <|@
result [v21|QWORD[.] + v71|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j639 
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1142 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1142 lastLocationAccess: - value: i17 stateAfter: - #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid i671 <|@
result int[13|0xd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 13
stableDimension: 0
stamp: i32 [13]
stampKind: i32
value: int[13|0xd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i672 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i671 
=== Succesors ===
=== Usages ===
j645 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i671  <|@  <|@
f <@~|@floating>@ <|@
tid j645 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i672 
=== Succesors ===
=== Usages ===
v1143 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i672  <|@  <|@
f <@~|@floating>@ <|@
tid v1143 <|@
result [v21|QWORD[.] + v72|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j645 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j645  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1143 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1143 lastLocationAccess: - value: i17 stateAfter: - #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid i673 <|@
result int[14|0xe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 14
stableDimension: 0
stamp: i32 [14]
stampKind: i32
value: int[14|0xe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i674 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i674 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i673 
=== Succesors ===
=== Usages ===
j651 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i673  <|@  <|@
f <@~|@floating>@ <|@
tid j651 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i674 
=== Succesors ===
=== Usages ===
v1144 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i674  <|@  <|@
f <@~|@floating>@ <|@
tid v1144 <|@
result [v21|QWORD[.] + v73|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j651 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1144 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1144 lastLocationAccess: - value: i17 stateAfter: - #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid i675 <|@
result int[15|0xf] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 15
stableDimension: 0
stamp: i32 [15]
stampKind: i32
value: int[15|0xf]
=== Inputs ===
=== Succesors ===
=== Usages ===
i676 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i676 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i675 
=== Succesors ===
=== Usages ===
j657 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i675  <|@  <|@
f <@~|@floating>@ <|@
tid j657 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i676 
=== Succesors ===
=== Usages ===
v1145 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i676  <|@  <|@
f <@~|@floating>@ <|@
tid v1145 <|@
result [v21|QWORD[.] + v74|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j657 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j657  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v658 
address: v1145 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v658 address: v1145 lastLocationAccess: - value: i17 stateAfter: - #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid i663 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i677 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i677 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i385 
y: i663 
=== Succesors ===
=== Usages ===
i385 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i663  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v378 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v378  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v59|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v60|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = LEA address: [v59|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v61|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = LEA address: [v59|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v62|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = LEA address: [v59|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v63|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = LEA address: [v59|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v64|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = LEA address: [v59|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v65|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v59|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v66|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = LEA address: [v59|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v67|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v59|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v68|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = LEA address: [v59|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v69|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = LEA address: [v59|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v70|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = LEA address: [v59|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v71|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = LEA address: [v59|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v72|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = LEA address: [v59|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v73|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = LEA address: [v59|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v74|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = LEA address: [v59|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v378 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v378 #next: v414  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v380 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i405 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v398 
values: i385 i403 
=== Succesors ===
=== Usages ===
v399 i403 j411 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v398 values: i385 i403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 59
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.992793163401544
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v414 
=== Succesors ===
next: v402 
=== Usages ===
v400 v404 i405 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v414 #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i405 
y: i51 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i405 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v399 
=== Succesors ===
trueSuccessor: v401 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v399 #trueSuccessor: v401 #falseSuccessor: v400  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v76|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v410 
=== Usages ===
v413 
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
guards: v1049 v401 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1049 v401  <|@  <|@
f <@~|@floating>@ <|@
tid j411 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i405 
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i405  <|@  <|@
f <@~|@floating>@ <|@
tid v1125 <|@
result [v21|QWORD[.] + v76|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a807 
index: j411 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a807 index: j411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v413 
address: v1125 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v404 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v413 address: v1125 lastLocationAccess: - value: i17 stateAfter: - #next: v404  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i405 
y: i28 
=== Succesors ===
=== Usages ===
i405 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i405 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v398 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v398  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v76|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC value: v76|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v77|DWORD] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v398 
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v398 #next: v130  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
v400 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v130 v131 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v130 v131 #next: v143  <|@  <|@
tid a166 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.from int:12>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.to int:16>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.lookbehindTo int:20>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.acceptMode int:24>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.first int:28>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.last int:32>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.oldLast int:36>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.lastAppendPosition int:40>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.modCount int:44>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.hitEnd boolean:48>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.requireEnd boolean:49>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.transparentBounds boolean:50>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.anchoringBounds boolean:51>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.parentPattern Pattern:52>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.groups int[]:56>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.text CharSequence:60>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.locals int[]:64>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.localsPos IntHashSet[]:68>, HotSpotResolvedJavaFieldImpl<java.util.regex.Matcher.namedGroups Map:72>]
hasIdentity: true
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
objectId: 0
stamp: a!# java.util.regex.Matcher
type: HotSpotType<Ljava/util/regex/Matcher;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?135 ?159 ?167 ?157 ?137 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?167 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a166 
values: - - - - i17 - i17 - - - - - i28 a1 a807 a2 a878 a950 - 
=== Succesors ===
=== Usages ===
?137 ?159 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a166 values: - - - - i17 - i17 - - - - - i28 a1 a807 a2 a878 a950 -  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1085 
y: i7 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1085 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: PROFILED designatedSuccessorProbability: 0.14455854068526564
stamp: void
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v142 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v141 #falseSuccessor: v142  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v153  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1072 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1072  <|@  <|@
f <@~|@floating>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1085 
y: i190 
=== Succesors ===
=== Usages ===
v1072 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1085 y: i190  <|@  <|@
f <@*|@fixed>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v291 
=== Succesors ===
trueSuccessor: v1068 
falseSuccessor: v1071 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v291 #trueSuccessor: v1068 #falseSuccessor: v1071  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1066 
=== Usages ===
=== Predecessor ===
v1072 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1066  <|@  <|@
f <@*|@fixed>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
v1068 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1080 
=== Usages ===
=== Predecessor ===
v1072 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1080  <|@  <|@
f <@~|@floating>@ <|@
tid i299 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i1085 
y: i17 
=== Succesors ===
=== Usages ===
j285 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1085 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid j285 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i299 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i299  <|@  <|@
f <@~|@floating>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j285 
y: j279 
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j285 y: j279  <|@  <|@
f <@*|@fixed>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v286 
=== Succesors ===
trueSuccessor: v1079 
falseSuccessor: v1076 
=== Usages ===
=== Predecessor ===
v1071 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v286 #trueSuccessor: v1079 #falseSuccessor: v1076  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVSXD value: v78|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v79|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1067 
=== Usages ===
=== Predecessor ===
v1080 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1067  <|@  <|@
f <@*|@fixed>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
v1079 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1066 v1067 
=== Succesors ===
next: v211 
=== Usages ===
v293 v457 v549 v211 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1066 v1067 #next: v211  <|@  <|@
f <@~|@floating>@ <|@
tid v1109 <|@
result [v36|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a878 
index: - 
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a878 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v1065 
address: v1109 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v1065 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1065 address: v1109 lastLocationAccess: - value: i17 stateAfter: - #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1085 
y: i419 
=== Succesors ===
=== Usages ===
i464 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1085 y: i419  <|@  <|@
f <@~|@floating>@ <|@
tid i464 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v463 
trueValue: i1085 
falseValue: i190 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v463 trueValue: i1085 falseValue: i190  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v211 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v24|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v24|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i160 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v74 
values: i28 i86 
=== Succesors ===
=== Usages ===
i86 v79 j246 i429 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v74 values: i28 i86  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 83
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.917612721182696
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v73 
=== Succesors ===
next: v83 
=== Usages ===
i160 v80 v87 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v73 #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i160 
y: i464 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i160 y: i464  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v79 
=== Succesors ===
trueSuccessor: v82 
falseSuccessor: v80 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v79 #trueSuccessor: v82 #falseSuccessor: v80  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v219 
=== Usages ===
v293 
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
guards: v1065 v82 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1065 v82  <|@  <|@
f <@~|@floating>@ <|@
tid j246 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i160 
=== Succesors ===
=== Usages ===
v1110 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i160  <|@  <|@
f <@~|@floating>@ <|@
tid v1110 <|@
result [v36|QWORD[.] + v81|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a878 
index: j246 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a878 index: j246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v293 
address: v1110 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v293 address: v1110 lastLocationAccess: - value: i17 stateAfter: - #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid i86 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i160 
y: i28 
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i160 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v74 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v74  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid i683 <|@
result int[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i32 [-4]
stampKind: i32
value: int[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i684 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i684 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i1085 
y: i683 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1085 y: i683  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
v80 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = LEA address: [v24|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i429 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v422 
values: i160 i554 
=== Succesors ===
=== Usages ===
v423 i427 j435 i449 i506 i553 i554 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v422 values: i160 i554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 74
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.917612721182696
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 4
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v438 
=== Succesors ===
next: v426 
=== Usages ===
v424 v428 i429 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v438 #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i429 
y: i684 
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i429 y: i684  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.3240517437578174
stamp: void
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v425 
falseSuccessor: v424 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v425 #falseSuccessor: v424  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v83|DWORD, y: v84|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v434 
=== Usages ===
v549 
=== Predecessor ===
v426 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
guards: v1065 v425 
=== Succesors ===
=== Usages ===
v497 v541 v434 v547 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1065 v425  <|@  <|@
f <@~|@floating>@ <|@
tid j435 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i429 
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i429  <|@  <|@
f <@~|@floating>@ <|@
tid v1126 <|@
result [v36|QWORD[.] + v84|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a878 
index: j435 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a878 index: j435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v549 
address: v1126 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v549 address: v1126 lastLocationAccess: - value: i17 stateAfter: - #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid i427 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i429 
y: i28 
=== Succesors ===
=== Usages ===
j498 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i429 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid j498 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i427 
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i427  <|@  <|@
f <@~|@floating>@ <|@
tid v1129 <|@
result [v36|QWORD[.] + v85|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a878 
index: j498 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a878 index: j498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v549 
address: v1129 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v549 address: v1129 lastLocationAccess: - value: i17 stateAfter: - #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid i506 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i429 
y: i190 
=== Succesors ===
=== Usages ===
j542 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i429 y: i190  <|@  <|@
f <@~|@floating>@ <|@
tid j542 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i506 
=== Succesors ===
=== Usages ===
v1132 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i506  <|@  <|@
f <@~|@floating>@ <|@
tid v1132 <|@
result [v36|QWORD[.] + v86|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a878 
index: j542 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a878 index: j542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v549 
address: v1132 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v549 address: v1132 lastLocationAccess: - value: i17 stateAfter: - #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i429 
y: i419 
=== Succesors ===
=== Usages ===
j548 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i429 y: i419  <|@  <|@
f <@~|@floating>@ <|@
tid j548 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i553 
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i553  <|@  <|@
f <@~|@floating>@ <|@
tid v1133 <|@
result [v36|QWORD[.] + v87|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a878 
index: j548 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a878 index: j548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v549 
address: v1133 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v549 address: v1133 lastLocationAccess: - value: i17 stateAfter: - #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid i554 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i429 
y: i529 
=== Succesors ===
=== Usages ===
i429 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i429 y: i529  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v422 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v422  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v84|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v84|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v84|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v88|DWORD] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v422 
=== Succesors ===
next: v458 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v422 #next: v458  <|@  <|@
f <@*|@fixed>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
v424 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v84|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i449 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v442 
values: i429 i447 
=== Succesors ===
=== Usages ===
v443 i447 j455 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v442 values: i429 i447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 74
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.917612721182696
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v458 
=== Succesors ===
next: v446 
=== Usages ===
v444 v448 i449 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v458 #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i449 
y: i1085 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i449 y: i1085  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v443 
=== Succesors ===
trueSuccessor: v445 
falseSuccessor: v444 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v443 #trueSuccessor: v445 #falseSuccessor: v444  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|DWORD, y: v89|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v454 
=== Usages ===
v457 
=== Predecessor ===
v446 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
guards: v1065 v445 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1065 v445  <|@  <|@
f <@~|@floating>@ <|@
tid j455 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i449 
=== Succesors ===
=== Usages ===
v1127 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i449  <|@  <|@
f <@~|@floating>@ <|@
tid v1127 <|@
result [v36|QWORD[.] + v89|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a878 
index: j455 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a878 index: j455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v457 
address: v1127 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v457 address: v1127 lastLocationAccess: - value: i17 stateAfter: - #next: v448  <|@  <|@
f <@~|@floating>@ <|@
tid i447 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32
=== Inputs ===
x: i449 
y: i28 
=== Succesors ===
=== Usages ===
i449 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i449 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v442 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v442  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = INC value: v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v442 
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v442 #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v444 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v152 v153 
=== Succesors ===
next: v1087 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v152 v153 #next: v1087  <|@  <|@
tid ?157 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<Pattern.matcher(CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Pattern.java
sourceLine: 1180
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a166 
=== Succesors ===
=== Usages ===
?158 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a166  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
bci: 90
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Matcher.java
sourceLine: 256
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?157 
=== Succesors ===
=== Usages ===
?159 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?157  <|@  <|@
tid ?159 <|@
d <@d|@=== Debug Properties ===
bci: 63
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 455
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?158 
values: a166 
virtualObjectMappings: ?167 
=== Succesors ===
=== Usages ===
v737 v1100 a994 v1087 i1089 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?158 values: a166 virtualObjectMappings: ?167  <|@  <|@
f <@~|@floating>@ <|@
tid v1176 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1087 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-57099|0xffffffffffff20f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?159 
guard: - 
address: v1176 
lastLocationAccess: - 
=== Succesors ===
next: v323 
=== Usages ===
v1047 
=== Predecessor ===
v151 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?159 guard: - address: v1176 lastLocationAccess: - #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid v1046 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1047 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1087 
y: v1046 
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1087 y: v1046  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1047 
=== Succesors ===
trueSuccessor: v320 
falseSuccessor: v322 
=== Usages ===
=== Predecessor ===
v1087 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1047 #trueSuccessor: v320 #falseSuccessor: v322  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1088 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1088  <|@  <|@
f <@~|@floating>@ <|@
tid v1111 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1088 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1088 <|@
result v91|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1111 
lastLocationAccess: - 
=== Succesors ===
next: i1089 
=== Usages ===
v1112 
=== Predecessor ===
v320 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1111 lastLocationAccess: - #next: i1089  <|@  <|@
f <@~|@floating>@ <|@
tid v1112 <|@
result [v91|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1088 
=== Succesors ===
=== Usages ===
i1089 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1088  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1089 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-58635|0xffffffffffff1af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?159 
guard: - 
address: v1112 
lastLocationAccess: - 
=== Succesors ===
next: v338 
=== Usages ===
i113 
=== Predecessor ===
a1088 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?159 guard: - address: v1112 lastLocationAccess: - #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1086 
y: i7 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1086 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v102 
=== Succesors ===
trueSuccessor: v336 
falseSuccessor: v337 
=== Usages ===
=== Predecessor ===
i1089 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v102 #trueSuccessor: v336 #falseSuccessor: v337  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction v92|DWORD = MOV input: [v91|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:459) [bci: 98]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1042 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: j983 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j983  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j983 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1017 
=== Usages ===
v1177 v1178 
=== Predecessor ===
v1042 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1017  <|@  <|@
f <@~|@floating>@ <|@
tid v1177 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j983 
index: - 
=== Succesors ===
=== Usages ===
j1017 v1019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j983 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1017 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
lastLocationAccess: - 
=== Succesors ===
next: j1018 
=== Usages ===
j986 v1179 v1180 a993 v1181 v1182 v1183 v1184 v1185 v1186 v1187 v1188 v1189 v1190 
=== Predecessor ===
j983 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1177 lastLocationAccess: - #next: j1018  <|@  <|@
f <@~|@floating>@ <|@
tid v1178 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j983 
index: - 
=== Succesors ===
=== Usages ===
j1018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j983 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1018 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1178 
lastLocationAccess: - 
=== Succesors ===
next: v990 
=== Usages ===
v987 
=== Predecessor ===
j1017 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1178 lastLocationAccess: - #next: v990  <|@  <|@
f <@~|@floating>@ <|@
tid j982 <|@
result long[80|0x50] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
rawvalue: 80
stableDimension: 0
stamp: i64 [80]
stampKind: i64
value: long[80|0x50]
=== Inputs ===
=== Succesors ===
=== Usages ===
j986 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j986 <|@
result v94|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: i64
=== Inputs ===
x: j1017 
y: j982 
=== Succesors ===
=== Usages ===
v987 v1019 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1017 y: j982  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1018 
y: j986 
=== Succesors ===
=== Usages ===
v990 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j1018 y: j986  <|@  <|@
f <@*|@fixed>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v987 
=== Succesors ===
trueSuccessor: v989 
falseSuccessor: v988 
=== Usages ===
=== Predecessor ===
j1018 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v987 #trueSuccessor: v989 #falseSuccessor: v988  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = LEA address: [v93|QWORD + 80] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v94|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a994 
=== Usages ===
=== Predecessor ===
v990 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a994  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
rawvalue: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a994 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a994 <|@
result v96|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?159 
arguments: v981 
=== Succesors ===
next: v1100 
=== Usages ===
v1100 a1015 
=== Predecessor ===
v989 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?159 arguments: v981 #next: v1100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-265841|0xfffffffffffbf18f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?159 
object: a994 
=== Succesors ===
next: v998 
=== Usages ===
=== Predecessor ===
a994 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?159 object: a994 #next: v998  <|@  <|@
f <@*|@fixed>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
v1100 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v95|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [v96|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1019 
=== Usages ===
=== Predecessor ===
v990 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1019  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
lastLocationAccess: - 
value: j986 
stateAfter: - 
=== Succesors ===
next: v1001 
=== Usages ===
=== Predecessor ===
v988 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1177 lastLocationAccess: - value: j986 stateAfter: - #next: v1001  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
result [v93|QWORD + 336] <|@
d <@d|@=== Debug Properties ===
displacement: 336
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
=== Inputs ===
address: v1181 
=== Succesors ===
next: v1020 
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1181 #next: v1020  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
result [v93|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1020 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1179 
lastLocationAccess: - 
value: j759 
stateAfter: - 
=== Succesors ===
next: v1023 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1179 lastLocationAccess: - value: j759 stateAfter: - #next: v1023  <|@  <|@
f <@~|@floating>@ <|@
tid v1190 <|@
result [v93|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
result meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
rawvalue: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1190 
lastLocationAccess: - 
value: v1048 
stateAfter: - 
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
v1020 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1190 lastLocationAccess: - value: v1048 stateAfter: - #next: v1024  <|@  <|@
f <@~|@floating>@ <|@
tid v1180 <|@
result [v93|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1180 
lastLocationAccess: - 
value: i7 
stateAfter: - 
=== Succesors ===
next: v1025 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1180 lastLocationAccess: - value: i7 stateAfter: - #next: v1025  <|@  <|@
f <@~|@floating>@ <|@
tid v1182 <|@
result [v93|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1025 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1182 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v1026 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1182 lastLocationAccess: - value: j719 stateAfter: - #next: v1026  <|@  <|@
f <@~|@floating>@ <|@
tid v1183 <|@
result [v93|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1026 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1183 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v1027 
=== Usages ===
=== Predecessor ===
v1025 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1183 lastLocationAccess: - value: j719 stateAfter: - #next: v1027  <|@  <|@
f <@~|@floating>@ <|@
tid v1184 <|@
result [v93|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1184 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v1026 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1184 lastLocationAccess: - value: j719 stateAfter: - #next: v1028  <|@  <|@
f <@~|@floating>@ <|@
tid v1185 <|@
result [v93|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1185 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v1029 
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1185 lastLocationAccess: - value: j719 stateAfter: - #next: v1029  <|@  <|@
f <@~|@floating>@ <|@
tid v1186 <|@
result [v93|QWORD + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1029 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1186 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v1030 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1186 lastLocationAccess: - value: j719 stateAfter: - #next: v1030  <|@  <|@
f <@~|@floating>@ <|@
tid v1187 <|@
result [v93|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1030 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1187 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v1031 
=== Usages ===
=== Predecessor ===
v1029 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1187 lastLocationAccess: - value: j719 stateAfter: - #next: v1031  <|@  <|@
f <@~|@floating>@ <|@
tid v1188 <|@
result [v93|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1031 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1188 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v1032 
=== Usages ===
=== Predecessor ===
v1030 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1188 lastLocationAccess: - value: j719 stateAfter: - #next: v1032  <|@  <|@
f <@~|@floating>@ <|@
tid v1189 <|@
result [v93|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: - 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1189 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: a993 
=== Usages ===
=== Predecessor ===
v1031 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1189 lastLocationAccess: - value: j719 stateAfter: - #next: a993  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a993 <|@
result v98|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j1017 
=== Succesors ===
next: v996 
=== Usages ===
a1015 
=== Predecessor ===
v1032 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j1017 #next: v996  <|@  <|@
f <@*|@fixed>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
a993 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v93|QWORD + 336] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v93|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v98|QWORD[.]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1015 <|@
result v99|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v997 
values: a993 a994 
=== Succesors ===
=== Usages ===
v1123 a374 v1114 v1115 v1116 v1117 v1118 v1119 v1120 v1121 v1122 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v997 values: a993 a994  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v996 v998 
=== Succesors ===
next: v373 
=== Usages ===
a1015 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v996 v998 #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v1123 <|@
result [v99|QWORD[.] + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S1
=== Inputs ===
base: a1015 
index: - 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a372 <|@
result v100|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
op: Compress
stamp: n!# java.util.regex.IntHashSet[]
=== Inputs ===
value: a950 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1123 
lastLocationAccess: - 
value: a372 
stateAfter: - 
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v997 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1123 lastLocationAccess: - value: a372 stateAfter: - #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid v1122 <|@
result [v99|QWORD[.] + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: a1015 
index: - 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a368 <|@
result v101|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
op: Compress
stamp: n!# int[]
=== Inputs ===
value: a878 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1122 
lastLocationAccess: - 
value: a368 
stateAfter: - 
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1122 lastLocationAccess: - value: a368 stateAfter: - #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid v1121 <|@
result [v99|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S1
=== Inputs ===
base: a1015 
index: - 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a364 <|@
result v102|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1121 
lastLocationAccess: - 
value: a364 
stateAfter: - 
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1121 lastLocationAccess: - value: a364 stateAfter: - #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid v1120 <|@
result [v99|QWORD[.] + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: a1015 
index: - 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a360 <|@
result v103|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
op: Compress
stamp: n!# int[]
=== Inputs ===
value: a807 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1120 
lastLocationAccess: - 
value: a360 
stateAfter: - 
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1120 lastLocationAccess: - value: a360 stateAfter: - #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid v1119 <|@
result [v99|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S1
=== Inputs ===
base: a1015 
index: - 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a356 <|@
result v104|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
op: Compress
stamp: n!# java.util.regex.Pattern
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1119 
lastLocationAccess: - 
value: a356 
stateAfter: - 
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1119 lastLocationAccess: - value: a356 stateAfter: - #next: v353  <|@  <|@
f <@~|@floating>@ <|@
tid v1118 <|@
result [v99|QWORD[.] + 51] <|@
d <@d|@=== Debug Properties ===
displacement: 51
stamp: void*
stride: S1
=== Inputs ===
base: a1015 
index: - 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i376 <|@
result byte[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
rawvalue: 1
stableDimension: 0
stamp: i8 [1]
stampKind: i8
value: byte[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1118 
lastLocationAccess: - 
value: i376 
stateAfter: - 
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1118 lastLocationAccess: - value: i376 stateAfter: - #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid v1117 <|@
result [v99|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a1015 
index: - 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1117 
lastLocationAccess: - 
value: i28 
stateAfter: - 
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1117 lastLocationAccess: - value: i28 stateAfter: - #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid v1116 <|@
result [v99|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1015 
index: - 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1116 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1116 lastLocationAccess: - value: i17 stateAfter: - #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid v1115 <|@
result [v99|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1015 
index: - 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1115 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: i1090 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1115 lastLocationAccess: - value: i17 stateAfter: - #next: i1090  <|@  <|@
f <@~|@floating>@ <|@
tid v1113 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1090 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1090 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1113 
lastLocationAccess: - 
=== Succesors ===
next: v341 
=== Usages ===
i235 
=== Predecessor ===
v343 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1113 lastLocationAccess: - #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid v1114 <|@
result [v99|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1015 
index: - 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1015 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1090 
=== Succesors ===
=== Usages ===
i113 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1090  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1089 
y: i235 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1089 y: i235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1114 
lastLocationAccess: - 
value: i113 
stateAfter: - 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
i1090 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1114 lastLocationAccess: - value: i113 stateAfter: - #next: v375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at java.util.regex.Pattern.matcher(CharSequence) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a374 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a374 <|@
result v99|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(CharSequence) [bci: -6] Placeholder
stamp: a!# java.util.regex.Matcher
=== Inputs ===
object: a1015 
=== Succesors ===
next: v14 
=== Usages ===
v14 
=== Predecessor ===
v375 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1015 #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1181) [bci: 43]
stamp: void
=== Inputs ===
memoryMap: - 
result: a374 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a374 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a374  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[_] = COMPRESSPOINTER (input: v52|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 68], y: v100|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v36|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 64], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 60], y: v102|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 56], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 52], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v99|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SHR (x: v92|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 16], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i744 <|@
result int[-85779|0xfffffffffffeb0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: -85779
stableDimension: 0
stamp: i32 [-85779]
stampKind: i32
value: int[-85779|0xfffffffffffeb0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i735 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
v337 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85779|0xfffffffffffeb0ed], long[660|0x294]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid j742 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i741 <|@
result int[-57395|0xffffffffffff1fcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
rawvalue: -57395
stableDimension: 0
stamp: i32 [-57395]
stampKind: i32
value: int[-57395|0xffffffffffff1fcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i735 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
v322 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-57395|0xffffffffffff1fcd], long[1300|0x514]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i735 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i32 [-85779 - -57395] bits:1...1xx0x1xxxx11x01101
valueDescription: i32
=== Inputs ===
merge: v732 
values: i741 i744 
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v732 values: i741 i744  <|@  <|@
f <@~|@floating>@ <|@
tid j736 <|@
result v108|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: i64 [660 - 1300] bits:0...0xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v732 
values: j742 j745 
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v732 values: j742 j745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v740 v743 
=== Succesors ===
next: v737 
=== Usages ===
i735 j736 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v740 v743 #next: v737  <|@  <|@
f <@*|@fixed>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
stateBefore: ?159 
actionAndReason: i735 
speculation: j736 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v732 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?159 actionAndReason: i735 speculation: j736  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|DWORD, v108|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1092 
=== Usages ===
=== Predecessor ===
v1080 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1092  <|@  <|@
tid ?135 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<Pattern.matcher(CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Pattern.java
sourceLine: 1180
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a166 
=== Succesors ===
=== Usages ===
?136 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a166  <|@  <|@
tid ?136 <|@
d <@d|@=== Debug Properties ===
bci: 90
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Matcher.java
sourceLine: 256
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?135 
=== Succesors ===
=== Usages ===
?137 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?135  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 39
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 453
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?136 
values: a166 
virtualObjectMappings: ?167 
=== Succesors ===
=== Usages ===
v1092 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?136 values: a166 virtualObjectMappings: ?167  <|@  <|@
f <@*|@fixed>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 213
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
reason: BoundsCheckException
speculation: {0x0000000000000a98[index: 84, len: 24, hash: 0x2f363014]: GuardMovement@3[HotSpotMethod<Matcher.reset()>, 41, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?137 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?137  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v720 
=== Usages ===
=== Predecessor ===
v1064 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid j722 <|@
result long[1944|0x798] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
rawvalue: 1944
stableDimension: 0
stamp: i64 [1944]
stampKind: i64
value: long[1944|0x798]
=== Inputs ===
=== Succesors ===
=== Usages ===
j715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i721 <|@
result int[-50459|0xffffffffffff3ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
rawvalue: -50459
stableDimension: 0
stamp: i32 [-50459]
stampKind: i32
value: int[-50459|0xffffffffffff3ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
v1060 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50459|0xffffffffffff3ae5], long[1944|0x798]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i714 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stamp: i32 [-84243 - -50459] bits:1...1xx0xxxx1x1110x101
valueDescription: i32
=== Inputs ===
merge: v711 
values: i713 i718 i721 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v711 values: i713 i718 i721  <|@  <|@
f <@~|@floating>@ <|@
tid j715 <|@
result v110|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stamp: i64 [0 - 1944] bits:0...0xxxx00xxx00
valueDescription: i64
=== Inputs ===
merge: v711 
values: j180 j719 j722 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v711 values: j180 j719 j722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v712 v717 v720 
=== Succesors ===
next: v716 
=== Usages ===
i714 j715 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v712 v717 v720 #next: v716  <|@  <|@
f <@*|@fixed>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i714 
speculation: j715 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i714 speculation: j715  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD, v110|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVZXB input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v5|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v7|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHL x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v4|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA address: [v12|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v17|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + v17|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA address: [v26|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = AND x: v27|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = ADD (x: v28|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v23|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD + 12], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v28|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: v32|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + v32|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA address: [v32|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = SHL x: v40|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v38|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVSXD value: v53|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v54|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v8|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v55|DWORD, y: v56|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v56|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = LEA address: [v8|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|DWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v59|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v59|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v60|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = LEA address: [v59|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v61|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = LEA address: [v59|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v62|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = LEA address: [v59|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v63|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = LEA address: [v59|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v64|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = LEA address: [v59|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v65|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v59|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v66|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = LEA address: [v59|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v67|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v59|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v68|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = LEA address: [v59|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v69|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = LEA address: [v59|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v70|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = LEA address: [v59|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v71|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = LEA address: [v59|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v72|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = LEA address: [v59|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v73|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = LEA address: [v59|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v74|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = LEA address: [v59|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v76|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v76|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC value: v76|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v77|DWORD] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVSXD value: v78|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v79|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v24|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v24|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = LEA address: [v24|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v83|DWORD, y: v84|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v84|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v84|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v84|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v88|DWORD] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v84|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|DWORD, y: v89|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = INC value: v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v91|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction v92|DWORD = MOV input: [v91|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = LEA address: [v93|QWORD + 80] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v94|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v93|QWORD + 336] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v93|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v98|QWORD[.]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[_] = COMPRESSPOINTER (input: v52|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 68], y: v100|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v36|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 64], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 60], y: v102|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 56], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 52], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v99|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SHR (x: v92|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 16], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v95|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [v96|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v30|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v37|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v3|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v22|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-57395|0xffffffffffff1fcd], long[1300|0x514]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85779|0xfffffffffffeb0ed], long[660|0x294]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|DWORD, v108|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61467|0xffffffffffff0fe5], long[0|0x0]] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50459|0xffffffffffff3ae5], long[1944|0x798]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD, v110|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVZXB input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v5|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v7|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHL x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v4|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA address: [v12|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v17|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + v17|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA address: [v26|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = AND x: v27|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = ADD (x: v28|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v23|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD + 12], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v28|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: v32|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + v32|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA address: [v32|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = SHL x: v40|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v38|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVSXD value: v53|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v54|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v8|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v55|DWORD, y: v56|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v56|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = LEA address: [v8|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|DWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v59|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v59|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v60|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = LEA address: [v59|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v61|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = LEA address: [v59|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v62|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = LEA address: [v59|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v63|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = LEA address: [v59|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v64|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = LEA address: [v59|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v65|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v59|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v66|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = LEA address: [v59|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v67|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v59|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v68|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = LEA address: [v59|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v69|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = LEA address: [v59|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v70|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = LEA address: [v59|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v71|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = LEA address: [v59|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v72|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = LEA address: [v59|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v73|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = LEA address: [v59|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v74|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = LEA address: [v59|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v76|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v76|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC value: v76|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v77|DWORD] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVSXD value: v78|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v79|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v24|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v24|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = LEA address: [v24|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v83|DWORD, y: v84|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v84|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v84|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v84|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v88|DWORD] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v84|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|DWORD, y: v89|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = INC value: v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v91|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction v92|DWORD = MOV input: [v91|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = LEA address: [v93|QWORD + 80] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v94|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v93|QWORD + 336] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v93|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v98|QWORD[.]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[_] = COMPRESSPOINTER (input: v52|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 68], y: v100|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v36|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 64], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 60], y: v102|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 56], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 52], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v99|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SHR (x: v92|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 16], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v95|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [v96|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v112|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v111|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v30|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v37|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v3|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v22|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-57395|0xffffffffffff1fcd], long[1300|0x514]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85779|0xfffffffffffeb0ed], long[660|0x294]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|DWORD, v108|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61467|0xffffffffffff0fe5], long[0|0x0]] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50459|0xffffffffffff3ae5], long[1944|0x798]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD, v110|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVZXB input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v5|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v7|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHL x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v4|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA address: [v12|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v17|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + v17|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA address: [v26|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = AND x: v27|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = ADD (x: v28|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v23|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD + 12], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v28|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: v32|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + v32|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA address: [v32|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = SHL x: v40|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v38|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVSXD value: v53|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v54|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v8|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v55|DWORD, y: v56|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v56|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = LEA address: [v8|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|DWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v59|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v59|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v60|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = LEA address: [v59|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v61|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = LEA address: [v59|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v62|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = LEA address: [v59|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v63|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = LEA address: [v59|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v64|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = LEA address: [v59|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v65|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v59|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v66|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = LEA address: [v59|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v67|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v59|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v68|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = LEA address: [v59|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v69|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = LEA address: [v59|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v70|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = LEA address: [v59|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v71|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = LEA address: [v59|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v72|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = LEA address: [v59|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v73|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = LEA address: [v59|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v74|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = LEA address: [v59|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v76|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v76|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC value: v76|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v77|DWORD] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVSXD value: v78|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v79|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v24|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v24|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = LEA address: [v24|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v83|DWORD, y: v84|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v84|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v84|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v84|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v88|DWORD] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v84|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|DWORD, y: v89|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = INC value: v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v91|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction v92|DWORD = MOV input: [v91|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = LEA address: [v93|QWORD + 80] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v94|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v93|QWORD + 336] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v93|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v98|QWORD[.]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[_] = COMPRESSPOINTER (input: v52|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 68], y: v100|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v36|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 64], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 60], y: v102|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 56], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 52], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v99|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SHR (x: v92|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 16], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v95|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [v96|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v112|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v111|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v30|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v37|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v3|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v22|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-57395|0xffffffffffff1fcd], long[1300|0x514]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85779|0xfffffffffffeb0ed], long[660|0x294]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|DWORD, v108|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61467|0xffffffffffff0fe5], long[0|0x0]] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50459|0xffffffffffff3ae5], long[1944|0x798]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD, v110|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVZXB input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v5|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v7|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHL x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v4|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA address: [v12|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v17|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + v17|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA address: [v26|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = AND x: v27|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = ADD (x: v28|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v23|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD + 12], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v28|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: v32|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + v32|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA address: [v32|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = SHL x: v40|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v38|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVSXD value: v53|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v54|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v8|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v55|DWORD, y: v56|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v56|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = LEA address: [v8|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|DWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v59|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v59|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v60|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = LEA address: [v59|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v61|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = LEA address: [v59|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v62|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = LEA address: [v59|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v63|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = LEA address: [v59|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v64|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = LEA address: [v59|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v65|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v59|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v66|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = LEA address: [v59|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v67|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v59|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v68|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = LEA address: [v59|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v69|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = LEA address: [v59|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v70|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = LEA address: [v59|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v71|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = LEA address: [v59|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v72|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = LEA address: [v59|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v73|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = LEA address: [v59|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v74|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = LEA address: [v59|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v76|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v76|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC value: v76|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v77|DWORD] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVSXD value: v78|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v79|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v24|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v24|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = LEA address: [v24|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v83|DWORD, y: v84|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v84|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v84|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v84|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v88|DWORD] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v84|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|DWORD, y: v89|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = INC value: v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v91|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction v92|DWORD = MOV input: [v91|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = LEA address: [v93|QWORD + 80] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v94|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v93|QWORD + 336] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v93|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v98|QWORD[.]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[_] = COMPRESSPOINTER (input: v52|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 68], y: v100|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v36|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 64], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 60], y: v102|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 56], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 52], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v99|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SHR (x: v92|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 16], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v95|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [v96|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v112|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v111|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v30|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v37|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v3|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v22|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-57395|0xffffffffffff1fcd], long[1300|0x514]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85779|0xfffffffffffeb0ed], long[660|0x294]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|DWORD, v108|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61467|0xffffffffffff0fe5], long[0|0x0]] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50459|0xffffffffffff3ae5], long[1944|0x798]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD, v110|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVZXB input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v5|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v7|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHL x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v4|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA address: [v12|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v17|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + v17|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA address: [v26|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = AND x: v27|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = ADD (x: v28|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v23|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD + 12], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v28|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: v32|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + v32|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA address: [v32|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = SHL x: v40|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v38|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVSXD value: v53|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v54|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v8|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v55|DWORD, y: v56|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v56|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = LEA address: [v8|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|DWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v59|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v59|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v60|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = LEA address: [v59|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v61|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = LEA address: [v59|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v62|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = LEA address: [v59|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v63|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = LEA address: [v59|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v64|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = LEA address: [v59|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v65|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA address: [v59|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v66|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = LEA address: [v59|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v67|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = LEA address: [v59|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v68|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = LEA address: [v59|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v69|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = LEA address: [v59|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v70|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = LEA address: [v59|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v71|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = LEA address: [v59|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v72|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = LEA address: [v59|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v73|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = LEA address: [v59|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v74|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = LEA address: [v59|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v76|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v21|QWORD[.] + v76|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC value: v76|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v77|DWORD] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVSXD value: v78|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v79|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v24|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v24|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = LEA address: [v24|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v83|DWORD, y: v84|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v84|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v84|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v84|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v88|DWORD] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v84|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|DWORD, y: v89|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = INC value: v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v91|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction v92|DWORD = MOV input: [v91|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = LEA address: [v93|QWORD + 80] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v94|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v93|QWORD + 336] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v93|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v93|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v98|QWORD[.]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[_] = COMPRESSPOINTER (input: v52|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 68], y: v100|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v36|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 64], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 60], y: v102|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 56], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 52], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v99|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v99|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SHR (x: v92|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD[.] + 16], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v95|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [v96|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v112|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v111|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v30|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v37|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v3|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v22|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-57395|0xffffffffffff1fcd], long[1300|0x514]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85779|0xfffffffffffeb0ed], long[660|0x294]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|DWORD, v108|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61467|0xffffffffffff0fe5], long[0|0x0]] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50459|0xffffffffffff3ae5], long[1944|0x798]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD, v110|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD = MOVZXB input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   74  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   76  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   78  <|@ instruction CMP x: v5|DWORD y: 10 size: DWORD <|@ <|@
      nr   80  <|@ instruction v7|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   82  <|@ instruction v6|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v7|DWORD) condition: < <|@ <|@
      nr   84  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction v10|QWORD = SHL x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr   90  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr   92  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr   94  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v4|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  136  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction MOV (x: [v3|QWORD + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction v16|QWORD = LEA address: [v12|QWORD - 16] size: QWORD <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH x: v16|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  156  <|@ instruction [v17|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v17|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction MOV x: [v3|QWORD + v17|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 8] size: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [v18|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction v20|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  246  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  248  <|@ instruction v24|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  250  <|@ instruction v25|QWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 2 size: QWORD <|@ <|@
      nr  254  <|@ instruction v27|QWORD = LEA address: [v26|QWORD + 23] size: QWORD <|@ <|@
      nr  256  <|@ instruction v28|QWORD = AND x: v27|QWORD y: -8 size: QWORD <|@ <|@
      nr  258  <|@ instruction v29|QWORD = ADD (x: v28|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v23|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 440], y: v29|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  296  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  300  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  304  <|@ instruction MOV (x: [v22|QWORD + 12], y: v24|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction v31|QWORD = LEA address: [v28|QWORD - 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH x: v31|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  320  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v28|QWORD, y: v32|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction MOV x: [v22|QWORD + v32|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  350  <|@ instruction v33|QWORD = LEA address: [v32|QWORD + 8] size: QWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction v35|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  378  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  410  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  412  <|@ instruction v39|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  414  <|@ instruction v40|QWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction v41|QWORD = SHL x: v40|QWORD y: 2 size: QWORD <|@ <|@
      nr  418  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr  420  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr  422  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v38|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  460  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  462  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  464  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  468  <|@ instruction MOV (x: [v37|QWORD + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction v47|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  484  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction MOV x: [v37|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  514  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction v51|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  542  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction v53|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction v54|QWORD = MOVSXD value: v53|DWORD size: QWORD <|@ <|@
      nr  584  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v54|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction MOV x: [v21|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  634  <|@ instruction CMP x: v8|DWORD y: 3 size: DWORD <|@ <|@
      nr  636  <|@ instruction v55|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v8|DWORD) condition: |<| <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  640  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction CMPBRANCH (x: v55|DWORD, y: v56|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction MOV x: [v21|QWORD[.] + v56|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  666  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [v57|DWORD] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v58|DWORD = LEA address: [v8|DWORD - 16] size: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [v56|DWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr  688  <|@ instruction [v59|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v59|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction MOV x: [v21|QWORD[.] + v59|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  834  <|@ instruction v60|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr  836  <|@ instruction MOV x: [v21|QWORD[.] + v60|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  838  <|@ instruction v61|DWORD = LEA address: [v59|DWORD + 2] size: DWORD <|@ <|@
      nr  840  <|@ instruction MOV x: [v21|QWORD[.] + v61|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  842  <|@ instruction v62|DWORD = LEA address: [v59|DWORD + 3] size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [v21|QWORD[.] + v62|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  846  <|@ instruction v63|DWORD = LEA address: [v59|DWORD + 4] size: DWORD <|@ <|@
      nr  848  <|@ instruction MOV x: [v21|QWORD[.] + v63|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  850  <|@ instruction v64|DWORD = LEA address: [v59|DWORD + 5] size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV x: [v21|QWORD[.] + v64|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  854  <|@ instruction v65|DWORD = LEA address: [v59|DWORD + 6] size: DWORD <|@ <|@
      nr  856  <|@ instruction MOV x: [v21|QWORD[.] + v65|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  858  <|@ instruction v66|DWORD = LEA address: [v59|DWORD + 7] size: DWORD <|@ <|@
      nr  860  <|@ instruction MOV x: [v21|QWORD[.] + v66|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  862  <|@ instruction v67|DWORD = LEA address: [v59|DWORD + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction MOV x: [v21|QWORD[.] + v67|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  866  <|@ instruction v68|DWORD = LEA address: [v59|DWORD + 9] size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV x: [v21|QWORD[.] + v68|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  870  <|@ instruction v69|DWORD = LEA address: [v59|DWORD + 10] size: DWORD <|@ <|@
      nr  872  <|@ instruction MOV x: [v21|QWORD[.] + v69|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  874  <|@ instruction v70|DWORD = LEA address: [v59|DWORD + 11] size: DWORD <|@ <|@
      nr  876  <|@ instruction MOV x: [v21|QWORD[.] + v70|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  878  <|@ instruction v71|DWORD = LEA address: [v59|DWORD + 12] size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV x: [v21|QWORD[.] + v71|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  882  <|@ instruction v72|DWORD = LEA address: [v59|DWORD + 13] size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV x: [v21|QWORD[.] + v72|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  886  <|@ instruction v73|DWORD = LEA address: [v59|DWORD + 14] size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV x: [v21|QWORD[.] + v73|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  890  <|@ instruction v74|DWORD = LEA address: [v59|DWORD + 15] size: DWORD <|@ <|@
      nr  892  <|@ instruction MOV x: [v21|QWORD[.] + v74|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  894  <|@ instruction v75|DWORD = LEA address: [v59|DWORD + 16] size: DWORD <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  908  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v76|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction MOV x: [v21|QWORD[.] + v76|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  934  <|@ instruction v77|DWORD = INC value: v76|DWORD size: DWORD <|@ <|@
      nr  936  <|@ instruction JUMP ~outgoingValues: [v77|DWORD] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction v78|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr  988  <|@ instruction v79|QWORD = MOVSXD value: v78|DWORD size: QWORD <|@ <|@
      nr  990  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v79|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction MOV x: [v36|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1028  <|@ instruction CMP x: v24|DWORD y: 3 size: DWORD <|@ <|@
      nr 1030  <|@ instruction v80|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v24|DWORD) condition: |<| <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1034  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction MOV x: [v36|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1060  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction v83|DWORD = LEA address: [v24|DWORD - 4] size: DWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1082  <|@ instruction [v84|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction CMPBRANCH (x: v83|DWORD, y: v84|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction MOV x: [v36|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1132  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr 1134  <|@ instruction MOV x: [v36|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1136  <|@ instruction v86|DWORD = LEA address: [v84|DWORD + 2] size: DWORD <|@ <|@
      nr 1138  <|@ instruction MOV x: [v36|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1140  <|@ instruction v87|DWORD = LEA address: [v84|DWORD + 3] size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [v36|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1144  <|@ instruction v88|DWORD = LEA address: [v84|DWORD + 4] size: DWORD <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [v88|DWORD] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [v84|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1158  <|@ instruction [v89|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction CMPBRANCH (x: v24|DWORD, y: v89|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction MOV x: [v36|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1184  <|@ instruction v90|DWORD = INC value: v89|DWORD size: DWORD <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction v91|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction v92|DWORD = MOV input: [v91|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr 1238  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction v93|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1260  <|@ instruction v94|QWORD = LEA address: [v93|QWORD + 80] size: QWORD <|@ <|@
      nr 1262  <|@ instruction CMPBRANCH (x: v94|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction MOV (x: [r15|QWORD + 440], y: v94|QWORD) size: QWORD <|@ <|@
      nr 1302  <|@ instruction AMD64PREFETCH ~address: [v93|QWORD + 336] instr: 0 <|@ <|@
      nr 1304  <|@ instruction MOV x: [v93|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [v93|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr 1308  <|@ instruction MOV x: [v93|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1310  <|@ instruction MOV x: [v93|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1312  <|@ instruction MOV x: [v93|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1314  <|@ instruction MOV x: [v93|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV x: [v93|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr 1318  <|@ instruction MOV x: [v93|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr 1320  <|@ instruction MOV x: [v93|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr 1322  <|@ instruction MOV x: [v93|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr 1324  <|@ instruction MOV x: [v93|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr 1326  <|@ instruction v98|QWORD[.] = MOVE input: v93|QWORD moveKind: QWORD <|@ <|@
      nr 1328  <|@ instruction JUMP ~outgoingValues: [v98|QWORD[.]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1330  <|@ instruction [v99|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction v100|DWORD[_] = COMPRESSPOINTER (input: v52|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1386  <|@ instruction MOV (x: [v99|QWORD[.] + 68], y: v100|DWORD[_]) size: DWORD <|@ <|@
      nr 1388  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v36|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [v99|QWORD[.] + 64], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr 1392  <|@ instruction v102|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1394  <|@ instruction MOV (x: [v99|QWORD[.] + 60], y: v102|DWORD[_]) size: DWORD <|@ <|@
      nr 1396  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1398  <|@ instruction MOV (x: [v99|QWORD[.] + 56], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr 1400  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1402  <|@ instruction MOV (x: [v99|QWORD[.] + 52], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr 1404  <|@ instruction MOVB x: [v99|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr 1406  <|@ instruction MOV x: [v99|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr 1408  <|@ instruction MOV x: [v99|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [v99|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr 1412  <|@ instruction v105|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1414  <|@ instruction rcx|DWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr 1416  <|@ instruction v106|DWORD = SHR (x: v92|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1418  <|@ instruction MOV (x: [v99|QWORD[.] + 16], y: v106|DWORD) size: DWORD <|@ <|@
      nr 1420  <|@ instruction rax|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction v95|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr 1456  <|@ instruction rsi|QWORD = MOVE input: v95|QWORD moveKind: QWORD <|@ <|@
      nr 1458  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr 1460  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1462  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [v96|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr 1464  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction v45|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction rdx|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr 1494  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1496  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:4] <|@ <|@
      nr 1500  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1504  <|@ instruction v112|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rsi|QWORD = MOVE input: v112|QWORD moveKind: QWORD <|@ <|@
      nr 1526  <|@ instruction rdx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr 1528  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1530  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1532  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:4] <|@ <|@
      nr 1534  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction v111|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction rsi|QWORD = MOVE input: v111|QWORD moveKind: QWORD <|@ <|@
      nr 1560  <|@ instruction rdx|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr 1562  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1564  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1566  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v30|QWORD[.]] state [bci:4] <|@ <|@
      nr 1568  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr 1592  <|@ instruction ZERO_MEMORY (pointer: [v37|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1594  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction rcx|QWORD = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr 1618  <|@ instruction ZERO_MEMORY (pointer: [v3|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction rcx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction ZERO_MEMORY (pointer: [v22|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [int[-57395|0xffffffffffff1fcd], long[1300|0x514]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [int[-85779|0xfffffffffffeb0ed], long[660|0x294]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1700  <|@ instruction [v107|DWORD, v108|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v107|DWORD) size: DWORD <|@ <|@
      nr 1718  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v108|QWORD) size: QWORD <|@ <|@
      nr 1720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction JUMP ~outgoingValues: [int[-61467|0xffffffffffff0fe5], long[0|0x0]] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction JUMP ~outgoingValues: [int[-50459|0xffffffffffff3ae5], long[1944|0x798]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1742  <|@ instruction [v109|DWORD, v110|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v109|DWORD) size: DWORD <|@ <|@
      nr 1760  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v110|QWORD) size: QWORD <|@ <|@
      nr 1762  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD = MOVZXB input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   74  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   76  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   78  <|@ instruction CMP x: v5|DWORD y: 10 size: DWORD <|@ <|@
      nr   80  <|@ instruction v7|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   82  <|@ instruction v6|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v7|DWORD) condition: < <|@ <|@
      nr   84  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction v10|QWORD = SHL x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr   90  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr   92  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr   94  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v4|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  136  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction MOV (x: [v3|QWORD + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction v16|QWORD = LEA address: [v12|QWORD - 16] size: QWORD <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH x: v16|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  156  <|@ instruction [v17|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v17|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction MOV x: [v3|QWORD + v17|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 8] size: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [v18|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction v20|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  246  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  248  <|@ instruction v24|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  250  <|@ instruction v25|QWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 2 size: QWORD <|@ <|@
      nr  254  <|@ instruction v27|QWORD = LEA address: [v26|QWORD + 23] size: QWORD <|@ <|@
      nr  256  <|@ instruction v28|QWORD = AND x: v27|QWORD y: -8 size: QWORD <|@ <|@
      nr  258  <|@ instruction v29|QWORD = ADD (x: v28|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v23|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 440], y: v29|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  296  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  300  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  304  <|@ instruction MOV (x: [v22|QWORD + 12], y: v24|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction v31|QWORD = LEA address: [v28|QWORD - 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH x: v31|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  320  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v28|QWORD, y: v32|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction MOV x: [v22|QWORD + v32|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  350  <|@ instruction v33|QWORD = LEA address: [v32|QWORD + 8] size: QWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction v35|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  378  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  410  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  412  <|@ instruction v39|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  414  <|@ instruction v40|QWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction v41|QWORD = SHL x: v40|QWORD y: 2 size: QWORD <|@ <|@
      nr  418  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr  420  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr  422  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v38|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  460  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  462  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  464  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  468  <|@ instruction MOV (x: [v37|QWORD + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction v47|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  484  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction MOV x: [v37|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  514  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction v51|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  542  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction v53|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction v54|QWORD = MOVSXD value: v53|DWORD size: QWORD <|@ <|@
      nr  584  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v54|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction MOV x: [v21|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  634  <|@ instruction CMP x: v8|DWORD y: 3 size: DWORD <|@ <|@
      nr  636  <|@ instruction v55|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v8|DWORD) condition: |<| <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  640  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction CMPBRANCH (x: v55|DWORD, y: v56|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction MOV x: [v21|QWORD[.] + v56|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  666  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [v57|DWORD] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v58|DWORD = LEA address: [v8|DWORD - 16] size: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [v56|DWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr  688  <|@ instruction [v59|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v59|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction MOV x: [v21|QWORD[.] + v59|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  834  <|@ instruction v60|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr  836  <|@ instruction MOV x: [v21|QWORD[.] + v60|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  838  <|@ instruction v61|DWORD = LEA address: [v59|DWORD + 2] size: DWORD <|@ <|@
      nr  840  <|@ instruction MOV x: [v21|QWORD[.] + v61|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  842  <|@ instruction v62|DWORD = LEA address: [v59|DWORD + 3] size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [v21|QWORD[.] + v62|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  846  <|@ instruction v63|DWORD = LEA address: [v59|DWORD + 4] size: DWORD <|@ <|@
      nr  848  <|@ instruction MOV x: [v21|QWORD[.] + v63|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  850  <|@ instruction v64|DWORD = LEA address: [v59|DWORD + 5] size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV x: [v21|QWORD[.] + v64|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  854  <|@ instruction v65|DWORD = LEA address: [v59|DWORD + 6] size: DWORD <|@ <|@
      nr  856  <|@ instruction MOV x: [v21|QWORD[.] + v65|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  858  <|@ instruction v66|DWORD = LEA address: [v59|DWORD + 7] size: DWORD <|@ <|@
      nr  860  <|@ instruction MOV x: [v21|QWORD[.] + v66|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  862  <|@ instruction v67|DWORD = LEA address: [v59|DWORD + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction MOV x: [v21|QWORD[.] + v67|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  866  <|@ instruction v68|DWORD = LEA address: [v59|DWORD + 9] size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV x: [v21|QWORD[.] + v68|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  870  <|@ instruction v69|DWORD = LEA address: [v59|DWORD + 10] size: DWORD <|@ <|@
      nr  872  <|@ instruction MOV x: [v21|QWORD[.] + v69|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  874  <|@ instruction v70|DWORD = LEA address: [v59|DWORD + 11] size: DWORD <|@ <|@
      nr  876  <|@ instruction MOV x: [v21|QWORD[.] + v70|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  878  <|@ instruction v71|DWORD = LEA address: [v59|DWORD + 12] size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV x: [v21|QWORD[.] + v71|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  882  <|@ instruction v72|DWORD = LEA address: [v59|DWORD + 13] size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV x: [v21|QWORD[.] + v72|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  886  <|@ instruction v73|DWORD = LEA address: [v59|DWORD + 14] size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV x: [v21|QWORD[.] + v73|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  890  <|@ instruction v74|DWORD = LEA address: [v59|DWORD + 15] size: DWORD <|@ <|@
      nr  892  <|@ instruction MOV x: [v21|QWORD[.] + v74|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  894  <|@ instruction v75|DWORD = LEA address: [v59|DWORD + 16] size: DWORD <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  908  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v76|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction MOV x: [v21|QWORD[.] + v76|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  934  <|@ instruction v77|DWORD = INC value: v76|DWORD size: DWORD <|@ <|@
      nr  936  <|@ instruction JUMP ~outgoingValues: [v77|DWORD] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction v78|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr  988  <|@ instruction v79|QWORD = MOVSXD value: v78|DWORD size: QWORD <|@ <|@
      nr  990  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v79|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction MOV x: [v36|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1028  <|@ instruction CMP x: v24|DWORD y: 3 size: DWORD <|@ <|@
      nr 1030  <|@ instruction v80|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v24|DWORD) condition: |<| <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1034  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction MOV x: [v36|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1060  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction v83|DWORD = LEA address: [v24|DWORD - 4] size: DWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1082  <|@ instruction [v84|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction CMPBRANCH (x: v83|DWORD, y: v84|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction MOV x: [v36|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1132  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr 1134  <|@ instruction MOV x: [v36|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1136  <|@ instruction v86|DWORD = LEA address: [v84|DWORD + 2] size: DWORD <|@ <|@
      nr 1138  <|@ instruction MOV x: [v36|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1140  <|@ instruction v87|DWORD = LEA address: [v84|DWORD + 3] size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [v36|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1144  <|@ instruction v88|DWORD = LEA address: [v84|DWORD + 4] size: DWORD <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [v88|DWORD] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [v84|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1158  <|@ instruction [v89|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction CMPBRANCH (x: v24|DWORD, y: v89|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction MOV x: [v36|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1184  <|@ instruction v90|DWORD = INC value: v89|DWORD size: DWORD <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction v91|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction v92|DWORD = MOV input: [v91|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr 1238  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction v93|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1260  <|@ instruction v94|QWORD = LEA address: [v93|QWORD + 80] size: QWORD <|@ <|@
      nr 1262  <|@ instruction CMPBRANCH (x: v94|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction MOV (x: [r15|QWORD + 440], y: v94|QWORD) size: QWORD <|@ <|@
      nr 1302  <|@ instruction AMD64PREFETCH ~address: [v93|QWORD + 336] instr: 0 <|@ <|@
      nr 1304  <|@ instruction MOV x: [v93|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [v93|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr 1308  <|@ instruction MOV x: [v93|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1310  <|@ instruction MOV x: [v93|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1312  <|@ instruction MOV x: [v93|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1314  <|@ instruction MOV x: [v93|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV x: [v93|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr 1318  <|@ instruction MOV x: [v93|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr 1320  <|@ instruction MOV x: [v93|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr 1322  <|@ instruction MOV x: [v93|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr 1324  <|@ instruction MOV x: [v93|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr 1326  <|@ instruction v98|QWORD[.] = MOVE input: v93|QWORD moveKind: QWORD <|@ <|@
      nr 1328  <|@ instruction JUMP ~outgoingValues: [v98|QWORD[.]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1330  <|@ instruction [v99|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction v100|DWORD[_] = COMPRESSPOINTER (input: v52|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1386  <|@ instruction MOV (x: [v99|QWORD[.] + 68], y: v100|DWORD[_]) size: DWORD <|@ <|@
      nr 1388  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v36|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [v99|QWORD[.] + 64], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr 1392  <|@ instruction v102|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1394  <|@ instruction MOV (x: [v99|QWORD[.] + 60], y: v102|DWORD[_]) size: DWORD <|@ <|@
      nr 1396  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1398  <|@ instruction MOV (x: [v99|QWORD[.] + 56], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr 1400  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1402  <|@ instruction MOV (x: [v99|QWORD[.] + 52], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr 1404  <|@ instruction MOVB x: [v99|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr 1406  <|@ instruction MOV x: [v99|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr 1408  <|@ instruction MOV x: [v99|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [v99|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr 1412  <|@ instruction v105|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1414  <|@ instruction rcx|DWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr 1416  <|@ instruction v106|DWORD = SHR (x: v92|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1418  <|@ instruction MOV (x: [v99|QWORD[.] + 16], y: v106|DWORD) size: DWORD <|@ <|@
      nr 1420  <|@ instruction rax|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction v95|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr 1456  <|@ instruction rsi|QWORD = MOVE input: v95|QWORD moveKind: QWORD <|@ <|@
      nr 1458  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr 1460  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1462  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [v96|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr 1464  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction v45|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction rdx|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr 1494  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1496  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:4] <|@ <|@
      nr 1500  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1504  <|@ instruction v112|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rsi|QWORD = MOVE input: v112|QWORD moveKind: QWORD <|@ <|@
      nr 1526  <|@ instruction rdx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr 1528  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1530  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1532  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:4] <|@ <|@
      nr 1534  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction v111|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction rsi|QWORD = MOVE input: v111|QWORD moveKind: QWORD <|@ <|@
      nr 1560  <|@ instruction rdx|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr 1562  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1564  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1566  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v30|QWORD[.]] state [bci:4] <|@ <|@
      nr 1568  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr 1592  <|@ instruction ZERO_MEMORY (pointer: [v37|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1594  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction rcx|QWORD = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr 1618  <|@ instruction ZERO_MEMORY (pointer: [v3|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction rcx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction ZERO_MEMORY (pointer: [v22|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [int[-57395|0xffffffffffff1fcd], long[1300|0x514]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [int[-85779|0xfffffffffffeb0ed], long[660|0x294]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1700  <|@ instruction [v107|DWORD, v108|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v107|DWORD) size: DWORD <|@ <|@
      nr 1718  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v108|QWORD) size: QWORD <|@ <|@
      nr 1720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction JUMP ~outgoingValues: [int[-61467|0xffffffffffff0fe5], long[0|0x0]] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction JUMP ~outgoingValues: [int[-50459|0xffffffffffff3ae5], long[1944|0x798]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1742  <|@ instruction [v109|DWORD, v110|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v109|DWORD) size: DWORD <|@ <|@
      nr 1760  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v110|QWORD) size: QWORD <|@ <|@
      nr 1762  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v99|q [0, 1[[1420, 1422[[1458, 1460[[1494, 1496[[1528, 1530[[1562, 1564[[1592, 1593[[1618, 1619[[1644, 1645[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v105|d [0, 1[[1414, 1417[[1590, 1593[[1616, 1619[[1642, 1645[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v39|d [0, 26[[1492, 1494[[1526, 1528[[1560, 1562[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 20[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v95|q [0, 24[[1456, 1458[[1490, 1494[[1524, 1528[[1558, 1562[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[1592, 1593[[1618, 1619[[1644, 1645[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [24, 1400[[1424, 1679[[1680, 1721[[1722, 1763[24 MustHaveRegister 28 MustHaveRegister 76 MustHaveRegister 248 MustHaveRegister 412 MustHaveRegister 1400 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|d [26, 1412[[1424, 1679[[1680, 1721[[1722, 1763[26 MustHaveRegister 1218 MustHaveRegister 1234 MustHaveRegister 1392 MustHaveRegister 1412 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [28, 618[[1466, 1658[[1722, 1763[28 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q -1 [72, 210[[1596, 1622[72 MustHaveRegister 94 ShouldHaveRegister 130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 184 MustHaveRegister 189 LiveAtLoopEnd 210 ShouldHaveRegister 1618 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [74, 96[74 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [76, 82[76 MustHaveRegister 78 ShouldHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d v5|d [82, 616[[1466, 1648[82 MustHaveRegister 84 ShouldHaveRegister 552 ShouldHaveRegister 616 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [80, 83[80 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v6|d [84, 938[[1466, 1648[84 MustHaveRegister 86 ShouldHaveRegister 140 MustHaveRegister 564 ShouldHaveRegister 580 ShouldHaveRegister 634 ShouldHaveRegister 636 MustHaveRegister 684 MustHaveRegister 918 MustHaveRegister 937 LiveAtLoopEnd 1526 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v8|d [86, 584[[1466, 1648[86 MustHaveRegister 88 MustHaveRegister 584 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v9|q [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v11|q [92, 190[92 MustHaveRegister 94 ShouldHaveRegister 130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 142 MustHaveRegister 166 MustHaveRegister 189 LiveAtLoopEnd  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v12|q [94, 128[94 MustHaveRegister 96 MustHaveRegister 128 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q rax|q [1530, 1535[1530 MustHaveRegister 1532 MustHaveRegister 1534 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [142, 146[[1596, 1616[142 MustHaveRegister 144 ShouldHaveRegister 1616 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v18|q [156, 186[166 ShouldHaveRegister 184 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q v17|q [186, 189[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v3|q [210, 213[210 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v20|q [214, 1396[[1424, 1502[[1536, 1596[[1622, 1648[[1658, 1679[[1680, 1721[632 MustHaveRegister 664 MustHaveRegister 669 LiveAtLoopEnd 832 MustHaveRegister 836 MustHaveRegister 840 MustHaveRegister 844 MustHaveRegister 848 MustHaveRegister 852 MustHaveRegister 856 MustHaveRegister 860 MustHaveRegister 864 MustHaveRegister 868 MustHaveRegister 872 MustHaveRegister 876 MustHaveRegister 880 MustHaveRegister 884 MustHaveRegister 888 MustHaveRegister 892 MustHaveRegister 897 LiveAtLoopEnd 932 MustHaveRegister 937 LiveAtLoopEnd 1396 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q -1 [244, 374[[1622, 1648[244 MustHaveRegister 258 ShouldHaveRegister 294 MustHaveRegister 296 MustHaveRegister 298 MustHaveRegister 300 MustHaveRegister 302 MustHaveRegister 304 MustHaveRegister 348 MustHaveRegister 353 LiveAtLoopEnd 374 ShouldHaveRegister 1644 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q -1 [246, 260[246 MustHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d -1 [248, 1188[[1424, 1434[[1466, 1502[[1536, 1596[[1622, 1648[248 MustHaveRegister 250 ShouldHaveRegister 304 MustHaveRegister 958 MustHaveRegister 970 ShouldHaveRegister 986 ShouldHaveRegister 1028 ShouldHaveRegister 1030 MustHaveRegister 1078 MustHaveRegister 1168 MustHaveRegister 1187 LiveAtLoopEnd 1560 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q v24|d [250, 990[[1424, 1434[[1466, 1502[[1536, 1596[[1622, 1648[250 MustHaveRegister 252 MustHaveRegister 990 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q v25|q [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q -1 [254, 256[254 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q v27|q [256, 354[256 MustHaveRegister 258 ShouldHaveRegister 294 MustHaveRegister 296 MustHaveRegister 298 MustHaveRegister 306 MustHaveRegister 330 MustHaveRegister 353 LiveAtLoopEnd  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v28|q [258, 292[258 MustHaveRegister 260 MustHaveRegister 292 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q rax|q [1564, 1569[1564 MustHaveRegister 1566 MustHaveRegister 1568 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q -1 [306, 310[[1622, 1642[306 MustHaveRegister 308 ShouldHaveRegister 1642 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v33|q [320, 350[330 ShouldHaveRegister 348 MustHaveRegister 350 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q v32|q [350, 353[350 MustHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v22|q [374, 377[374 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v35|q [378, 1388[[1424, 1502[[1570, 1596[[1658, 1679[[1680, 1721[1026 MustHaveRegister 1058 MustHaveRegister 1063 LiveAtLoopEnd 1130 MustHaveRegister 1134 MustHaveRegister 1138 MustHaveRegister 1142 MustHaveRegister 1147 LiveAtLoopEnd 1182 MustHaveRegister 1187 LiveAtLoopEnd 1388 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [408, 538[[1570, 1596[408 MustHaveRegister 422 ShouldHaveRegister 458 MustHaveRegister 460 MustHaveRegister 462 MustHaveRegister 464 MustHaveRegister 466 MustHaveRegister 468 MustHaveRegister 512 MustHaveRegister 517 LiveAtLoopEnd 538 ShouldHaveRegister 1592 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q -1 [410, 424[410 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [412, 1238[[1424, 1434[[1466, 1502[[1570, 1596[412 MustHaveRegister 414 ShouldHaveRegister 468 MustHaveRegister 1238 MustHaveRegister 1492 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v39|d [414, 416[414 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q v40|q [416, 418[416 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q -1 [418, 420[418 MustHaveRegister 420 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v42|q [420, 518[420 MustHaveRegister 422 ShouldHaveRegister 458 MustHaveRegister 460 MustHaveRegister 462 MustHaveRegister 470 MustHaveRegister 494 MustHaveRegister 517 LiveAtLoopEnd  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v43|q [422, 456[422 MustHaveRegister 424 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q -1 [1488, 1490[1488 MustHaveRegister 1490 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q rax|q [1496, 1501[1496 MustHaveRegister 1498 MustHaveRegister 1500 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q -1 [470, 474[[1570, 1590[470 MustHaveRegister 472 ShouldHaveRegister 1590 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q v49|q [484, 514[494 ShouldHaveRegister 512 MustHaveRegister 514 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v48|q [514, 517[514 MustHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q v37|q [538, 541[538 MustHaveRegister 540 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q v51|q [542, 1384[[1424, 1466[[1658, 1679[[1680, 1721[1384 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d v8|d [580, 582[580 MustHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q -1 [582, 584[582 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[v55|d]" v55|d -1 [636, 670[636 MustHaveRegister 650 MustHaveRegister 669 LiveAtLoopEnd  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d v57|d [640, 666[[670, 687[650 ShouldHaveRegister 664 MustHaveRegister 666 ShouldHaveRegister 686 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[v57|d]" v57|d v56|d [666, 669[666 MustHaveRegister 668 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[v58|d]" v58|d -1 [684, 898[684 MustHaveRegister 698 MustHaveRegister 897 LiveAtLoopEnd  "NoSpillStore"
  v59|d DWORD "[v59|d]" v59|d v56|d [688, 894[[898, 907[698 ShouldHaveRegister 832 MustHaveRegister 834 ShouldHaveRegister 838 MustHaveRegister 842 MustHaveRegister 846 MustHaveRegister 850 MustHaveRegister 854 MustHaveRegister 858 MustHaveRegister 862 MustHaveRegister 866 MustHaveRegister 870 MustHaveRegister 874 MustHaveRegister 878 MustHaveRegister 882 MustHaveRegister 886 MustHaveRegister 890 MustHaveRegister 894 MustHaveRegister 906 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[v60|d]" v60|d v59|d [834, 836[834 MustHaveRegister 836 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[v61|d]" v61|d -1 [838, 840[838 MustHaveRegister 840 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[v62|d]" v62|d -1 [842, 844[842 MustHaveRegister 844 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[v63|d]" v63|d -1 [846, 848[846 MustHaveRegister 848 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[v64|d]" v64|d -1 [850, 852[850 MustHaveRegister 852 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[v65|d]" v65|d -1 [854, 856[854 MustHaveRegister 856 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[v66|d]" v66|d -1 [858, 860[858 MustHaveRegister 860 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[v67|d]" v67|d -1 [862, 864[862 MustHaveRegister 864 MustHaveRegister  "NoSpillStore"
  v68|d DWORD "[v68|d]" v68|d -1 [866, 868[866 MustHaveRegister 868 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[v69|d]" v69|d -1 [870, 872[870 MustHaveRegister 872 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[v70|d]" v70|d -1 [874, 876[874 MustHaveRegister 876 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[v71|d]" v71|d -1 [878, 880[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v72|d DWORD "[v72|d]" v72|d -1 [882, 884[882 MustHaveRegister 884 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[v73|d]" v73|d -1 [886, 888[886 MustHaveRegister 888 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[v74|d]" v74|d -1 [890, 892[890 MustHaveRegister 892 MustHaveRegister  "NoSpillStore"
  v75|d DWORD "[v75|d]" v75|d -1 [894, 897[894 MustHaveRegister 896 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[v76|d]" v76|d v59|d [908, 934[918 ShouldHaveRegister 932 MustHaveRegister 934 ShouldHaveRegister  "NoSpillStore"
  v77|d DWORD "[v77|d]" v77|d v76|d [934, 937[934 MustHaveRegister 936 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[v78|d]" v78|d v24|d [986, 988[986 MustHaveRegister 988 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[v79|q]" v79|q -1 [988, 990[988 MustHaveRegister 990 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[v80|d]" v80|d -1 [1030, 1064[1030 MustHaveRegister 1044 MustHaveRegister 1063 LiveAtLoopEnd  "NoSpillStore"
  v81|d DWORD "[v81|d]" v81|d v82|d [1034, 1060[[1064, 1081[1044 ShouldHaveRegister 1058 MustHaveRegister 1060 ShouldHaveRegister 1080 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[v82|d]" v82|d v81|d [1060, 1063[1060 MustHaveRegister 1062 ShouldHaveRegister  "NoSpillStore"
  v83|d DWORD "[v83|d]" v83|d -1 [1078, 1148[1078 MustHaveRegister 1092 MustHaveRegister 1147 LiveAtLoopEnd  "NoSpillStore"
  v84|d DWORD "[v84|d]" v84|d v81|d [1082, 1144[[1148, 1157[1092 ShouldHaveRegister 1130 MustHaveRegister 1132 ShouldHaveRegister 1136 MustHaveRegister 1140 MustHaveRegister 1144 MustHaveRegister 1156 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[v85|d]" v85|d v84|d [1132, 1134[1132 MustHaveRegister 1134 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[v86|d]" v86|d -1 [1136, 1138[1136 MustHaveRegister 1138 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[v87|d]" v87|d -1 [1140, 1142[1140 MustHaveRegister 1142 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[v88|d]" v88|d -1 [1144, 1147[1144 MustHaveRegister 1146 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[v89|d]" v89|d v84|d [1158, 1184[1168 ShouldHaveRegister 1182 MustHaveRegister 1184 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[v90|d]" v90|d v89|d [1184, 1187[1184 MustHaveRegister 1186 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[v91|d]" v91|d -1 [1234, 1236[1234 MustHaveRegister 1236 MustHaveRegister  "NoSpillStore"
  v92|d DWORD "[v92|d]" v92|d -1 [1236, 1416[[1434, 1466[1236 MustHaveRegister 1416 ShouldHaveRegister  "NoSpillStore"
  v93|q QWORD "[v93|q]" v93|q -1 [1258, 1326[1258 MustHaveRegister 1260 MustHaveRegister 1302 MustHaveRegister 1304 MustHaveRegister 1306 MustHaveRegister 1308 MustHaveRegister 1310 MustHaveRegister 1312 MustHaveRegister 1314 MustHaveRegister 1316 MustHaveRegister 1318 MustHaveRegister 1320 MustHaveRegister 1322 MustHaveRegister 1324 MustHaveRegister 1326 ShouldHaveRegister  "NoSpillStore"
  v94|q QWORD "[v94|q]" v94|q -1 [1260, 1300[1260 MustHaveRegister 1262 MustHaveRegister 1300 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[v95|q]" v95|q -1 [1454, 1456[1454 MustHaveRegister 1456 ShouldHaveRegister  "NoSpillStore"
  v96|q QWORD "[v96|q]" v96|q rax|q [1460, 1465[1460 MustHaveRegister 1462 MustHaveRegister 1464 ShouldHaveRegister  "NoSpillStore"
  v98|q QWORD "[v98|q]" v98|q v93|q [1326, 1329[1326 MustHaveRegister 1328 ShouldHaveRegister  "NoSpillStore"
  v99|q QWORD "[v99|q]" v99|q v98|q [1330, 1420[1386 MustHaveRegister 1390 MustHaveRegister 1394 MustHaveRegister 1398 MustHaveRegister 1402 MustHaveRegister 1404 MustHaveRegister 1406 MustHaveRegister 1408 MustHaveRegister 1410 MustHaveRegister 1418 MustHaveRegister 1420 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[v100|d]" v100|d v52|q [1384, 1386[1384 MustHaveRegister 1386 MustHaveRegister  "NoSpillStore"
  v101|d DWORD "[v101|d]" v101|d v36|q [1388, 1390[1388 MustHaveRegister 1390 MustHaveRegister  "NoSpillStore"
  v102|d DWORD "[v102|d]" v102|d v1|q [1392, 1394[1392 MustHaveRegister 1394 MustHaveRegister  "NoSpillStore"
  v103|d DWORD "[v103|d]" v103|d v21|q [1396, 1398[1396 MustHaveRegister 1398 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[v104|d]" v104|d v0|q [1400, 1402[1400 MustHaveRegister 1402 MustHaveRegister  "NoSpillStore"
  v105|d DWORD "[v105|d]" v105|d -1 [1412, 1414[1412 MustHaveRegister 1414 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[v106|d]" v106|d v92|d [1416, 1418[1416 MustHaveRegister 1418 MustHaveRegister  "NoSpillStore"
  v107|d DWORD "[v107|d]" v107|d -1 [1700, 1716[1716 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[v108|q]" v108|q -1 [1700, 1718[1718 MustHaveRegister  "NoSpillStore"
  v109|d DWORD "[v109|d]" v109|d -1 [1742, 1758[1758 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[v110|q]" v110|q -1 [1742, 1760[1760 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[v111|q]" v111|q -1 [1538, 1558[1538 MustHaveRegister 1558 ShouldHaveRegister  "NoSpillStore"
  v112|q QWORD "[v112|q]" v112|q -1 [1504, 1524[1504 MustHaveRegister 1524 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v99|q [0, 1[[1420, 1422[[1458, 1460[[1494, 1496[[1528, 1530[[1562, 1564[[1592, 1593[[1618, 1619[[1644, 1645[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v105|d [0, 1[[1414, 1417[[1590, 1593[[1616, 1619[[1642, 1645[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v39|d [0, 26[[1492, 1494[[1526, 1528[[1560, 1562[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 20[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v95|q [0, 24[[1456, 1458[[1490, 1494[[1524, 1528[[1558, 1562[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[1592, 1593[[1618, 1619[[1644, 1645[ "NoDefinitionFound"
  v0|q QWORD "[r10|q]" v0|q rsi|q [24, 421[24 MustHaveRegister 28 MustHaveRegister 76 MustHaveRegister 248 MustHaveRegister 412 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[r11|q]" v1|q rdx|d [26, 1412[[1424, 1570[26 MustHaveRegister 1218 MustHaveRegister 1234 MustHaveRegister 1392 MustHaveRegister 1412 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[r8|d]" v2|d -1 [28, 378[28 MustHaveRegister 30 MustHaveRegister  "OneSpillStore"
  v3|q QWORD "[r9|q]" v3|q -1 [72, 210[[1596, 1622[72 MustHaveRegister 94 ShouldHaveRegister 130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 184 MustHaveRegister 189 LiveAtLoopEnd 210 ShouldHaveRegister 1618 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rcx|q]" v4|q -1 [74, 96[74 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [76, 82[76 MustHaveRegister 78 ShouldHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rbx|d]" v6|d v5|d [82, 616[[1466, 1648[82 MustHaveRegister 84 ShouldHaveRegister 552 ShouldHaveRegister 616 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rsi|d]" v7|d -1 [80, 83[80 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rbp|d]" v8|d v6|d [84, 938[[1466, 1648[84 MustHaveRegister 86 ShouldHaveRegister 140 MustHaveRegister 564 ShouldHaveRegister 580 ShouldHaveRegister 634 ShouldHaveRegister 636 MustHaveRegister 684 MustHaveRegister 918 MustHaveRegister 937 LiveAtLoopEnd 1526 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[r13|q]" v9|q v8|d [86, 584[[1466, 1648[86 MustHaveRegister 88 MustHaveRegister 584 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q v9|q [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q -1 [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v11|q [92, 190[92 MustHaveRegister 94 ShouldHaveRegister 130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 142 MustHaveRegister 166 MustHaveRegister 189 LiveAtLoopEnd  "NoSpillStore"
  v13|q QWORD "[rsi|q]" v13|q v12|q [94, 128[94 MustHaveRegister 96 MustHaveRegister 128 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q rax|q [1530, 1535[1530 MustHaveRegister 1532 MustHaveRegister 1534 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q -1 [142, 146[[1596, 1616[142 MustHaveRegister 144 ShouldHaveRegister 1616 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rcx|q]" v17|q v18|q [156, 186[166 ShouldHaveRegister 184 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rcx|q]" v18|q v17|q [186, 189[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r9|q]" v20|q v3|q [210, 213[210 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[r9|q]" v21|q v20|q [214, 1396[[1424, 1502[[1536, 1596[[1622, 1648[[1658, 1679[[1680, 1721[632 MustHaveRegister 664 MustHaveRegister 669 LiveAtLoopEnd 832 MustHaveRegister 836 MustHaveRegister 840 MustHaveRegister 844 MustHaveRegister 848 MustHaveRegister 852 MustHaveRegister 856 MustHaveRegister 860 MustHaveRegister 864 MustHaveRegister 868 MustHaveRegister 872 MustHaveRegister 876 MustHaveRegister 880 MustHaveRegister 884 MustHaveRegister 888 MustHaveRegister 892 MustHaveRegister 897 LiveAtLoopEnd 932 MustHaveRegister 937 LiveAtLoopEnd 1396 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q -1 [244, 374[[1622, 1648[244 MustHaveRegister 258 ShouldHaveRegister 294 MustHaveRegister 296 MustHaveRegister 298 MustHaveRegister 300 MustHaveRegister 302 MustHaveRegister 304 MustHaveRegister 348 MustHaveRegister 353 LiveAtLoopEnd 374 ShouldHaveRegister 1644 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rcx|q]" v23|q -1 [246, 260[246 MustHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r14|d]" v24|d -1 [248, 1188[[1424, 1434[[1466, 1502[[1536, 1596[[1622, 1648[248 MustHaveRegister 250 ShouldHaveRegister 304 MustHaveRegister 958 MustHaveRegister 970 ShouldHaveRegister 986 ShouldHaveRegister 1028 ShouldHaveRegister 1030 MustHaveRegister 1078 MustHaveRegister 1168 MustHaveRegister 1187 LiveAtLoopEnd 1560 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdi|q]" v25|q v24|d [250, 990[[1424, 1434[[1466, 1502[[1536, 1570[250 MustHaveRegister 252 MustHaveRegister 990 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v25|q [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q -1 [254, 256[254 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rax|q]" v28|q v27|q [256, 354[256 MustHaveRegister 258 ShouldHaveRegister 294 MustHaveRegister 296 MustHaveRegister 298 MustHaveRegister 306 MustHaveRegister 330 MustHaveRegister 353 LiveAtLoopEnd  "NoSpillStore"
  v29|q QWORD "[rsi|q]" v29|q v28|q [258, 292[258 MustHaveRegister 260 MustHaveRegister 292 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q rax|q [1564, 1569[1564 MustHaveRegister 1566 MustHaveRegister 1568 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rcx|q]" v31|q -1 [306, 310[[1622, 1642[306 MustHaveRegister 308 ShouldHaveRegister 1642 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rcx|q]" v32|q v33|q [320, 350[330 ShouldHaveRegister 348 MustHaveRegister 350 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rcx|q]" v33|q v32|q [350, 353[350 MustHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdx|q]" v35|q v22|q [374, 377[374 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdx|q]" v36|q v35|q [378, 1388[[1424, 1466[1026 MustHaveRegister 1058 MustHaveRegister 1063 LiveAtLoopEnd 1130 MustHaveRegister 1134 MustHaveRegister 1138 MustHaveRegister 1142 MustHaveRegister 1147 LiveAtLoopEnd 1182 MustHaveRegister 1187 LiveAtLoopEnd 1388 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q -1 [408, 538[[1570, 1596[408 MustHaveRegister 422 ShouldHaveRegister 458 MustHaveRegister 460 MustHaveRegister 462 MustHaveRegister 464 MustHaveRegister 466 MustHaveRegister 468 MustHaveRegister 512 MustHaveRegister 517 LiveAtLoopEnd 538 ShouldHaveRegister 1592 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rcx|q]" v38|q -1 [410, 424[410 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rax|d]" v39|d -1 [412, 1238[[1424, 1434[[1466, 1493[412 MustHaveRegister 414 ShouldHaveRegister 468 MustHaveRegister 1238 MustHaveRegister 1492 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[r8|q]" v40|q v39|d [414, 416[414 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[r8|q]" v41|q v40|q [416, 418[416 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[r8|q]" v42|q -1 [418, 420[418 MustHaveRegister 420 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r8|q]" v43|q v42|q [420, 518[420 MustHaveRegister 422 ShouldHaveRegister 458 MustHaveRegister 460 MustHaveRegister 462 MustHaveRegister 470 MustHaveRegister 494 MustHaveRegister 517 LiveAtLoopEnd  "NoSpillStore"
  v44|q QWORD "[r10|q]" v44|q v43|q [422, 456[422 MustHaveRegister 424 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rsi|q]" v45|q -1 [1488, 1490[1488 MustHaveRegister 1490 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q rax|q [1496, 1501[1496 MustHaveRegister 1498 MustHaveRegister 1500 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[r10|q]" v47|q -1 [470, 474[[1570, 1590[470 MustHaveRegister 472 ShouldHaveRegister 1590 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rcx|q]" v48|q v49|q [484, 514[494 ShouldHaveRegister 512 MustHaveRegister 514 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rcx|q]" v49|q v48|q [514, 517[514 MustHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q v37|q [538, 541[538 MustHaveRegister 540 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[r10|q]" v52|q v51|q [542, 1384[[1424, 1466[[1658, 1679[[1680, 1721[1384 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[rcx|d]" v53|d v8|d [580, 582[580 MustHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rcx|q]" v54|q -1 [582, 584[582 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[rcx|d]" v55|d -1 [636, 670[636 MustHaveRegister 650 MustHaveRegister 669 LiveAtLoopEnd  "NoSpillStore"
  v56|d DWORD "[rsi|d]" v56|d v57|d [640, 666[[670, 687[650 ShouldHaveRegister 664 MustHaveRegister 666 ShouldHaveRegister 686 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[rsi|d]" v57|d v56|d [666, 669[666 MustHaveRegister 668 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[rcx|d]" v58|d -1 [684, 898[684 MustHaveRegister 698 MustHaveRegister 897 LiveAtLoopEnd  "NoSpillStore"
  v59|d DWORD "[rsi|d]" v59|d v56|d [688, 894[[898, 907[698 ShouldHaveRegister 832 MustHaveRegister 834 ShouldHaveRegister 838 MustHaveRegister 842 MustHaveRegister 846 MustHaveRegister 850 MustHaveRegister 854 MustHaveRegister 858 MustHaveRegister 862 MustHaveRegister 866 MustHaveRegister 870 MustHaveRegister 874 MustHaveRegister 878 MustHaveRegister 882 MustHaveRegister 886 MustHaveRegister 890 MustHaveRegister 894 MustHaveRegister 906 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[r8|d]" v60|d v59|d [834, 836[834 MustHaveRegister 836 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[r8|d]" v61|d -1 [838, 840[838 MustHaveRegister 840 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[r8|d]" v62|d -1 [842, 844[842 MustHaveRegister 844 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[r8|d]" v63|d -1 [846, 848[846 MustHaveRegister 848 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[r8|d]" v64|d -1 [850, 852[850 MustHaveRegister 852 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[r8|d]" v65|d -1 [854, 856[854 MustHaveRegister 856 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[r8|d]" v66|d -1 [858, 860[858 MustHaveRegister 860 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[r8|d]" v67|d -1 [862, 864[862 MustHaveRegister 864 MustHaveRegister  "NoSpillStore"
  v68|d DWORD "[r8|d]" v68|d -1 [866, 868[866 MustHaveRegister 868 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[r8|d]" v69|d -1 [870, 872[870 MustHaveRegister 872 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[r8|d]" v70|d -1 [874, 876[874 MustHaveRegister 876 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[r8|d]" v71|d -1 [878, 880[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v72|d DWORD "[r8|d]" v72|d -1 [882, 884[882 MustHaveRegister 884 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[r8|d]" v73|d -1 [886, 888[886 MustHaveRegister 888 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[r8|d]" v74|d -1 [890, 892[890 MustHaveRegister 892 MustHaveRegister  "NoSpillStore"
  v75|d DWORD "[rsi|d]" v75|d -1 [894, 897[894 MustHaveRegister 896 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[rsi|d]" v76|d v59|d [908, 934[918 ShouldHaveRegister 932 MustHaveRegister 934 ShouldHaveRegister  "NoSpillStore"
  v77|d DWORD "[rsi|d]" v77|d v76|d [934, 937[934 MustHaveRegister 936 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[rcx|d]" v78|d v24|d [986, 988[986 MustHaveRegister 988 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[rcx|q]" v79|q -1 [988, 990[988 MustHaveRegister 990 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[rcx|d]" v80|d -1 [1030, 1064[1030 MustHaveRegister 1044 MustHaveRegister 1063 LiveAtLoopEnd  "NoSpillStore"
  v81|d DWORD "[rsi|d]" v81|d v82|d [1034, 1060[[1064, 1081[1044 ShouldHaveRegister 1058 MustHaveRegister 1060 ShouldHaveRegister 1080 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[rsi|d]" v82|d v81|d [1060, 1063[1060 MustHaveRegister 1062 ShouldHaveRegister  "NoSpillStore"
  v83|d DWORD "[rcx|d]" v83|d -1 [1078, 1148[1078 MustHaveRegister 1092 MustHaveRegister 1147 LiveAtLoopEnd  "NoSpillStore"
  v84|d DWORD "[rsi|d]" v84|d v81|d [1082, 1144[[1148, 1157[1092 ShouldHaveRegister 1130 MustHaveRegister 1132 ShouldHaveRegister 1136 MustHaveRegister 1140 MustHaveRegister 1144 MustHaveRegister 1156 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[rdi|d]" v85|d v84|d [1132, 1134[1132 MustHaveRegister 1134 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[rdi|d]" v86|d -1 [1136, 1138[1136 MustHaveRegister 1138 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[rdi|d]" v87|d -1 [1140, 1142[1140 MustHaveRegister 1142 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[rsi|d]" v88|d -1 [1144, 1147[1144 MustHaveRegister 1146 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[rsi|d]" v89|d v84|d [1158, 1184[1168 ShouldHaveRegister 1182 MustHaveRegister 1184 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[rsi|d]" v90|d v89|d [1184, 1187[1184 MustHaveRegister 1186 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[rcx|d]" v91|d -1 [1234, 1236[1234 MustHaveRegister 1236 MustHaveRegister  "NoSpillStore"
  v92|d DWORD "[rdi|d]" v92|d -1 [1236, 1416[[1434, 1466[1236 MustHaveRegister 1416 ShouldHaveRegister  "NoSpillStore"
  v93|q QWORD "[rcx|q]" v93|q -1 [1258, 1326[1258 MustHaveRegister 1260 MustHaveRegister 1302 MustHaveRegister 1304 MustHaveRegister 1306 MustHaveRegister 1308 MustHaveRegister 1310 MustHaveRegister 1312 MustHaveRegister 1314 MustHaveRegister 1316 MustHaveRegister 1318 MustHaveRegister 1320 MustHaveRegister 1322 MustHaveRegister 1324 MustHaveRegister 1326 ShouldHaveRegister  "NoSpillStore"
  v94|q QWORD "[rax|q]" v94|q -1 [1260, 1300[1260 MustHaveRegister 1262 MustHaveRegister 1300 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[rsi|q]" v95|q -1 [1454, 1456[1454 MustHaveRegister 1456 ShouldHaveRegister  "NoSpillStore"
  v96|q QWORD "[rax|q]" v96|q rax|q [1460, 1465[1460 MustHaveRegister 1462 MustHaveRegister 1464 ShouldHaveRegister  "NoSpillStore"
  v98|q QWORD "[rcx|q]" v98|q v93|q [1326, 1329[1326 MustHaveRegister 1328 ShouldHaveRegister  "NoSpillStore"
  v99|q QWORD "[rax|q]" v99|q v98|q [1330, 1420[1386 MustHaveRegister 1390 MustHaveRegister 1394 MustHaveRegister 1398 MustHaveRegister 1402 MustHaveRegister 1404 MustHaveRegister 1406 MustHaveRegister 1408 MustHaveRegister 1410 MustHaveRegister 1418 MustHaveRegister 1420 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[r10|d]" v100|d v52|q [1384, 1386[1384 MustHaveRegister 1386 MustHaveRegister  "NoSpillStore"
  v101|d DWORD "[rdx|d]" v101|d v36|q [1388, 1390[1388 MustHaveRegister 1390 MustHaveRegister  "NoSpillStore"
  v102|d DWORD "[rcx|d]" v102|d v1|q [1392, 1394[1392 MustHaveRegister 1394 MustHaveRegister  "NoSpillStore"
  v103|d DWORD "[r9|d]" v103|d v21|q [1396, 1398[1396 MustHaveRegister 1398 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[r10|d]" v104|d v0|q [1400, 1402[1400 MustHaveRegister 1402 MustHaveRegister  "NoSpillStore"
  v105|d DWORD "[rcx|d]" v105|d -1 [1412, 1414[1412 MustHaveRegister 1414 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[rdi|d]" v106|d v92|d [1416, 1418[1416 MustHaveRegister 1418 MustHaveRegister  "NoSpillStore"
  v107|d DWORD "[r11|d]" v107|d -1 [1700, 1716[1716 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[rcx|q]" v108|q -1 [1700, 1718[1718 MustHaveRegister  "NoSpillStore"
  v109|d DWORD "[r10|d]" v109|d -1 [1742, 1758[1758 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[r11|q]" v110|q -1 [1742, 1760[1760 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[rsi|q]" v111|q -1 [1538, 1558[1538 MustHaveRegister 1558 ShouldHaveRegister  "NoSpillStore"
  v112|q QWORD "[rsi|q]" v112|q -1 [1504, 1524[1504 MustHaveRegister 1524 ShouldHaveRegister  "NoSpillStore"
  v113|q QWORD "[rax|q]" v25|q v25|q [1570, 1591[ "NoSpillStore"
  v114|q QWORD "[rdx|q]" v36|q v36|q [1466, 1491[ "NoSpillStore"
  v115|d DWORD "[r10|d]" v39|d v39|d [1493, 1502[ "NoSpillStore"
  v116|d DWORD "[rcx|d]" v2|d v2|d [1742, 1763[ "OneSpillStore"
  v117|d DWORD "[vstack:0|d]" v2|d v2|d [378, 618[[1466, 1658[[1722, 1742[ "OneSpillStore"
  v118|q QWORD "[r8|q]" v0|q v0|q [1330, 1400[[1424, 1679[[1680, 1721[[1722, 1763[1400 MustHaveRegister  "OneSpillStore"
  v119|q QWORD "[vstack:1|q]" v0|q v0|q [421, 1330[ "OneSpillStore"
  v120|q QWORD "[rcx|q]" v36|q v36|q [1491, 1502[ "NoSpillStore"
  v121|q QWORD "[rdi|q]" v36|q v36|q [1570, 1591[ "NoSpillStore"
  v122|d DWORD "[rdx|d]" v39|d v39|d [1570, 1596[ "NoSpillStore"
  v123|q QWORD "[r11|q]" v36|q v36|q [1591, 1596[[1658, 1679[[1680, 1700[ "NoSpillStore"
  v124|q QWORD "[r10|q]" v25|q v25|q [1591, 1596[[1622, 1648[ "NoSpillStore"
  v125|q QWORD "[rdx|q]" v36|q v36|q [1700, 1721[ "NoSpillStore"
  v126|q QWORD "[r9|q]" v1|q v1|q [1742, 1763[ "OneSpillStore"
  v127|q QWORD "[vstack:2|q]" v1|q v1|q [1570, 1679[[1680, 1721[[1722, 1742[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD = MOVZXB input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   74  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   76  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   78  <|@ instruction CMP x: v5|DWORD y: 10 size: DWORD <|@ <|@
      nr   80  <|@ instruction v7|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   82  <|@ instruction v6|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v7|DWORD) condition: < <|@ <|@
      nr   84  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction v10|QWORD = SHL x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr   90  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr   92  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr   94  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v4|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  136  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction MOV (x: [v3|QWORD + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction v16|QWORD = LEA address: [v12|QWORD - 16] size: QWORD <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH x: v16|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  156  <|@ instruction [v17|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v17|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction MOV x: [v3|QWORD + v17|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 8] size: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [v18|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction v20|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  246  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  248  <|@ instruction v24|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  250  <|@ instruction v25|QWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 2 size: QWORD <|@ <|@
      nr  254  <|@ instruction v27|QWORD = LEA address: [v26|QWORD + 23] size: QWORD <|@ <|@
      nr  256  <|@ instruction v28|QWORD = AND x: v27|QWORD y: -8 size: QWORD <|@ <|@
      nr  258  <|@ instruction v29|QWORD = ADD (x: v28|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v23|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 440], y: v29|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  296  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  300  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  304  <|@ instruction MOV (x: [v22|QWORD + 12], y: v24|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction v31|QWORD = LEA address: [v28|QWORD - 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH x: v31|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  320  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v28|QWORD, y: v32|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction MOV x: [v22|QWORD + v32|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  350  <|@ instruction v33|QWORD = LEA address: [v32|QWORD + 8] size: QWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction v35|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  378  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  410  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  412  <|@ instruction v39|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  414  <|@ instruction v40|QWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction v41|QWORD = SHL x: v40|QWORD y: 2 size: QWORD <|@ <|@
      nr  418  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr  420  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v38|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  460  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  462  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  464  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  468  <|@ instruction MOV (x: [v37|QWORD + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction v47|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  484  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction MOV x: [v37|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  514  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction v51|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  542  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction v53|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction v54|QWORD = MOVSXD value: v53|DWORD size: QWORD <|@ <|@
      nr  584  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v54|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction MOV x: [v21|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  634  <|@ instruction CMP x: v8|DWORD y: 3 size: DWORD <|@ <|@
      nr  636  <|@ instruction v55|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v8|DWORD) condition: |<| <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  640  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction CMPBRANCH (x: v55|DWORD, y: v56|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction MOV x: [v21|QWORD[.] + v56|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  666  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [v57|DWORD] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v58|DWORD = LEA address: [v8|DWORD - 16] size: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [v56|DWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr  688  <|@ instruction [v59|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v59|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction MOV x: [v21|QWORD[.] + v59|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  834  <|@ instruction v60|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr  836  <|@ instruction MOV x: [v21|QWORD[.] + v60|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  838  <|@ instruction v61|DWORD = LEA address: [v59|DWORD + 2] size: DWORD <|@ <|@
      nr  840  <|@ instruction MOV x: [v21|QWORD[.] + v61|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  842  <|@ instruction v62|DWORD = LEA address: [v59|DWORD + 3] size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [v21|QWORD[.] + v62|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  846  <|@ instruction v63|DWORD = LEA address: [v59|DWORD + 4] size: DWORD <|@ <|@
      nr  848  <|@ instruction MOV x: [v21|QWORD[.] + v63|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  850  <|@ instruction v64|DWORD = LEA address: [v59|DWORD + 5] size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV x: [v21|QWORD[.] + v64|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  854  <|@ instruction v65|DWORD = LEA address: [v59|DWORD + 6] size: DWORD <|@ <|@
      nr  856  <|@ instruction MOV x: [v21|QWORD[.] + v65|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  858  <|@ instruction v66|DWORD = LEA address: [v59|DWORD + 7] size: DWORD <|@ <|@
      nr  860  <|@ instruction MOV x: [v21|QWORD[.] + v66|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  862  <|@ instruction v67|DWORD = LEA address: [v59|DWORD + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction MOV x: [v21|QWORD[.] + v67|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  866  <|@ instruction v68|DWORD = LEA address: [v59|DWORD + 9] size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV x: [v21|QWORD[.] + v68|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  870  <|@ instruction v69|DWORD = LEA address: [v59|DWORD + 10] size: DWORD <|@ <|@
      nr  872  <|@ instruction MOV x: [v21|QWORD[.] + v69|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  874  <|@ instruction v70|DWORD = LEA address: [v59|DWORD + 11] size: DWORD <|@ <|@
      nr  876  <|@ instruction MOV x: [v21|QWORD[.] + v70|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  878  <|@ instruction v71|DWORD = LEA address: [v59|DWORD + 12] size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV x: [v21|QWORD[.] + v71|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  882  <|@ instruction v72|DWORD = LEA address: [v59|DWORD + 13] size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV x: [v21|QWORD[.] + v72|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  886  <|@ instruction v73|DWORD = LEA address: [v59|DWORD + 14] size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV x: [v21|QWORD[.] + v73|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  890  <|@ instruction v74|DWORD = LEA address: [v59|DWORD + 15] size: DWORD <|@ <|@
      nr  892  <|@ instruction MOV x: [v21|QWORD[.] + v74|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  894  <|@ instruction v75|DWORD = LEA address: [v59|DWORD + 16] size: DWORD <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  908  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v76|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction MOV x: [v21|QWORD[.] + v76|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  934  <|@ instruction v77|DWORD = INC value: v76|DWORD size: DWORD <|@ <|@
      nr  936  <|@ instruction JUMP ~outgoingValues: [v77|DWORD] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction v78|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr  988  <|@ instruction v79|QWORD = MOVSXD value: v78|DWORD size: QWORD <|@ <|@
      nr  990  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v79|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction MOV x: [v36|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1028  <|@ instruction CMP x: v24|DWORD y: 3 size: DWORD <|@ <|@
      nr 1030  <|@ instruction v80|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v24|DWORD) condition: |<| <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1034  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction MOV x: [v36|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1060  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction v83|DWORD = LEA address: [v24|DWORD - 4] size: DWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1082  <|@ instruction [v84|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction CMPBRANCH (x: v83|DWORD, y: v84|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction MOV x: [v36|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1132  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr 1134  <|@ instruction MOV x: [v36|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1136  <|@ instruction v86|DWORD = LEA address: [v84|DWORD + 2] size: DWORD <|@ <|@
      nr 1138  <|@ instruction MOV x: [v36|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1140  <|@ instruction v87|DWORD = LEA address: [v84|DWORD + 3] size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [v36|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1144  <|@ instruction v88|DWORD = LEA address: [v84|DWORD + 4] size: DWORD <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [v88|DWORD] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [v84|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1158  <|@ instruction [v89|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction CMPBRANCH (x: v24|DWORD, y: v89|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction MOV x: [v36|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1184  <|@ instruction v90|DWORD = INC value: v89|DWORD size: DWORD <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction v91|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction v92|DWORD = MOV input: [v91|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr 1238  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction v93|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1260  <|@ instruction v94|QWORD = LEA address: [v93|QWORD + 80] size: QWORD <|@ <|@
      nr 1262  <|@ instruction CMPBRANCH (x: v94|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction MOV (x: [r15|QWORD + 440], y: v94|QWORD) size: QWORD <|@ <|@
      nr 1302  <|@ instruction AMD64PREFETCH ~address: [v93|QWORD + 336] instr: 0 <|@ <|@
      nr 1304  <|@ instruction MOV x: [v93|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [v93|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr 1308  <|@ instruction MOV x: [v93|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1310  <|@ instruction MOV x: [v93|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1312  <|@ instruction MOV x: [v93|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1314  <|@ instruction MOV x: [v93|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV x: [v93|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr 1318  <|@ instruction MOV x: [v93|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr 1320  <|@ instruction MOV x: [v93|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr 1322  <|@ instruction MOV x: [v93|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr 1324  <|@ instruction MOV x: [v93|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr 1326  <|@ instruction v98|QWORD[.] = MOVE input: v93|QWORD moveKind: QWORD <|@ <|@
      nr 1328  <|@ instruction JUMP ~outgoingValues: [v98|QWORD[.]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1330  <|@ instruction [v99|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction v100|DWORD[_] = COMPRESSPOINTER (input: v52|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1386  <|@ instruction MOV (x: [v99|QWORD[.] + 68], y: v100|DWORD[_]) size: DWORD <|@ <|@
      nr 1388  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v36|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [v99|QWORD[.] + 64], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr 1392  <|@ instruction v102|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1394  <|@ instruction MOV (x: [v99|QWORD[.] + 60], y: v102|DWORD[_]) size: DWORD <|@ <|@
      nr 1396  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1398  <|@ instruction MOV (x: [v99|QWORD[.] + 56], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr 1400  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1402  <|@ instruction MOV (x: [v99|QWORD[.] + 52], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr 1404  <|@ instruction MOVB x: [v99|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr 1406  <|@ instruction MOV x: [v99|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr 1408  <|@ instruction MOV x: [v99|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [v99|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr 1412  <|@ instruction v105|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1414  <|@ instruction rcx|DWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr 1416  <|@ instruction v106|DWORD = SHR (x: v92|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1418  <|@ instruction MOV (x: [v99|QWORD[.] + 16], y: v106|DWORD) size: DWORD <|@ <|@
      nr 1420  <|@ instruction rax|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction v95|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr 1456  <|@ instruction rsi|QWORD = MOVE input: v95|QWORD moveKind: QWORD <|@ <|@
      nr 1458  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr 1460  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1462  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [v96|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr 1464  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction v45|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v114|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1492  <|@ instruction rdx|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE input: v39|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1494  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1496  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:4] <|@ <|@
      nr 1500  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1504  <|@ instruction v112|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rsi|QWORD = MOVE input: v112|QWORD moveKind: QWORD <|@ <|@
      nr 1526  <|@ instruction rdx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr 1528  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1530  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1532  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:4] <|@ <|@
      nr 1534  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction v111|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction rsi|QWORD = MOVE input: v111|QWORD moveKind: QWORD <|@ <|@
      nr 1560  <|@ instruction rdx|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr 1562  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1564  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1566  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v30|QWORD[.]] state [bci:4] <|@ <|@
      nr 1568  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v121|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: v113|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1592  <|@ instruction ZERO_MEMORY (pointer: [v37|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1594  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction rcx|QWORD = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr 1618  <|@ instruction ZERO_MEMORY (pointer: [v3|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction rcx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction ZERO_MEMORY (pointer: [v22|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [int[-57395|0xffffffffffff1fcd], long[1300|0x514]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [int[-85779|0xfffffffffffeb0ed], long[660|0x294]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1700  <|@ instruction [v107|DWORD, v108|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v107|DWORD) size: DWORD <|@ <|@
      nr 1718  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v108|QWORD) size: QWORD <|@ <|@
      nr 1720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction JUMP ~outgoingValues: [int[-61467|0xffffffffffff0fe5], long[0|0x0]] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction JUMP ~outgoingValues: [int[-50459|0xffffffffffff3ae5], long[1944|0x798]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1742  <|@ instruction [v109|DWORD, v110|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v109|DWORD) size: DWORD <|@ <|@
      nr 1760  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v110|QWORD) size: QWORD <|@ <|@
      nr 1762  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v99|q [0, 1[[1420, 1422[[1458, 1460[[1494, 1496[[1528, 1530[[1562, 1564[[1592, 1593[[1618, 1619[[1644, 1645[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v105|d [0, 1[[1414, 1417[[1590, 1593[[1616, 1619[[1642, 1645[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v39|d [0, 26[[1492, 1494[[1526, 1528[[1560, 1562[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 20[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v95|q [0, 24[[1456, 1458[[1490, 1494[[1524, 1528[[1558, 1562[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[1592, 1593[[1618, 1619[[1644, 1645[ "NoDefinitionFound"
  v0|q QWORD "[r10|q]" v0|q rsi|q [24, 421[24 MustHaveRegister 28 MustHaveRegister 76 MustHaveRegister 248 MustHaveRegister 412 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[r11|q]" v1|q rdx|d [26, 1412[[1424, 1570[26 MustHaveRegister 1218 MustHaveRegister 1234 MustHaveRegister 1392 MustHaveRegister 1412 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[r8|d]" v2|d -1 [28, 378[28 MustHaveRegister 30 MustHaveRegister  "OneSpillStore"
  v3|q QWORD "[r9|q]" v3|q -1 [72, 210[[1596, 1622[72 MustHaveRegister 94 ShouldHaveRegister 130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 184 MustHaveRegister 189 LiveAtLoopEnd 210 ShouldHaveRegister 1618 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rcx|q]" v4|q -1 [74, 96[74 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [76, 82[76 MustHaveRegister 78 ShouldHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rbx|d]" v6|d v5|d [82, 616[[1466, 1648[82 MustHaveRegister 84 ShouldHaveRegister 552 ShouldHaveRegister 616 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rsi|d]" v7|d -1 [80, 83[80 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rbp|d]" v8|d v6|d [84, 938[[1466, 1648[84 MustHaveRegister 86 ShouldHaveRegister 140 MustHaveRegister 564 ShouldHaveRegister 580 ShouldHaveRegister 634 ShouldHaveRegister 636 MustHaveRegister 684 MustHaveRegister 918 MustHaveRegister 937 LiveAtLoopEnd 1526 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[r13|q]" v9|q v8|d [86, 584[[1466, 1648[86 MustHaveRegister 88 MustHaveRegister 584 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q v9|q [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q -1 [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v11|q [92, 190[92 MustHaveRegister 94 ShouldHaveRegister 130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 142 MustHaveRegister 166 MustHaveRegister 189 LiveAtLoopEnd  "NoSpillStore"
  v13|q QWORD "[rsi|q]" v13|q v12|q [94, 128[94 MustHaveRegister 96 MustHaveRegister 128 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q rax|q [1530, 1535[1530 MustHaveRegister 1532 MustHaveRegister 1534 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q -1 [142, 146[[1596, 1616[142 MustHaveRegister 144 ShouldHaveRegister 1616 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rcx|q]" v17|q v18|q [156, 186[166 ShouldHaveRegister 184 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rcx|q]" v18|q v17|q [186, 189[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r9|q]" v20|q v3|q [210, 213[210 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[r9|q]" v21|q v20|q [214, 1396[[1424, 1502[[1536, 1596[[1622, 1648[[1658, 1679[[1680, 1721[632 MustHaveRegister 664 MustHaveRegister 669 LiveAtLoopEnd 832 MustHaveRegister 836 MustHaveRegister 840 MustHaveRegister 844 MustHaveRegister 848 MustHaveRegister 852 MustHaveRegister 856 MustHaveRegister 860 MustHaveRegister 864 MustHaveRegister 868 MustHaveRegister 872 MustHaveRegister 876 MustHaveRegister 880 MustHaveRegister 884 MustHaveRegister 888 MustHaveRegister 892 MustHaveRegister 897 LiveAtLoopEnd 932 MustHaveRegister 937 LiveAtLoopEnd 1396 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q -1 [244, 374[[1622, 1648[244 MustHaveRegister 258 ShouldHaveRegister 294 MustHaveRegister 296 MustHaveRegister 298 MustHaveRegister 300 MustHaveRegister 302 MustHaveRegister 304 MustHaveRegister 348 MustHaveRegister 353 LiveAtLoopEnd 374 ShouldHaveRegister 1644 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rcx|q]" v23|q -1 [246, 260[246 MustHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r14|d]" v24|d -1 [248, 1188[[1424, 1434[[1466, 1502[[1536, 1596[[1622, 1648[248 MustHaveRegister 250 ShouldHaveRegister 304 MustHaveRegister 958 MustHaveRegister 970 ShouldHaveRegister 986 ShouldHaveRegister 1028 ShouldHaveRegister 1030 MustHaveRegister 1078 MustHaveRegister 1168 MustHaveRegister 1187 LiveAtLoopEnd 1560 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdi|q]" v25|q v24|d [250, 990[[1424, 1434[[1466, 1502[[1536, 1570[250 MustHaveRegister 252 MustHaveRegister 990 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v25|q [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q -1 [254, 256[254 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rax|q]" v28|q v27|q [256, 354[256 MustHaveRegister 258 ShouldHaveRegister 294 MustHaveRegister 296 MustHaveRegister 298 MustHaveRegister 306 MustHaveRegister 330 MustHaveRegister 353 LiveAtLoopEnd  "NoSpillStore"
  v29|q QWORD "[rsi|q]" v29|q v28|q [258, 292[258 MustHaveRegister 260 MustHaveRegister 292 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q rax|q [1564, 1569[1564 MustHaveRegister 1566 MustHaveRegister 1568 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rcx|q]" v31|q -1 [306, 310[[1622, 1642[306 MustHaveRegister 308 ShouldHaveRegister 1642 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rcx|q]" v32|q v33|q [320, 350[330 ShouldHaveRegister 348 MustHaveRegister 350 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rcx|q]" v33|q v32|q [350, 353[350 MustHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdx|q]" v35|q v22|q [374, 377[374 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdx|q]" v36|q v35|q [378, 1388[[1424, 1466[1026 MustHaveRegister 1058 MustHaveRegister 1063 LiveAtLoopEnd 1130 MustHaveRegister 1134 MustHaveRegister 1138 MustHaveRegister 1142 MustHaveRegister 1147 LiveAtLoopEnd 1182 MustHaveRegister 1187 LiveAtLoopEnd 1388 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q -1 [408, 538[[1570, 1596[408 MustHaveRegister 422 ShouldHaveRegister 458 MustHaveRegister 460 MustHaveRegister 462 MustHaveRegister 464 MustHaveRegister 466 MustHaveRegister 468 MustHaveRegister 512 MustHaveRegister 517 LiveAtLoopEnd 538 ShouldHaveRegister 1592 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rcx|q]" v38|q -1 [410, 424[410 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rax|d]" v39|d -1 [412, 1238[[1424, 1434[[1466, 1493[412 MustHaveRegister 414 ShouldHaveRegister 468 MustHaveRegister 1238 MustHaveRegister 1492 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[r8|q]" v40|q v39|d [414, 416[414 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[r8|q]" v41|q v40|q [416, 418[416 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[r8|q]" v42|q -1 [418, 420[418 MustHaveRegister 420 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r8|q]" v43|q v42|q [420, 518[420 MustHaveRegister 422 ShouldHaveRegister 458 MustHaveRegister 460 MustHaveRegister 462 MustHaveRegister 470 MustHaveRegister 494 MustHaveRegister 517 LiveAtLoopEnd  "NoSpillStore"
  v44|q QWORD "[r10|q]" v44|q v43|q [422, 456[422 MustHaveRegister 424 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rsi|q]" v45|q -1 [1488, 1490[1488 MustHaveRegister 1490 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q rax|q [1496, 1501[1496 MustHaveRegister 1498 MustHaveRegister 1500 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[r10|q]" v47|q -1 [470, 474[[1570, 1590[470 MustHaveRegister 472 ShouldHaveRegister 1590 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rcx|q]" v48|q v49|q [484, 514[494 ShouldHaveRegister 512 MustHaveRegister 514 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rcx|q]" v49|q v48|q [514, 517[514 MustHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q v37|q [538, 541[538 MustHaveRegister 540 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[r10|q]" v52|q v51|q [542, 1384[[1424, 1466[[1658, 1679[[1680, 1721[1384 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[rcx|d]" v53|d v8|d [580, 582[580 MustHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rcx|q]" v54|q -1 [582, 584[582 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[rcx|d]" v55|d -1 [636, 670[636 MustHaveRegister 650 MustHaveRegister 669 LiveAtLoopEnd  "NoSpillStore"
  v56|d DWORD "[rsi|d]" v56|d v57|d [640, 666[[670, 687[650 ShouldHaveRegister 664 MustHaveRegister 666 ShouldHaveRegister 686 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[rsi|d]" v57|d v56|d [666, 669[666 MustHaveRegister 668 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[rcx|d]" v58|d -1 [684, 898[684 MustHaveRegister 698 MustHaveRegister 897 LiveAtLoopEnd  "NoSpillStore"
  v59|d DWORD "[rsi|d]" v59|d v56|d [688, 894[[898, 907[698 ShouldHaveRegister 832 MustHaveRegister 834 ShouldHaveRegister 838 MustHaveRegister 842 MustHaveRegister 846 MustHaveRegister 850 MustHaveRegister 854 MustHaveRegister 858 MustHaveRegister 862 MustHaveRegister 866 MustHaveRegister 870 MustHaveRegister 874 MustHaveRegister 878 MustHaveRegister 882 MustHaveRegister 886 MustHaveRegister 890 MustHaveRegister 894 MustHaveRegister 906 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[r8|d]" v60|d v59|d [834, 836[834 MustHaveRegister 836 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[r8|d]" v61|d -1 [838, 840[838 MustHaveRegister 840 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[r8|d]" v62|d -1 [842, 844[842 MustHaveRegister 844 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[r8|d]" v63|d -1 [846, 848[846 MustHaveRegister 848 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[r8|d]" v64|d -1 [850, 852[850 MustHaveRegister 852 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[r8|d]" v65|d -1 [854, 856[854 MustHaveRegister 856 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[r8|d]" v66|d -1 [858, 860[858 MustHaveRegister 860 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[r8|d]" v67|d -1 [862, 864[862 MustHaveRegister 864 MustHaveRegister  "NoSpillStore"
  v68|d DWORD "[r8|d]" v68|d -1 [866, 868[866 MustHaveRegister 868 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[r8|d]" v69|d -1 [870, 872[870 MustHaveRegister 872 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[r8|d]" v70|d -1 [874, 876[874 MustHaveRegister 876 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[r8|d]" v71|d -1 [878, 880[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v72|d DWORD "[r8|d]" v72|d -1 [882, 884[882 MustHaveRegister 884 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[r8|d]" v73|d -1 [886, 888[886 MustHaveRegister 888 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[r8|d]" v74|d -1 [890, 892[890 MustHaveRegister 892 MustHaveRegister  "NoSpillStore"
  v75|d DWORD "[rsi|d]" v75|d -1 [894, 897[894 MustHaveRegister 896 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[rsi|d]" v76|d v59|d [908, 934[918 ShouldHaveRegister 932 MustHaveRegister 934 ShouldHaveRegister  "NoSpillStore"
  v77|d DWORD "[rsi|d]" v77|d v76|d [934, 937[934 MustHaveRegister 936 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[rcx|d]" v78|d v24|d [986, 988[986 MustHaveRegister 988 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[rcx|q]" v79|q -1 [988, 990[988 MustHaveRegister 990 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[rcx|d]" v80|d -1 [1030, 1064[1030 MustHaveRegister 1044 MustHaveRegister 1063 LiveAtLoopEnd  "NoSpillStore"
  v81|d DWORD "[rsi|d]" v81|d v82|d [1034, 1060[[1064, 1081[1044 ShouldHaveRegister 1058 MustHaveRegister 1060 ShouldHaveRegister 1080 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[rsi|d]" v82|d v81|d [1060, 1063[1060 MustHaveRegister 1062 ShouldHaveRegister  "NoSpillStore"
  v83|d DWORD "[rcx|d]" v83|d -1 [1078, 1148[1078 MustHaveRegister 1092 MustHaveRegister 1147 LiveAtLoopEnd  "NoSpillStore"
  v84|d DWORD "[rsi|d]" v84|d v81|d [1082, 1144[[1148, 1157[1092 ShouldHaveRegister 1130 MustHaveRegister 1132 ShouldHaveRegister 1136 MustHaveRegister 1140 MustHaveRegister 1144 MustHaveRegister 1156 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[rdi|d]" v85|d v84|d [1132, 1134[1132 MustHaveRegister 1134 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[rdi|d]" v86|d -1 [1136, 1138[1136 MustHaveRegister 1138 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[rdi|d]" v87|d -1 [1140, 1142[1140 MustHaveRegister 1142 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[rsi|d]" v88|d -1 [1144, 1147[1144 MustHaveRegister 1146 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[rsi|d]" v89|d v84|d [1158, 1184[1168 ShouldHaveRegister 1182 MustHaveRegister 1184 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[rsi|d]" v90|d v89|d [1184, 1187[1184 MustHaveRegister 1186 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[rcx|d]" v91|d -1 [1234, 1236[1234 MustHaveRegister 1236 MustHaveRegister  "NoSpillStore"
  v92|d DWORD "[rdi|d]" v92|d -1 [1236, 1416[[1434, 1466[1236 MustHaveRegister 1416 ShouldHaveRegister  "NoSpillStore"
  v93|q QWORD "[rcx|q]" v93|q -1 [1258, 1326[1258 MustHaveRegister 1260 MustHaveRegister 1302 MustHaveRegister 1304 MustHaveRegister 1306 MustHaveRegister 1308 MustHaveRegister 1310 MustHaveRegister 1312 MustHaveRegister 1314 MustHaveRegister 1316 MustHaveRegister 1318 MustHaveRegister 1320 MustHaveRegister 1322 MustHaveRegister 1324 MustHaveRegister 1326 ShouldHaveRegister  "NoSpillStore"
  v94|q QWORD "[rax|q]" v94|q -1 [1260, 1300[1260 MustHaveRegister 1262 MustHaveRegister 1300 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[rsi|q]" v95|q -1 [1454, 1456[1454 MustHaveRegister 1456 ShouldHaveRegister  "NoSpillStore"
  v96|q QWORD "[rax|q]" v96|q rax|q [1460, 1465[1460 MustHaveRegister 1462 MustHaveRegister 1464 ShouldHaveRegister  "NoSpillStore"
  v98|q QWORD "[rcx|q]" v98|q v93|q [1326, 1329[1326 MustHaveRegister 1328 ShouldHaveRegister  "NoSpillStore"
  v99|q QWORD "[rax|q]" v99|q v98|q [1330, 1420[1386 MustHaveRegister 1390 MustHaveRegister 1394 MustHaveRegister 1398 MustHaveRegister 1402 MustHaveRegister 1404 MustHaveRegister 1406 MustHaveRegister 1408 MustHaveRegister 1410 MustHaveRegister 1418 MustHaveRegister 1420 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[r10|d]" v100|d v52|q [1384, 1386[1384 MustHaveRegister 1386 MustHaveRegister  "NoSpillStore"
  v101|d DWORD "[rdx|d]" v101|d v36|q [1388, 1390[1388 MustHaveRegister 1390 MustHaveRegister  "NoSpillStore"
  v102|d DWORD "[rcx|d]" v102|d v1|q [1392, 1394[1392 MustHaveRegister 1394 MustHaveRegister  "NoSpillStore"
  v103|d DWORD "[r9|d]" v103|d v21|q [1396, 1398[1396 MustHaveRegister 1398 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[r10|d]" v104|d v0|q [1400, 1402[1400 MustHaveRegister 1402 MustHaveRegister  "NoSpillStore"
  v105|d DWORD "[rcx|d]" v105|d -1 [1412, 1414[1412 MustHaveRegister 1414 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[rdi|d]" v106|d v92|d [1416, 1418[1416 MustHaveRegister 1418 MustHaveRegister  "NoSpillStore"
  v107|d DWORD "[r11|d]" v107|d -1 [1700, 1716[1716 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[rcx|q]" v108|q -1 [1700, 1718[1718 MustHaveRegister  "NoSpillStore"
  v109|d DWORD "[r10|d]" v109|d -1 [1742, 1758[1758 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[r11|q]" v110|q -1 [1742, 1760[1760 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[rsi|q]" v111|q -1 [1538, 1558[1538 MustHaveRegister 1558 ShouldHaveRegister  "NoSpillStore"
  v112|q QWORD "[rsi|q]" v112|q -1 [1504, 1524[1504 MustHaveRegister 1524 ShouldHaveRegister  "NoSpillStore"
  v113|q QWORD "[rax|q]" v25|q v25|q [1570, 1591[ "NoSpillStore"
  v114|q QWORD "[rdx|q]" v36|q v36|q [1466, 1491[ "NoSpillStore"
  v115|d DWORD "[r10|d]" v39|d v39|d [1493, 1502[ "NoSpillStore"
  v116|d DWORD "[rcx|d]" v2|d v2|d [1742, 1763[ "OneSpillStore"
  v117|d DWORD "[vstack:0|d]" v2|d v2|d [378, 618[[1466, 1658[[1722, 1742[ "OneSpillStore"
  v118|q QWORD "[r8|q]" v0|q v0|q [1330, 1400[[1424, 1679[[1680, 1721[[1722, 1763[1400 MustHaveRegister  "OneSpillStore"
  v119|q QWORD "[vstack:1|q]" v0|q v0|q [421, 1330[ "OneSpillStore"
  v120|q QWORD "[rcx|q]" v36|q v36|q [1491, 1502[ "NoSpillStore"
  v121|q QWORD "[rdi|q]" v36|q v36|q [1570, 1591[ "NoSpillStore"
  v122|d DWORD "[rdx|d]" v39|d v39|d [1570, 1596[ "NoSpillStore"
  v123|q QWORD "[r11|q]" v36|q v36|q [1591, 1596[[1658, 1679[[1680, 1700[ "NoSpillStore"
  v124|q QWORD "[r10|q]" v25|q v25|q [1591, 1596[[1622, 1648[ "NoSpillStore"
  v125|q QWORD "[rdx|q]" v36|q v36|q [1700, 1721[ "NoSpillStore"
  v126|q QWORD "[r9|q]" v1|q v1|q [1742, 1763[ "OneSpillStore"
  v127|q QWORD "[vstack:2|q]" v1|q v1|q [1570, 1679[[1680, 1721[[1722, 1742[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD = MOVZXB input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   74  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   76  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   78  <|@ instruction CMP x: v5|DWORD y: 10 size: DWORD <|@ <|@
      nr   80  <|@ instruction v7|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   82  <|@ instruction v6|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v7|DWORD) condition: < <|@ <|@
      nr   84  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction v10|QWORD = SHL x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr   90  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr   92  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr   94  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v4|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  136  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction MOV (x: [v3|QWORD + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction v16|QWORD = LEA address: [v12|QWORD - 16] size: QWORD <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH x: v16|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  156  <|@ instruction [v17|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v17|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction MOV x: [v3|QWORD + v17|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 8] size: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [v18|QWORD] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction v20|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  246  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  248  <|@ instruction v24|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  250  <|@ instruction v25|QWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 2 size: QWORD <|@ <|@
      nr  254  <|@ instruction v27|QWORD = LEA address: [v26|QWORD + 23] size: QWORD <|@ <|@
      nr  256  <|@ instruction v28|QWORD = AND x: v27|QWORD y: -8 size: QWORD <|@ <|@
      nr  258  <|@ instruction v29|QWORD = ADD (x: v28|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v23|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 440], y: v29|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  296  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  300  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  304  <|@ instruction MOV (x: [v22|QWORD + 12], y: v24|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction v31|QWORD = LEA address: [v28|QWORD - 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH x: v31|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  320  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v28|QWORD, y: v32|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction MOV x: [v22|QWORD + v32|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  350  <|@ instruction v33|QWORD = LEA address: [v32|QWORD + 8] size: QWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction v35|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  378  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  410  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  412  <|@ instruction v39|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  414  <|@ instruction v40|QWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction v41|QWORD = SHL x: v40|QWORD y: 2 size: QWORD <|@ <|@
      nr  418  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr  420  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v38|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  460  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  462  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  464  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  468  <|@ instruction MOV (x: [v37|QWORD + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction v47|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  484  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction MOV x: [v37|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  514  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction v51|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  542  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction v53|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction v54|QWORD = MOVSXD value: v53|DWORD size: QWORD <|@ <|@
      nr  584  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v54|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction MOV x: [v21|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  634  <|@ instruction CMP x: v8|DWORD y: 3 size: DWORD <|@ <|@
      nr  636  <|@ instruction v55|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v8|DWORD) condition: |<| <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  640  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction CMPBRANCH (x: v55|DWORD, y: v56|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction MOV x: [v21|QWORD[.] + v56|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  666  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [v57|DWORD] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v58|DWORD = LEA address: [v8|DWORD - 16] size: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [v56|DWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr  688  <|@ instruction [v59|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v59|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction MOV x: [v21|QWORD[.] + v59|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  834  <|@ instruction v60|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr  836  <|@ instruction MOV x: [v21|QWORD[.] + v60|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  838  <|@ instruction v61|DWORD = LEA address: [v59|DWORD + 2] size: DWORD <|@ <|@
      nr  840  <|@ instruction MOV x: [v21|QWORD[.] + v61|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  842  <|@ instruction v62|DWORD = LEA address: [v59|DWORD + 3] size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [v21|QWORD[.] + v62|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  846  <|@ instruction v63|DWORD = LEA address: [v59|DWORD + 4] size: DWORD <|@ <|@
      nr  848  <|@ instruction MOV x: [v21|QWORD[.] + v63|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  850  <|@ instruction v64|DWORD = LEA address: [v59|DWORD + 5] size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV x: [v21|QWORD[.] + v64|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  854  <|@ instruction v65|DWORD = LEA address: [v59|DWORD + 6] size: DWORD <|@ <|@
      nr  856  <|@ instruction MOV x: [v21|QWORD[.] + v65|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  858  <|@ instruction v66|DWORD = LEA address: [v59|DWORD + 7] size: DWORD <|@ <|@
      nr  860  <|@ instruction MOV x: [v21|QWORD[.] + v66|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  862  <|@ instruction v67|DWORD = LEA address: [v59|DWORD + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction MOV x: [v21|QWORD[.] + v67|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  866  <|@ instruction v68|DWORD = LEA address: [v59|DWORD + 9] size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV x: [v21|QWORD[.] + v68|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  870  <|@ instruction v69|DWORD = LEA address: [v59|DWORD + 10] size: DWORD <|@ <|@
      nr  872  <|@ instruction MOV x: [v21|QWORD[.] + v69|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  874  <|@ instruction v70|DWORD = LEA address: [v59|DWORD + 11] size: DWORD <|@ <|@
      nr  876  <|@ instruction MOV x: [v21|QWORD[.] + v70|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  878  <|@ instruction v71|DWORD = LEA address: [v59|DWORD + 12] size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV x: [v21|QWORD[.] + v71|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  882  <|@ instruction v72|DWORD = LEA address: [v59|DWORD + 13] size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV x: [v21|QWORD[.] + v72|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  886  <|@ instruction v73|DWORD = LEA address: [v59|DWORD + 14] size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV x: [v21|QWORD[.] + v73|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  890  <|@ instruction v74|DWORD = LEA address: [v59|DWORD + 15] size: DWORD <|@ <|@
      nr  892  <|@ instruction MOV x: [v21|QWORD[.] + v74|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  894  <|@ instruction v75|DWORD = LEA address: [v59|DWORD + 16] size: DWORD <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  908  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v76|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction MOV x: [v21|QWORD[.] + v76|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  934  <|@ instruction v77|DWORD = INC value: v76|DWORD size: DWORD <|@ <|@
      nr  936  <|@ instruction JUMP ~outgoingValues: [v77|DWORD] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction v78|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr  988  <|@ instruction v79|QWORD = MOVSXD value: v78|DWORD size: QWORD <|@ <|@
      nr  990  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v79|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction MOV x: [v36|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1028  <|@ instruction CMP x: v24|DWORD y: 3 size: DWORD <|@ <|@
      nr 1030  <|@ instruction v80|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v24|DWORD) condition: |<| <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1034  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction MOV x: [v36|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1060  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction v83|DWORD = LEA address: [v24|DWORD - 4] size: DWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1082  <|@ instruction [v84|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction CMPBRANCH (x: v83|DWORD, y: v84|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction MOV x: [v36|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1132  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr 1134  <|@ instruction MOV x: [v36|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1136  <|@ instruction v86|DWORD = LEA address: [v84|DWORD + 2] size: DWORD <|@ <|@
      nr 1138  <|@ instruction MOV x: [v36|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1140  <|@ instruction v87|DWORD = LEA address: [v84|DWORD + 3] size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [v36|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1144  <|@ instruction v88|DWORD = LEA address: [v84|DWORD + 4] size: DWORD <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [v88|DWORD] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [v84|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1158  <|@ instruction [v89|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction CMPBRANCH (x: v24|DWORD, y: v89|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction MOV x: [v36|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1184  <|@ instruction v90|DWORD = INC value: v89|DWORD size: DWORD <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction v91|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction v92|DWORD = MOV input: [v91|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr 1238  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction v93|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1260  <|@ instruction v94|QWORD = LEA address: [v93|QWORD + 80] size: QWORD <|@ <|@
      nr 1262  <|@ instruction CMPBRANCH (x: v94|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction MOV (x: [r15|QWORD + 440], y: v94|QWORD) size: QWORD <|@ <|@
      nr 1302  <|@ instruction AMD64PREFETCH ~address: [v93|QWORD + 336] instr: 0 <|@ <|@
      nr 1304  <|@ instruction MOV x: [v93|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [v93|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr 1308  <|@ instruction MOV x: [v93|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1310  <|@ instruction MOV x: [v93|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1312  <|@ instruction MOV x: [v93|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1314  <|@ instruction MOV x: [v93|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV x: [v93|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr 1318  <|@ instruction MOV x: [v93|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr 1320  <|@ instruction MOV x: [v93|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr 1322  <|@ instruction MOV x: [v93|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr 1324  <|@ instruction MOV x: [v93|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr 1326  <|@ instruction v98|QWORD[.] = MOVE input: v93|QWORD moveKind: QWORD <|@ <|@
      nr 1328  <|@ instruction JUMP ~outgoingValues: [v98|QWORD[.]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1330  <|@ instruction [v99|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction v100|DWORD[_] = COMPRESSPOINTER (input: v52|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1386  <|@ instruction MOV (x: [v99|QWORD[.] + 68], y: v100|DWORD[_]) size: DWORD <|@ <|@
      nr 1388  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v36|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [v99|QWORD[.] + 64], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr 1392  <|@ instruction v102|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1394  <|@ instruction MOV (x: [v99|QWORD[.] + 60], y: v102|DWORD[_]) size: DWORD <|@ <|@
      nr 1396  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1398  <|@ instruction MOV (x: [v99|QWORD[.] + 56], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr 1400  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1402  <|@ instruction MOV (x: [v99|QWORD[.] + 52], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr 1404  <|@ instruction MOVB x: [v99|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr 1406  <|@ instruction MOV x: [v99|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr 1408  <|@ instruction MOV x: [v99|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [v99|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr 1412  <|@ instruction v105|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1414  <|@ instruction rcx|DWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr 1416  <|@ instruction v106|DWORD = SHR (x: v92|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1418  <|@ instruction MOV (x: [v99|QWORD[.] + 16], y: v106|DWORD) size: DWORD <|@ <|@
      nr 1420  <|@ instruction rax|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction v95|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr 1456  <|@ instruction rsi|QWORD = MOVE input: v95|QWORD moveKind: QWORD <|@ <|@
      nr 1458  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr 1460  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1462  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [v96|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr 1464  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction v45|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v114|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1492  <|@ instruction rdx|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE input: v39|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1494  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1496  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:4] <|@ <|@
      nr 1500  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1504  <|@ instruction v112|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rsi|QWORD = MOVE input: v112|QWORD moveKind: QWORD <|@ <|@
      nr 1526  <|@ instruction rdx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr 1528  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1530  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1532  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:4] <|@ <|@
      nr 1534  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction v111|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction rsi|QWORD = MOVE input: v111|QWORD moveKind: QWORD <|@ <|@
      nr 1560  <|@ instruction rdx|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr 1562  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1564  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1566  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v30|QWORD[.]] state [bci:4] <|@ <|@
      nr 1568  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v121|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: v113|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1592  <|@ instruction ZERO_MEMORY (pointer: [v37|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1594  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction rcx|QWORD = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr 1618  <|@ instruction ZERO_MEMORY (pointer: [v3|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction rcx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction ZERO_MEMORY (pointer: [v22|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [int[-57395|0xffffffffffff1fcd], long[1300|0x514]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [int[-85779|0xfffffffffffeb0ed], long[660|0x294]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1700  <|@ instruction [v107|DWORD, v108|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v107|DWORD) size: DWORD <|@ <|@
      nr 1718  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v108|QWORD) size: QWORD <|@ <|@
      nr 1720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction JUMP ~outgoingValues: [int[-61467|0xffffffffffff0fe5], long[0|0x0]] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction JUMP ~outgoingValues: [int[-50459|0xffffffffffff3ae5], long[1944|0x798]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1742  <|@ instruction [v109|DWORD, v110|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v109|DWORD) size: DWORD <|@ <|@
      nr 1760  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v110|QWORD) size: QWORD <|@ <|@
      nr 1762  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v99|q [0, 1[[1420, 1422[[1458, 1460[[1494, 1496[[1528, 1530[[1562, 1564[[1592, 1593[[1618, 1619[[1644, 1645[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v105|d [0, 1[[1414, 1417[[1590, 1593[[1616, 1619[[1642, 1645[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v39|d [0, 26[[1492, 1494[[1526, 1528[[1560, 1562[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 20[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v95|q [0, 24[[1456, 1458[[1490, 1494[[1524, 1528[[1558, 1562[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[1592, 1593[[1618, 1619[[1644, 1645[ "NoDefinitionFound"
  v0|q QWORD "[r10|q]" v0|q rsi|q [24, 421[24 MustHaveRegister 28 MustHaveRegister 76 MustHaveRegister 248 MustHaveRegister 412 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[r11|q]" v1|q rdx|d [26, 1412[[1424, 1570[26 MustHaveRegister 1218 MustHaveRegister 1234 MustHaveRegister 1392 MustHaveRegister 1412 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[r8|d]" v2|d -1 [28, 378[28 MustHaveRegister 30 MustHaveRegister  "OneSpillStore"
  v3|q QWORD "[r9|q]" v3|q -1 [72, 210[[1596, 1622[72 MustHaveRegister 94 ShouldHaveRegister 130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 184 MustHaveRegister 189 LiveAtLoopEnd 210 ShouldHaveRegister 1618 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rcx|q]" v4|q -1 [74, 96[74 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [76, 82[76 MustHaveRegister 78 ShouldHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rbx|d]" v6|d v5|d [82, 616[[1466, 1648[82 MustHaveRegister 84 ShouldHaveRegister 552 ShouldHaveRegister 616 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rsi|d]" v7|d -1 [80, 83[80 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rbp|d]" v8|d v6|d [84, 938[[1466, 1648[84 MustHaveRegister 86 ShouldHaveRegister 140 MustHaveRegister 564 ShouldHaveRegister 580 ShouldHaveRegister 634 ShouldHaveRegister 636 MustHaveRegister 684 MustHaveRegister 918 MustHaveRegister 937 LiveAtLoopEnd 1526 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[r13|q]" v9|q v8|d [86, 584[[1466, 1648[86 MustHaveRegister 88 MustHaveRegister 584 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q v9|q [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q -1 [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v11|q [92, 190[92 MustHaveRegister 94 ShouldHaveRegister 130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 142 MustHaveRegister 166 MustHaveRegister 189 LiveAtLoopEnd  "NoSpillStore"
  v13|q QWORD "[rsi|q]" v13|q v12|q [94, 128[94 MustHaveRegister 96 MustHaveRegister 128 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q rax|q [1530, 1535[1530 MustHaveRegister 1532 MustHaveRegister 1534 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q -1 [142, 146[[1596, 1616[142 MustHaveRegister 144 ShouldHaveRegister 1616 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rcx|q]" v17|q v18|q [156, 186[166 ShouldHaveRegister 184 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rcx|q]" v18|q v17|q [186, 189[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r9|q]" v20|q v3|q [210, 213[210 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[r9|q]" v21|q v20|q [214, 1396[[1424, 1502[[1536, 1596[[1622, 1648[[1658, 1679[[1680, 1721[632 MustHaveRegister 664 MustHaveRegister 669 LiveAtLoopEnd 832 MustHaveRegister 836 MustHaveRegister 840 MustHaveRegister 844 MustHaveRegister 848 MustHaveRegister 852 MustHaveRegister 856 MustHaveRegister 860 MustHaveRegister 864 MustHaveRegister 868 MustHaveRegister 872 MustHaveRegister 876 MustHaveRegister 880 MustHaveRegister 884 MustHaveRegister 888 MustHaveRegister 892 MustHaveRegister 897 LiveAtLoopEnd 932 MustHaveRegister 937 LiveAtLoopEnd 1396 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q -1 [244, 374[[1622, 1648[244 MustHaveRegister 258 ShouldHaveRegister 294 MustHaveRegister 296 MustHaveRegister 298 MustHaveRegister 300 MustHaveRegister 302 MustHaveRegister 304 MustHaveRegister 348 MustHaveRegister 353 LiveAtLoopEnd 374 ShouldHaveRegister 1644 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rcx|q]" v23|q -1 [246, 260[246 MustHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r14|d]" v24|d -1 [248, 1188[[1424, 1434[[1466, 1502[[1536, 1596[[1622, 1648[248 MustHaveRegister 250 ShouldHaveRegister 304 MustHaveRegister 958 MustHaveRegister 970 ShouldHaveRegister 986 ShouldHaveRegister 1028 ShouldHaveRegister 1030 MustHaveRegister 1078 MustHaveRegister 1168 MustHaveRegister 1187 LiveAtLoopEnd 1560 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdi|q]" v25|q v24|d [250, 990[[1424, 1434[[1466, 1502[[1536, 1570[250 MustHaveRegister 252 MustHaveRegister 990 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v25|q [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q -1 [254, 256[254 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rax|q]" v28|q v27|q [256, 354[256 MustHaveRegister 258 ShouldHaveRegister 294 MustHaveRegister 296 MustHaveRegister 298 MustHaveRegister 306 MustHaveRegister 330 MustHaveRegister 353 LiveAtLoopEnd  "NoSpillStore"
  v29|q QWORD "[rsi|q]" v29|q v28|q [258, 292[258 MustHaveRegister 260 MustHaveRegister 292 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q rax|q [1564, 1569[1564 MustHaveRegister 1566 MustHaveRegister 1568 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rcx|q]" v31|q -1 [306, 310[[1622, 1642[306 MustHaveRegister 308 ShouldHaveRegister 1642 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rcx|q]" v32|q v33|q [320, 350[330 ShouldHaveRegister 348 MustHaveRegister 350 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rcx|q]" v33|q v32|q [350, 353[350 MustHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdx|q]" v35|q v22|q [374, 377[374 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdx|q]" v36|q v35|q [378, 1388[[1424, 1466[1026 MustHaveRegister 1058 MustHaveRegister 1063 LiveAtLoopEnd 1130 MustHaveRegister 1134 MustHaveRegister 1138 MustHaveRegister 1142 MustHaveRegister 1147 LiveAtLoopEnd 1182 MustHaveRegister 1187 LiveAtLoopEnd 1388 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q -1 [408, 538[[1570, 1596[408 MustHaveRegister 422 ShouldHaveRegister 458 MustHaveRegister 460 MustHaveRegister 462 MustHaveRegister 464 MustHaveRegister 466 MustHaveRegister 468 MustHaveRegister 512 MustHaveRegister 517 LiveAtLoopEnd 538 ShouldHaveRegister 1592 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rcx|q]" v38|q -1 [410, 424[410 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rax|d]" v39|d -1 [412, 1238[[1424, 1434[[1466, 1493[412 MustHaveRegister 414 ShouldHaveRegister 468 MustHaveRegister 1238 MustHaveRegister 1492 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[r8|q]" v40|q v39|d [414, 416[414 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[r8|q]" v41|q v40|q [416, 418[416 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[r8|q]" v42|q -1 [418, 420[418 MustHaveRegister 420 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r8|q]" v43|q v42|q [420, 518[420 MustHaveRegister 422 ShouldHaveRegister 458 MustHaveRegister 460 MustHaveRegister 462 MustHaveRegister 470 MustHaveRegister 494 MustHaveRegister 517 LiveAtLoopEnd  "NoSpillStore"
  v44|q QWORD "[r10|q]" v44|q v43|q [422, 456[422 MustHaveRegister 424 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rsi|q]" v45|q -1 [1488, 1490[1488 MustHaveRegister 1490 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q rax|q [1496, 1501[1496 MustHaveRegister 1498 MustHaveRegister 1500 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[r10|q]" v47|q -1 [470, 474[[1570, 1590[470 MustHaveRegister 472 ShouldHaveRegister 1590 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rcx|q]" v48|q v49|q [484, 514[494 ShouldHaveRegister 512 MustHaveRegister 514 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rcx|q]" v49|q v48|q [514, 517[514 MustHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q v37|q [538, 541[538 MustHaveRegister 540 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[r10|q]" v52|q v51|q [542, 1384[[1424, 1466[[1658, 1679[[1680, 1721[1384 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[rcx|d]" v53|d v8|d [580, 582[580 MustHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rcx|q]" v54|q -1 [582, 584[582 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[rcx|d]" v55|d -1 [636, 670[636 MustHaveRegister 650 MustHaveRegister 669 LiveAtLoopEnd  "NoSpillStore"
  v56|d DWORD "[rsi|d]" v56|d v57|d [640, 666[[670, 687[650 ShouldHaveRegister 664 MustHaveRegister 666 ShouldHaveRegister 686 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[rsi|d]" v57|d v56|d [666, 669[666 MustHaveRegister 668 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[rcx|d]" v58|d -1 [684, 898[684 MustHaveRegister 698 MustHaveRegister 897 LiveAtLoopEnd  "NoSpillStore"
  v59|d DWORD "[rsi|d]" v59|d v56|d [688, 894[[898, 907[698 ShouldHaveRegister 832 MustHaveRegister 834 ShouldHaveRegister 838 MustHaveRegister 842 MustHaveRegister 846 MustHaveRegister 850 MustHaveRegister 854 MustHaveRegister 858 MustHaveRegister 862 MustHaveRegister 866 MustHaveRegister 870 MustHaveRegister 874 MustHaveRegister 878 MustHaveRegister 882 MustHaveRegister 886 MustHaveRegister 890 MustHaveRegister 894 MustHaveRegister 906 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[r8|d]" v60|d v59|d [834, 836[834 MustHaveRegister 836 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[r8|d]" v61|d -1 [838, 840[838 MustHaveRegister 840 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[r8|d]" v62|d -1 [842, 844[842 MustHaveRegister 844 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[r8|d]" v63|d -1 [846, 848[846 MustHaveRegister 848 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[r8|d]" v64|d -1 [850, 852[850 MustHaveRegister 852 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[r8|d]" v65|d -1 [854, 856[854 MustHaveRegister 856 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[r8|d]" v66|d -1 [858, 860[858 MustHaveRegister 860 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[r8|d]" v67|d -1 [862, 864[862 MustHaveRegister 864 MustHaveRegister  "NoSpillStore"
  v68|d DWORD "[r8|d]" v68|d -1 [866, 868[866 MustHaveRegister 868 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[r8|d]" v69|d -1 [870, 872[870 MustHaveRegister 872 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[r8|d]" v70|d -1 [874, 876[874 MustHaveRegister 876 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[r8|d]" v71|d -1 [878, 880[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v72|d DWORD "[r8|d]" v72|d -1 [882, 884[882 MustHaveRegister 884 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[r8|d]" v73|d -1 [886, 888[886 MustHaveRegister 888 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[r8|d]" v74|d -1 [890, 892[890 MustHaveRegister 892 MustHaveRegister  "NoSpillStore"
  v75|d DWORD "[rsi|d]" v75|d -1 [894, 897[894 MustHaveRegister 896 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[rsi|d]" v76|d v59|d [908, 934[918 ShouldHaveRegister 932 MustHaveRegister 934 ShouldHaveRegister  "NoSpillStore"
  v77|d DWORD "[rsi|d]" v77|d v76|d [934, 937[934 MustHaveRegister 936 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[rcx|d]" v78|d v24|d [986, 988[986 MustHaveRegister 988 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[rcx|q]" v79|q -1 [988, 990[988 MustHaveRegister 990 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[rcx|d]" v80|d -1 [1030, 1064[1030 MustHaveRegister 1044 MustHaveRegister 1063 LiveAtLoopEnd  "NoSpillStore"
  v81|d DWORD "[rsi|d]" v81|d v82|d [1034, 1060[[1064, 1081[1044 ShouldHaveRegister 1058 MustHaveRegister 1060 ShouldHaveRegister 1080 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[rsi|d]" v82|d v81|d [1060, 1063[1060 MustHaveRegister 1062 ShouldHaveRegister  "NoSpillStore"
  v83|d DWORD "[rcx|d]" v83|d -1 [1078, 1148[1078 MustHaveRegister 1092 MustHaveRegister 1147 LiveAtLoopEnd  "NoSpillStore"
  v84|d DWORD "[rsi|d]" v84|d v81|d [1082, 1144[[1148, 1157[1092 ShouldHaveRegister 1130 MustHaveRegister 1132 ShouldHaveRegister 1136 MustHaveRegister 1140 MustHaveRegister 1144 MustHaveRegister 1156 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[rdi|d]" v85|d v84|d [1132, 1134[1132 MustHaveRegister 1134 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[rdi|d]" v86|d -1 [1136, 1138[1136 MustHaveRegister 1138 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[rdi|d]" v87|d -1 [1140, 1142[1140 MustHaveRegister 1142 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[rsi|d]" v88|d -1 [1144, 1147[1144 MustHaveRegister 1146 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[rsi|d]" v89|d v84|d [1158, 1184[1168 ShouldHaveRegister 1182 MustHaveRegister 1184 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[rsi|d]" v90|d v89|d [1184, 1187[1184 MustHaveRegister 1186 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[rcx|d]" v91|d -1 [1234, 1236[1234 MustHaveRegister 1236 MustHaveRegister  "NoSpillStore"
  v92|d DWORD "[rdi|d]" v92|d -1 [1236, 1416[[1434, 1466[1236 MustHaveRegister 1416 ShouldHaveRegister  "NoSpillStore"
  v93|q QWORD "[rcx|q]" v93|q -1 [1258, 1326[1258 MustHaveRegister 1260 MustHaveRegister 1302 MustHaveRegister 1304 MustHaveRegister 1306 MustHaveRegister 1308 MustHaveRegister 1310 MustHaveRegister 1312 MustHaveRegister 1314 MustHaveRegister 1316 MustHaveRegister 1318 MustHaveRegister 1320 MustHaveRegister 1322 MustHaveRegister 1324 MustHaveRegister 1326 ShouldHaveRegister  "NoSpillStore"
  v94|q QWORD "[rax|q]" v94|q -1 [1260, 1300[1260 MustHaveRegister 1262 MustHaveRegister 1300 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[rsi|q]" v95|q -1 [1454, 1456[1454 MustHaveRegister 1456 ShouldHaveRegister  "NoSpillStore"
  v96|q QWORD "[rax|q]" v96|q rax|q [1460, 1465[1460 MustHaveRegister 1462 MustHaveRegister 1464 ShouldHaveRegister  "NoSpillStore"
  v98|q QWORD "[rcx|q]" v98|q v93|q [1326, 1329[1326 MustHaveRegister 1328 ShouldHaveRegister  "NoSpillStore"
  v99|q QWORD "[rax|q]" v99|q v98|q [1330, 1420[1386 MustHaveRegister 1390 MustHaveRegister 1394 MustHaveRegister 1398 MustHaveRegister 1402 MustHaveRegister 1404 MustHaveRegister 1406 MustHaveRegister 1408 MustHaveRegister 1410 MustHaveRegister 1418 MustHaveRegister 1420 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[r10|d]" v100|d v52|q [1384, 1386[1384 MustHaveRegister 1386 MustHaveRegister  "NoSpillStore"
  v101|d DWORD "[rdx|d]" v101|d v36|q [1388, 1390[1388 MustHaveRegister 1390 MustHaveRegister  "NoSpillStore"
  v102|d DWORD "[rcx|d]" v102|d v1|q [1392, 1394[1392 MustHaveRegister 1394 MustHaveRegister  "NoSpillStore"
  v103|d DWORD "[r9|d]" v103|d v21|q [1396, 1398[1396 MustHaveRegister 1398 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[r10|d]" v104|d v0|q [1400, 1402[1400 MustHaveRegister 1402 MustHaveRegister  "NoSpillStore"
  v105|d DWORD "[rcx|d]" v105|d -1 [1412, 1414[1412 MustHaveRegister 1414 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[rdi|d]" v106|d v92|d [1416, 1418[1416 MustHaveRegister 1418 MustHaveRegister  "NoSpillStore"
  v107|d DWORD "[r11|d]" v107|d -1 [1700, 1716[1716 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[rcx|q]" v108|q -1 [1700, 1718[1718 MustHaveRegister  "NoSpillStore"
  v109|d DWORD "[r10|d]" v109|d -1 [1742, 1758[1758 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[r11|q]" v110|q -1 [1742, 1760[1760 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[rsi|q]" v111|q -1 [1538, 1558[1538 MustHaveRegister 1558 ShouldHaveRegister  "NoSpillStore"
  v112|q QWORD "[rsi|q]" v112|q -1 [1504, 1524[1504 MustHaveRegister 1524 ShouldHaveRegister  "NoSpillStore"
  v113|q QWORD "[rax|q]" v25|q v25|q [1570, 1591[ "NoSpillStore"
  v114|q QWORD "[rdx|q]" v36|q v36|q [1466, 1491[ "NoSpillStore"
  v115|d DWORD "[r10|d]" v39|d v39|d [1493, 1502[ "NoSpillStore"
  v116|d DWORD "[rcx|d]" v2|d v2|d [1742, 1763[ "OneSpillStore"
  v117|d DWORD "[vstack:0|d]" v2|d v2|d [378, 618[[1466, 1658[[1722, 1742[ "OneSpillStore"
  v118|q QWORD "[r8|q]" v0|q v0|q [1330, 1400[[1424, 1679[[1680, 1721[[1722, 1763[1400 MustHaveRegister  "OneSpillStore"
  v119|q QWORD "[vstack:1|q]" v0|q v0|q [421, 1330[ "OneSpillStore"
  v120|q QWORD "[rcx|q]" v36|q v36|q [1491, 1502[ "NoSpillStore"
  v121|q QWORD "[rdi|q]" v36|q v36|q [1570, 1591[ "NoSpillStore"
  v122|d DWORD "[rdx|d]" v39|d v39|d [1570, 1596[ "NoSpillStore"
  v123|q QWORD "[r11|q]" v36|q v36|q [1591, 1596[[1658, 1679[[1680, 1700[ "NoSpillStore"
  v124|q QWORD "[r10|q]" v25|q v25|q [1591, 1596[[1622, 1648[ "NoSpillStore"
  v125|q QWORD "[rdx|q]" v36|q v36|q [1700, 1721[ "NoSpillStore"
  v126|q QWORD "[r9|q]" v1|q v1|q [1742, 1763[ "OneSpillStore"
  v127|q QWORD "[vstack:2|q]" v1|q v1|q [1570, 1679[[1680, 1721[[1722, 1742[ "OneSpillStore"
  v128|q QWORD "[vstack:3|q]" v128|q -1 [1, 2[ "NoDefinitionFound"
  v129|d DWORD "[vstack:4|d]" v129|d -1 [1, 2[ "NoDefinitionFound"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD = MOVZXB input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   74  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   76  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   78  <|@ instruction CMP x: v5|DWORD y: 10 size: DWORD <|@ <|@
      nr   80  <|@ instruction v7|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   82  <|@ instruction v6|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v7|DWORD) condition: < <|@ <|@
      nr   84  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction v10|QWORD = SHL x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr   90  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr   92  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr   94  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v4|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  136  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction MOV (x: [v3|QWORD + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction v16|QWORD = LEA address: [v12|QWORD - 16] size: QWORD <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH x: v16|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  156  <|@ instruction [v17|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v17|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction MOV x: [v3|QWORD + v17|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 8] size: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction v20|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  246  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  248  <|@ instruction v24|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  250  <|@ instruction v25|QWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 2 size: QWORD <|@ <|@
      nr  254  <|@ instruction v27|QWORD = LEA address: [v26|QWORD + 23] size: QWORD <|@ <|@
      nr  256  <|@ instruction v28|QWORD = AND x: v27|QWORD y: -8 size: QWORD <|@ <|@
      nr  258  <|@ instruction v29|QWORD = ADD (x: v28|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v23|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 440], y: v29|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  296  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  300  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  304  <|@ instruction MOV (x: [v22|QWORD + 12], y: v24|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction v31|QWORD = LEA address: [v28|QWORD - 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH x: v31|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  320  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v28|QWORD, y: v32|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction MOV x: [v22|QWORD + v32|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  350  <|@ instruction v33|QWORD = LEA address: [v32|QWORD + 8] size: QWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction v35|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  378  <|@ instruction [v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  410  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  412  <|@ instruction v39|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  414  <|@ instruction v40|QWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction v41|QWORD = SHL x: v40|QWORD y: 2 size: QWORD <|@ <|@
      nr  418  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr  420  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v38|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  460  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  462  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  464  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  468  <|@ instruction MOV (x: [v37|QWORD + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction v47|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  484  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction MOV x: [v37|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  514  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction v51|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  542  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction v53|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction v54|QWORD = MOVSXD value: v53|DWORD size: QWORD <|@ <|@
      nr  584  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v54|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction MOV x: [v21|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  634  <|@ instruction CMP x: v8|DWORD y: 3 size: DWORD <|@ <|@
      nr  636  <|@ instruction v55|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v8|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  640  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction CMPBRANCH (x: v55|DWORD, y: v56|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction MOV x: [v21|QWORD[.] + v56|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  666  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v58|DWORD = LEA address: [v8|DWORD - 16] size: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr  688  <|@ instruction [v59|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v59|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction MOV x: [v21|QWORD[.] + v59|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  834  <|@ instruction v60|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr  836  <|@ instruction MOV x: [v21|QWORD[.] + v60|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  838  <|@ instruction v61|DWORD = LEA address: [v59|DWORD + 2] size: DWORD <|@ <|@
      nr  840  <|@ instruction MOV x: [v21|QWORD[.] + v61|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  842  <|@ instruction v62|DWORD = LEA address: [v59|DWORD + 3] size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [v21|QWORD[.] + v62|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  846  <|@ instruction v63|DWORD = LEA address: [v59|DWORD + 4] size: DWORD <|@ <|@
      nr  848  <|@ instruction MOV x: [v21|QWORD[.] + v63|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  850  <|@ instruction v64|DWORD = LEA address: [v59|DWORD + 5] size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV x: [v21|QWORD[.] + v64|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  854  <|@ instruction v65|DWORD = LEA address: [v59|DWORD + 6] size: DWORD <|@ <|@
      nr  856  <|@ instruction MOV x: [v21|QWORD[.] + v65|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  858  <|@ instruction v66|DWORD = LEA address: [v59|DWORD + 7] size: DWORD <|@ <|@
      nr  860  <|@ instruction MOV x: [v21|QWORD[.] + v66|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  862  <|@ instruction v67|DWORD = LEA address: [v59|DWORD + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction MOV x: [v21|QWORD[.] + v67|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  866  <|@ instruction v68|DWORD = LEA address: [v59|DWORD + 9] size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV x: [v21|QWORD[.] + v68|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  870  <|@ instruction v69|DWORD = LEA address: [v59|DWORD + 10] size: DWORD <|@ <|@
      nr  872  <|@ instruction MOV x: [v21|QWORD[.] + v69|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  874  <|@ instruction v70|DWORD = LEA address: [v59|DWORD + 11] size: DWORD <|@ <|@
      nr  876  <|@ instruction MOV x: [v21|QWORD[.] + v70|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  878  <|@ instruction v71|DWORD = LEA address: [v59|DWORD + 12] size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV x: [v21|QWORD[.] + v71|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  882  <|@ instruction v72|DWORD = LEA address: [v59|DWORD + 13] size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV x: [v21|QWORD[.] + v72|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  886  <|@ instruction v73|DWORD = LEA address: [v59|DWORD + 14] size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV x: [v21|QWORD[.] + v73|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  890  <|@ instruction v74|DWORD = LEA address: [v59|DWORD + 15] size: DWORD <|@ <|@
      nr  892  <|@ instruction MOV x: [v21|QWORD[.] + v74|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  894  <|@ instruction v75|DWORD = LEA address: [v59|DWORD + 16] size: DWORD <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  908  <|@ instruction [v76|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v76|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction MOV x: [v21|QWORD[.] + v76|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  934  <|@ instruction v77|DWORD = INC value: v76|DWORD size: DWORD <|@ <|@
      nr  936  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction v78|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr  988  <|@ instruction v79|QWORD = MOVSXD value: v78|DWORD size: QWORD <|@ <|@
      nr  990  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v79|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction MOV x: [v36|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1028  <|@ instruction CMP x: v24|DWORD y: 3 size: DWORD <|@ <|@
      nr 1030  <|@ instruction v80|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v24|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1034  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction MOV x: [v36|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1060  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction v83|DWORD = LEA address: [v24|DWORD - 4] size: DWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1082  <|@ instruction [v84|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction CMPBRANCH (x: v83|DWORD, y: v84|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction MOV x: [v36|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1132  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr 1134  <|@ instruction MOV x: [v36|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1136  <|@ instruction v86|DWORD = LEA address: [v84|DWORD + 2] size: DWORD <|@ <|@
      nr 1138  <|@ instruction MOV x: [v36|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1140  <|@ instruction v87|DWORD = LEA address: [v84|DWORD + 3] size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [v36|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1144  <|@ instruction v88|DWORD = LEA address: [v84|DWORD + 4] size: DWORD <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1158  <|@ instruction [v89|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction CMPBRANCH (x: v24|DWORD, y: v89|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction MOV x: [v36|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1184  <|@ instruction v90|DWORD = INC value: v89|DWORD size: DWORD <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction v91|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction v92|DWORD = MOV input: [v91|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr 1238  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction v93|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1260  <|@ instruction v94|QWORD = LEA address: [v93|QWORD + 80] size: QWORD <|@ <|@
      nr 1262  <|@ instruction CMPBRANCH (x: v94|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction MOV (x: [r15|QWORD + 440], y: v94|QWORD) size: QWORD <|@ <|@
      nr 1302  <|@ instruction AMD64PREFETCH ~address: [v93|QWORD + 336] instr: 0 <|@ <|@
      nr 1304  <|@ instruction MOV x: [v93|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [v93|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr 1308  <|@ instruction MOV x: [v93|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1310  <|@ instruction MOV x: [v93|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1312  <|@ instruction MOV x: [v93|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1314  <|@ instruction MOV x: [v93|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV x: [v93|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr 1318  <|@ instruction MOV x: [v93|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr 1320  <|@ instruction MOV x: [v93|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr 1322  <|@ instruction MOV x: [v93|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr 1324  <|@ instruction MOV x: [v93|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr 1326  <|@ instruction v98|QWORD[.] = MOVE input: v93|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1328  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1330  <|@ instruction [v99|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction v100|DWORD[_] = COMPRESSPOINTER (input: v52|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1386  <|@ instruction MOV (x: [v99|QWORD[.] + 68], y: v100|DWORD[_]) size: DWORD <|@ <|@
      nr 1388  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v36|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [v99|QWORD[.] + 64], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr 1392  <|@ instruction v102|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1394  <|@ instruction MOV (x: [v99|QWORD[.] + 60], y: v102|DWORD[_]) size: DWORD <|@ <|@
      nr 1396  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1398  <|@ instruction MOV (x: [v99|QWORD[.] + 56], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr 1400  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1402  <|@ instruction MOV (x: [v99|QWORD[.] + 52], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr 1404  <|@ instruction MOVB x: [v99|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr 1406  <|@ instruction MOV x: [v99|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr 1408  <|@ instruction MOV x: [v99|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [v99|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr 1412  <|@ instruction v105|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1414  <|@ instruction rcx|DWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr 1416  <|@ instruction v106|DWORD = SHR (x: v92|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1418  <|@ instruction MOV (x: [v99|QWORD[.] + 16], y: v106|DWORD) size: DWORD <|@ <|@
      nr 1420  <|@ instruction rax|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction v95|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr 1456  <|@ instruction rsi|QWORD = MOVE input: v95|QWORD moveKind: QWORD <|@ <|@
      nr 1458  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr 1460  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1462  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [v96|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr 1464  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction v45|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v114|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1492  <|@ instruction rdx|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE input: v39|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1494  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1496  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v115|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: v129|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1500  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1504  <|@ instruction v112|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rsi|QWORD = MOVE input: v112|QWORD moveKind: QWORD <|@ <|@
      nr 1526  <|@ instruction rdx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr 1528  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1530  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1532  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v117|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1534  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1538  <|@ instruction v111|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction rsi|QWORD = MOVE input: v111|QWORD moveKind: QWORD <|@ <|@
      nr 1560  <|@ instruction rdx|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr 1562  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1564  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1566  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v30|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1568  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = MOVE input: v25|QWORD moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: v39|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOVE input: v128|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v121|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: v113|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1592  <|@ instruction ZERO_MEMORY (pointer: [v37|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: v122|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v124|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1594  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction rcx|QWORD = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr 1618  <|@ instruction ZERO_MEMORY (pointer: [v3|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v117|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: v25|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction rcx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction ZERO_MEMORY (pointer: [v22|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v124|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v117|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v117|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd] // MoveResolver resolve mapping <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed] // MoveResolver resolve mapping <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1700  <|@ instruction [v107|DWORD, v108|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v107|DWORD) size: DWORD <|@ <|@
      nr 1718  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v108|QWORD) size: QWORD <|@ <|@
      nr 1720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v117|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1730  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOVE input: long[1944|0x798] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v117|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1740  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1742  <|@ instruction [v109|DWORD, v110|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v109|DWORD) size: DWORD <|@ <|@
      nr 1760  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v110|QWORD) size: QWORD <|@ <|@
      nr 1762  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD = MOVZXB input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   74  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   76  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   78  <|@ instruction CMP x: v5|DWORD y: 10 size: DWORD <|@ <|@
      nr   80  <|@ instruction v7|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   82  <|@ instruction v6|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v7|DWORD) condition: < <|@ <|@
      nr   84  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction v10|QWORD = SHL x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr   90  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr   92  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr   94  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v4|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v3|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  136  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction MOV (x: [v3|QWORD + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction v16|QWORD = LEA address: [v12|QWORD - 16] size: QWORD <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH x: v16|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v17|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction MOV x: [v3|QWORD + v17|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 8] size: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction v20|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  246  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  248  <|@ instruction v24|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  250  <|@ instruction v25|QWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 2 size: QWORD <|@ <|@
      nr  254  <|@ instruction v27|QWORD = LEA address: [v26|QWORD + 23] size: QWORD <|@ <|@
      nr  256  <|@ instruction v28|QWORD = AND x: v27|QWORD y: -8 size: QWORD <|@ <|@
      nr  258  <|@ instruction v29|QWORD = ADD (x: v28|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: v29|QWORD, y: v23|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 440], y: v29|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  296  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~address: [v28|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  300  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  304  <|@ instruction MOV (x: [v22|QWORD + 12], y: v24|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction v31|QWORD = LEA address: [v28|QWORD - 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH x: v31|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v28|QWORD, y: v32|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction MOV x: [v22|QWORD + v32|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  350  <|@ instruction v33|QWORD = LEA address: [v32|QWORD + 8] size: QWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction v35|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  410  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  412  <|@ instruction v39|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  414  <|@ instruction v40|QWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction v41|QWORD = SHL x: v40|QWORD y: 2 size: QWORD <|@ <|@
      nr  418  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr  420  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v38|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  460  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  462  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  464  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  468  <|@ instruction MOV (x: [v37|QWORD + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction v47|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction MOV x: [v37|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  514  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction v51|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction v53|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction v54|QWORD = MOVSXD value: v53|DWORD size: QWORD <|@ <|@
      nr  584  <|@ instruction CMPBRANCH (x: v9|QWORD, y: v54|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction TESTCONSTBRANCH x: v6|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction MOV x: [v21|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  634  <|@ instruction CMP x: v8|DWORD y: 3 size: DWORD <|@ <|@
      nr  636  <|@ instruction v55|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v8|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction CMPBRANCH (x: v55|DWORD, y: v56|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction MOV x: [v21|QWORD[.] + v56|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  666  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v58|DWORD = LEA address: [v8|DWORD - 16] size: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction CMPBRANCH (x: v58|DWORD, y: v59|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction MOV x: [v21|QWORD[.] + v59|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  834  <|@ instruction v60|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr  836  <|@ instruction MOV x: [v21|QWORD[.] + v60|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  838  <|@ instruction v61|DWORD = LEA address: [v59|DWORD + 2] size: DWORD <|@ <|@
      nr  840  <|@ instruction MOV x: [v21|QWORD[.] + v61|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  842  <|@ instruction v62|DWORD = LEA address: [v59|DWORD + 3] size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [v21|QWORD[.] + v62|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  846  <|@ instruction v63|DWORD = LEA address: [v59|DWORD + 4] size: DWORD <|@ <|@
      nr  848  <|@ instruction MOV x: [v21|QWORD[.] + v63|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  850  <|@ instruction v64|DWORD = LEA address: [v59|DWORD + 5] size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV x: [v21|QWORD[.] + v64|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  854  <|@ instruction v65|DWORD = LEA address: [v59|DWORD + 6] size: DWORD <|@ <|@
      nr  856  <|@ instruction MOV x: [v21|QWORD[.] + v65|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  858  <|@ instruction v66|DWORD = LEA address: [v59|DWORD + 7] size: DWORD <|@ <|@
      nr  860  <|@ instruction MOV x: [v21|QWORD[.] + v66|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  862  <|@ instruction v67|DWORD = LEA address: [v59|DWORD + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction MOV x: [v21|QWORD[.] + v67|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  866  <|@ instruction v68|DWORD = LEA address: [v59|DWORD + 9] size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV x: [v21|QWORD[.] + v68|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  870  <|@ instruction v69|DWORD = LEA address: [v59|DWORD + 10] size: DWORD <|@ <|@
      nr  872  <|@ instruction MOV x: [v21|QWORD[.] + v69|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  874  <|@ instruction v70|DWORD = LEA address: [v59|DWORD + 11] size: DWORD <|@ <|@
      nr  876  <|@ instruction MOV x: [v21|QWORD[.] + v70|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  878  <|@ instruction v71|DWORD = LEA address: [v59|DWORD + 12] size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV x: [v21|QWORD[.] + v71|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  882  <|@ instruction v72|DWORD = LEA address: [v59|DWORD + 13] size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV x: [v21|QWORD[.] + v72|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  886  <|@ instruction v73|DWORD = LEA address: [v59|DWORD + 14] size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV x: [v21|QWORD[.] + v73|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  890  <|@ instruction v74|DWORD = LEA address: [v59|DWORD + 15] size: DWORD <|@ <|@
      nr  892  <|@ instruction MOV x: [v21|QWORD[.] + v74|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  894  <|@ instruction v75|DWORD = LEA address: [v59|DWORD + 16] size: DWORD <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v76|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction MOV x: [v21|QWORD[.] + v76|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  934  <|@ instruction v77|DWORD = INC value: v76|DWORD size: DWORD <|@ <|@
      nr  936  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction v78|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr  988  <|@ instruction v79|QWORD = MOVSXD value: v78|DWORD size: QWORD <|@ <|@
      nr  990  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v79|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction MOV x: [v36|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1028  <|@ instruction CMP x: v24|DWORD y: 3 size: DWORD <|@ <|@
      nr 1030  <|@ instruction v80|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v24|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction MOV x: [v36|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1060  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction v83|DWORD = LEA address: [v24|DWORD - 4] size: DWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction CMPBRANCH (x: v83|DWORD, y: v84|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction MOV x: [v36|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1132  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr 1134  <|@ instruction MOV x: [v36|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1136  <|@ instruction v86|DWORD = LEA address: [v84|DWORD + 2] size: DWORD <|@ <|@
      nr 1138  <|@ instruction MOV x: [v36|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1140  <|@ instruction v87|DWORD = LEA address: [v84|DWORD + 3] size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [v36|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1144  <|@ instruction v88|DWORD = LEA address: [v84|DWORD + 4] size: DWORD <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction CMPBRANCH (x: v24|DWORD, y: v89|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction MOV x: [v36|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1184  <|@ instruction v90|DWORD = INC value: v89|DWORD size: DWORD <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction v91|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction v92|DWORD = MOV input: [v91|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr 1238  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction v93|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1260  <|@ instruction v94|QWORD = LEA address: [v93|QWORD + 80] size: QWORD <|@ <|@
      nr 1262  <|@ instruction CMPBRANCH (x: v94|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction MOV (x: [r15|QWORD + 440], y: v94|QWORD) size: QWORD <|@ <|@
      nr 1302  <|@ instruction AMD64PREFETCH ~address: [v93|QWORD + 336] instr: 0 <|@ <|@
      nr 1304  <|@ instruction MOV x: [v93|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [v93|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr 1308  <|@ instruction MOV x: [v93|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1310  <|@ instruction MOV x: [v93|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1312  <|@ instruction MOV x: [v93|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1314  <|@ instruction MOV x: [v93|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV x: [v93|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr 1318  <|@ instruction MOV x: [v93|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr 1320  <|@ instruction MOV x: [v93|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr 1322  <|@ instruction MOV x: [v93|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr 1324  <|@ instruction MOV x: [v93|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr 1326  <|@ instruction v98|QWORD[.] = MOVE input: v93|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1328  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction v100|DWORD[_] = COMPRESSPOINTER (input: v52|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1386  <|@ instruction MOV (x: [v99|QWORD[.] + 68], y: v100|DWORD[_]) size: DWORD <|@ <|@
      nr 1388  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v36|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [v99|QWORD[.] + 64], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr 1392  <|@ instruction v102|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1394  <|@ instruction MOV (x: [v99|QWORD[.] + 60], y: v102|DWORD[_]) size: DWORD <|@ <|@
      nr 1396  <|@ instruction v103|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1398  <|@ instruction MOV (x: [v99|QWORD[.] + 56], y: v103|DWORD[_]) size: DWORD <|@ <|@
      nr 1400  <|@ instruction v104|DWORD[_] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1402  <|@ instruction MOV (x: [v99|QWORD[.] + 52], y: v104|DWORD[_]) size: DWORD <|@ <|@
      nr 1404  <|@ instruction MOVB x: [v99|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr 1406  <|@ instruction MOV x: [v99|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr 1408  <|@ instruction MOV x: [v99|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [v99|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr 1412  <|@ instruction v105|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1414  <|@ instruction rcx|DWORD = MOVE input: v105|DWORD moveKind: DWORD <|@ <|@
      nr 1416  <|@ instruction v106|DWORD = SHR (x: v92|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1418  <|@ instruction MOV (x: [v99|QWORD[.] + 16], y: v106|DWORD) size: DWORD <|@ <|@
      nr 1420  <|@ instruction rax|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction v95|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr 1456  <|@ instruction rsi|QWORD = MOVE input: v95|QWORD moveKind: QWORD <|@ <|@
      nr 1458  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr 1460  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1462  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [v96|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr 1464  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction v45|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v114|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1492  <|@ instruction rdx|DWORD = MOVE input: v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE input: v39|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1494  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1496  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v115|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: v129|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1500  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1504  <|@ instruction v112|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rsi|QWORD = MOVE input: v112|QWORD moveKind: QWORD <|@ <|@
      nr 1526  <|@ instruction rdx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr 1528  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1530  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1532  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v117|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1534  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1538  <|@ instruction v111|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction rsi|QWORD = MOVE input: v111|QWORD moveKind: QWORD <|@ <|@
      nr 1560  <|@ instruction rdx|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr 1562  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1564  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1566  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v30|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1568  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = MOVE input: v25|QWORD moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: v39|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOVE input: v128|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v121|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: v113|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1592  <|@ instruction ZERO_MEMORY (pointer: [v37|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: v122|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v124|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1594  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction rcx|QWORD = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr 1618  <|@ instruction ZERO_MEMORY (pointer: [v3|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v117|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: v25|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction rcx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction ZERO_MEMORY (pointer: [v22|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v124|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v117|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v117|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd] // MoveResolver resolve mapping <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed] // MoveResolver resolve mapping <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v107|DWORD) size: DWORD <|@ <|@
      nr 1718  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v108|QWORD) size: QWORD <|@ <|@
      nr 1720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v21|QWORD[.],text=v1|QWORD[.],locals=v36|QWORD[.],localsPos=v52|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v21|QWORD[.] v1|QWORD[.] v36|QWORD[.] v52|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v117|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1730  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOVE input: long[1944|0x798] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v117|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1740  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v109|DWORD) size: DWORD <|@ <|@
      nr 1760  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v110|QWORD) size: QWORD <|@ <|@
      nr 1762  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: v2|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = MOVZXB input: [r10|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   74  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   78  <|@ instruction CMP x: rax|DWORD y: 10 size: DWORD <|@ <|@
      nr   80  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   82  <|@ instruction rbx|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD = SHL x: r13|QWORD y: 2 size: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  136  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction MOV (x: [r9|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction MOV x: [r9|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  248  <|@ instruction r14|DWORD = MOV input: [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction rax|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  254  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  256  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  296  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  300  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  304  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  410  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  412  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  414  <|@ instruction r8|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction r8|QWORD = SHL x: r8|QWORD y: 2 size: QWORD <|@ <|@
      nr  418  <|@ instruction r8|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  420  <|@ instruction r8|QWORD = AND x: r8|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction r10|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  460  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  462  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  464  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  468  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction r10|QWORD = LEA address: [r8|QWORD - 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction MOV x: [rsi|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  514  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction rcx|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  584  <|@ instruction CMPBRANCH (x: r13|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction MOV x: [r9|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  634  <|@ instruction CMP x: rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr  636  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  666  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  834  <|@ instruction r8|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  836  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  838  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  840  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  842  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  846  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr  848  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  850  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 5] size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  854  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 6] size: DWORD <|@ <|@
      nr  856  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  858  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 7] size: DWORD <|@ <|@
      nr  860  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  862  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  866  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 9] size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 10] size: DWORD <|@ <|@
      nr  872  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  874  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 11] size: DWORD <|@ <|@
      nr  876  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  878  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 12] size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  882  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 13] size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  886  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 14] size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  890  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 15] size: DWORD <|@ <|@
      nr  892  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 16] size: DWORD <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  934  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  936  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rcx|DWORD = DEC value: r14|DWORD size: DWORD <|@ <|@
      nr  988  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  990  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1028  <|@ instruction CMP x: r14|DWORD y: 3 size: DWORD <|@ <|@
      nr 1030  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r14|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1060  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction rcx|DWORD = LEA address: [r14|DWORD - 4] size: DWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1132  <|@ instruction rdi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1134  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1136  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1138  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1140  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1144  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction CMPBRANCH (x: r14|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1184  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=vstack:1|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=vstack:1|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=vstack:1|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] vstack:1|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction rcx|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=vstack:1|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=vstack:1|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=vstack:1|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] vstack:1|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr 1238  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1260  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD + 80] size: QWORD <|@ <|@
      nr 1262  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1302  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 336] instr: 0 <|@ <|@
      nr 1304  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr 1308  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1310  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1312  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1314  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr 1318  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr 1320  <|@ instruction MOV x: [rcx|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr 1322  <|@ instruction MOV x: [rcx|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr 1324  <|@ instruction MOV x: [rcx|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr 1326  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1328  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1386  <|@ instruction MOV (x: [rax|QWORD[.] + 68], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1388  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [rax|QWORD[.] + 64], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1392  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1394  <|@ instruction MOV (x: [rax|QWORD[.] + 60], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1396  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1398  <|@ instruction MOV (x: [rax|QWORD[.] + 56], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1400  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1402  <|@ instruction MOV (x: [rax|QWORD[.] + 52], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1404  <|@ instruction MOVB x: [rax|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr 1406  <|@ instruction MOV x: [rax|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr 1408  <|@ instruction MOV x: [rax|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [rax|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr 1412  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1416  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1418  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr 1458  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr 1462  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr 1464  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1492  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1494  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: vstack:0|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: vstack:0|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1500  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1504  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1528  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: vstack:0|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1532  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: vstack:0|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1534  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1538  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr 1562  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: vstack:0|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1566  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: vstack:0|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1568  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD = MOVE input: rdi|QWORD moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: vstack:3|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: rax|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1592  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1594  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction ZERO_MEMORY (pointer: [r9|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=vstack:2|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=vstack:2|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=vstack:2|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] vstack:2|QWORD[.] r11|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd] // MoveResolver resolve mapping <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed] // MoveResolver resolve mapping <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1718  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=vstack:2|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=vstack:2|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=vstack:2|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] vstack:2|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1730  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1944|0x798] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1740  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1760  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1762  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: rcx|DWORD 
locals: r8|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = MOVZXB input: [r10|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   74  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   78  <|@ instruction CMP x: rax|DWORD y: 10 size: DWORD <|@ <|@
      nr   80  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   82  <|@ instruction rbx|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD = SHL x: r13|QWORD y: 2 size: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  136  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction MOV (x: [r9|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction MOV x: [r9|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  248  <|@ instruction r14|DWORD = MOV input: [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction rax|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  254  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  256  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  296  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  300  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  304  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  410  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  412  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  414  <|@ instruction r8|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction r8|QWORD = SHL x: r8|QWORD y: 2 size: QWORD <|@ <|@
      nr  418  <|@ instruction r8|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  420  <|@ instruction r8|QWORD = AND x: r8|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction r10|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  460  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  462  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  464  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  468  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction r10|QWORD = LEA address: [r8|QWORD - 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction MOV x: [rsi|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  514  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction rcx|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  584  <|@ instruction CMPBRANCH (x: r13|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction MOV x: [r9|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  634  <|@ instruction CMP x: rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr  636  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  666  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  834  <|@ instruction r8|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  836  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  838  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  840  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  842  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  846  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr  848  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  850  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 5] size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  854  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 6] size: DWORD <|@ <|@
      nr  856  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  858  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 7] size: DWORD <|@ <|@
      nr  860  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  862  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 8] size: DWORD <|@ <|@
      nr  864  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  866  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 9] size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 10] size: DWORD <|@ <|@
      nr  872  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  874  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 11] size: DWORD <|@ <|@
      nr  876  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  878  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 12] size: DWORD <|@ <|@
      nr  880  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  882  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 13] size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  886  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 14] size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  890  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 15] size: DWORD <|@ <|@
      nr  892  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 16] size: DWORD <|@ <|@
      nr  896  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  934  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  936  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rcx|DWORD = DEC value: r14|DWORD size: DWORD <|@ <|@
      nr  988  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  990  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1028  <|@ instruction CMP x: r14|DWORD y: 3 size: DWORD <|@ <|@
      nr 1030  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r14|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1060  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction rcx|DWORD = LEA address: [r14|DWORD - 4] size: DWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1132  <|@ instruction rdi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1134  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1136  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1138  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1140  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1144  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction CMPBRANCH (x: r14|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1184  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=vstack:1|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=vstack:1|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=vstack:1|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] vstack:1|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction rcx|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=vstack:1|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=vstack:1|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=vstack:1|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] vstack:1|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr 1238  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1260  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD + 80] size: QWORD <|@ <|@
      nr 1262  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1302  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 336] instr: 0 <|@ <|@
      nr 1304  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1306  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr 1308  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1310  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1312  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1314  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr 1318  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr 1320  <|@ instruction MOV x: [rcx|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr 1322  <|@ instruction MOV x: [rcx|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr 1324  <|@ instruction MOV x: [rcx|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr 1326  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1328  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1386  <|@ instruction MOV (x: [rax|QWORD[.] + 68], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1388  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [rax|QWORD[.] + 64], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1392  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1394  <|@ instruction MOV (x: [rax|QWORD[.] + 60], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1396  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1398  <|@ instruction MOV (x: [rax|QWORD[.] + 56], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1400  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1402  <|@ instruction MOV (x: [rax|QWORD[.] + 52], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1404  <|@ instruction MOVB x: [rax|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr 1406  <|@ instruction MOV x: [rax|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr 1408  <|@ instruction MOV x: [rax|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [rax|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr 1412  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1416  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1418  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr 1458  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr 1462  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr 1464  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1492  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1494  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: vstack:0|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: vstack:0|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1500  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1504  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1528  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: vstack:0|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1532  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: vstack:0|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1534  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1538  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr 1562  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: vstack:0|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr 1566  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: vstack:0|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1568  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD = MOVE input: rdi|QWORD moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: vstack:3|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: rax|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1592  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1594  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction ZERO_MEMORY (pointer: [r9|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1656  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=vstack:2|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=vstack:2|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=vstack:2|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] vstack:2|QWORD[.] r11|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd] // MoveResolver resolve mapping <|@ <|@
      nr 1688  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed] // MoveResolver resolve mapping <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1718  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=vstack:2|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=vstack:2|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=vstack:2|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] vstack:2|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1730  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1944|0x798] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1740  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1760  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1762  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: rcx|DWORD 
locals: r8|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = MOVZXB input: [r10|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   98  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  100  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP x: rax|DWORD y: 10 size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  106  <|@ instruction rbx|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = SHL x: r13|QWORD y: 2 size: QWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV (x: [r9|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction MOV x: [r9|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  350  <|@ instruction r14|DWORD = MOV input: [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction rax|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  358  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  436  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  438  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  440  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  442  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  444  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  594  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  596  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction r8|QWORD = SHL x: r8|QWORD y: 2 size: QWORD <|@ <|@
      nr  602  <|@ instruction r8|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  604  <|@ instruction r8|QWORD = AND x: r8|QWORD y: -8 size: QWORD <|@ <|@
      nr  606  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r10|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  610  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  694  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  696  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  698  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  700  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  702  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = LEA address: [r8|QWORD - 16] size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction MOV x: [rsi|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  750  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rcx|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  896  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  898  <|@ instruction CMPBRANCH (x: r13|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction MOV x: [r9|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  960  <|@ instruction CMP x: rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr  962  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr  964  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  994  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  996  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1166  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1168  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1170  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1172  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1174  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1178  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 5] size: DWORD <|@ <|@
      nr 1180  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 6] size: DWORD <|@ <|@
      nr 1184  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1186  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 7] size: DWORD <|@ <|@
      nr 1188  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1190  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 8] size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 9] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1198  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 10] size: DWORD <|@ <|@
      nr 1200  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1202  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 11] size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1206  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 12] size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 13] size: DWORD <|@ <|@
      nr 1212  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 14] size: DWORD <|@ <|@
      nr 1216  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 15] size: DWORD <|@ <|@
      nr 1220  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1222  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 16] size: DWORD <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1262  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = DEC value: r14|DWORD size: DWORD <|@ <|@
      nr 1336  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1338  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1366  <|@ instruction CMP x: r14|DWORD y: 3 size: DWORD <|@ <|@
      nr 1368  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r14|DWORD) condition: |<| <|@ <|@
      nr 1370  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1400  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1402  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction rcx|DWORD = LEA address: [r14|DWORD - 4] size: DWORD <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction rdi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1474  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1476  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1478  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1480  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1482  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction CMPBRANCH (x: r14|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1524  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=vstack:1|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=vstack:1|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=vstack:1|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] vstack:1|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rcx|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1566  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=vstack:1|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=vstack:1|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=vstack:1|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] vstack:1|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr 1568  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1590  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD + 80] size: QWORD <|@ <|@
      nr 1592  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1662  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 336] instr: 0 <|@ <|@
      nr 1664  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1666  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr 1668  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1670  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1672  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1674  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr 1678  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rcx|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr 1682  <|@ instruction MOV x: [rcx|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rcx|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr 1686  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1688  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1692  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1750  <|@ instruction MOV (x: [rax|QWORD[.] + 68], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1752  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1754  <|@ instruction MOV (x: [rax|QWORD[.] + 64], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1756  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction MOV (x: [rax|QWORD[.] + 60], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1760  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1762  <|@ instruction MOV (x: [rax|QWORD[.] + 56], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1764  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1766  <|@ instruction MOV (x: [rax|QWORD[.] + 52], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1768  <|@ instruction MOVB x: [rax|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr 1770  <|@ instruction MOV x: [rax|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr 1772  <|@ instruction MOV x: [rax|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction MOV x: [rax|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr 1776  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1778  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1780  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1782  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction vstack:1|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr 1618  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr 1620  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr  638  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: vstack:0|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: vstack:0|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  648  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction vstack:1|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction vstack:4|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rax|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: vstack:0|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: vstack:0|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  154  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: vstack:0|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: vstack:0|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  396  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction vstack:3|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rax|QWORD = MOVE input: vstack:3|QWORD moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r10|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  804  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction vstack:1|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction ZERO_MEMORY (pointer: [r9|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  294  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction r9|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1854  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1856  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr 1874  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr 1876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=vstack:2|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=vstack:2|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=vstack:2|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] vstack:2|QWORD[.] r11|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1808  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1810  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1822  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1824  <|@ instruction r11|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd] <|@ <|@
      nr 1826  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1786  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1790  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1800  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction r11|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1846  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1848  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=vstack:2|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=vstack:2|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=vstack:2|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] vstack:2|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5] <|@ <|@
      nr  938  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  940  <|@ instruction r9|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1882  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[1944|0x798] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5] <|@ <|@
      nr 1894  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr 1896  <|@ instruction r9|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1898  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1918  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1920  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: rcx|DWORD 
locals: r8|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [34, 1894[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [606, 1882[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [36, 1896[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [770, 776[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[vstack:4|d]" vstack:4|d -1 [652, 656[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:28|d]" vstack:0|d -1 [34, 1894[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:56|q]" vstack:1|q -1 [606, 1882[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:48|q]" vstack:2|q -1 [36, 1896[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:40|q]" vstack:3|q -1 [770, 776[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[stack:32|d]" vstack:4|d -1 [652, 656[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = MOVZXB input: [r10|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   98  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  100  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP x: rax|DWORD y: 10 size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  106  <|@ instruction rbx|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = SHL x: r13|QWORD y: 2 size: QWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV (x: [r9|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction MOV x: [r9|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  350  <|@ instruction r14|DWORD = MOV input: [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction rax|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  358  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  436  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  438  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  440  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  442  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  444  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  594  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  596  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction r8|QWORD = SHL x: r8|QWORD y: 2 size: QWORD <|@ <|@
      nr  602  <|@ instruction r8|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  604  <|@ instruction r8|QWORD = AND x: r8|QWORD y: -8 size: QWORD <|@ <|@
      nr  606  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r10|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  610  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  694  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  696  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  698  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  700  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  702  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = LEA address: [r8|QWORD - 16] size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction MOV x: [rsi|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  750  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rcx|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  896  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  898  <|@ instruction CMPBRANCH (x: r13|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction MOV x: [r9|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  960  <|@ instruction CMP x: rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr  962  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr  964  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  994  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  996  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1166  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1168  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1170  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1172  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1174  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1178  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 5] size: DWORD <|@ <|@
      nr 1180  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 6] size: DWORD <|@ <|@
      nr 1184  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1186  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 7] size: DWORD <|@ <|@
      nr 1188  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1190  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 8] size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 9] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1198  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 10] size: DWORD <|@ <|@
      nr 1200  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1202  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 11] size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1206  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 12] size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 13] size: DWORD <|@ <|@
      nr 1212  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 14] size: DWORD <|@ <|@
      nr 1216  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 15] size: DWORD <|@ <|@
      nr 1220  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1222  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 16] size: DWORD <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1262  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = DEC value: r14|DWORD size: DWORD <|@ <|@
      nr 1336  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1338  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1366  <|@ instruction CMP x: r14|DWORD y: 3 size: DWORD <|@ <|@
      nr 1368  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r14|DWORD) condition: |<| <|@ <|@
      nr 1370  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1400  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1402  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction rcx|DWORD = LEA address: [r14|DWORD - 4] size: DWORD <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction rdi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1474  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1476  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1478  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1480  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1482  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction CMPBRANCH (x: r14|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1524  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rcx|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1566  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr 1568  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1590  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD + 80] size: QWORD <|@ <|@
      nr 1592  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1662  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 336] instr: 0 <|@ <|@
      nr 1664  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1666  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr 1668  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1670  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1672  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1674  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr 1678  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rcx|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr 1682  <|@ instruction MOV x: [rcx|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rcx|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr 1686  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1688  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1692  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1750  <|@ instruction MOV (x: [rax|QWORD[.] + 68], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1752  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1754  <|@ instruction MOV (x: [rax|QWORD[.] + 64], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1756  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction MOV (x: [rax|QWORD[.] + 60], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1760  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1762  <|@ instruction MOV (x: [rax|QWORD[.] + 56], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1764  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1766  <|@ instruction MOV (x: [rax|QWORD[.] + 52], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1768  <|@ instruction MOVB x: [rax|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr 1770  <|@ instruction MOV x: [rax|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr 1772  <|@ instruction MOV x: [rax|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction MOV x: [rax|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr 1776  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1778  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1780  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1782  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr 1618  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr 1620  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr  638  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  648  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  154  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  396  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:40|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rax|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r10|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  804  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction ZERO_MEMORY (pointer: [r9|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  294  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1854  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1856  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr 1874  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr 1876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1808  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1810  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1822  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1824  <|@ instruction r11|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd] <|@ <|@
      nr 1826  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1786  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1790  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1800  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction r11|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1846  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1848  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5] <|@ <|@
      nr  938  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  940  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1882  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[1944|0x798] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5] <|@ <|@
      nr 1894  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1896  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1898  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1918  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1920  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: rcx|DWORD 
locals: r8|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = MOVZXB input: [r10|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   98  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  100  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP x: rax|DWORD y: 10 size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  106  <|@ instruction rbx|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = SHL x: r13|QWORD y: 2 size: QWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV (x: [r9|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction MOV x: [r9|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  350  <|@ instruction r14|DWORD = MOV input: [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction rax|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  358  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  436  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  438  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  440  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  442  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  444  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  594  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  596  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction r8|QWORD = SHL x: r8|QWORD y: 2 size: QWORD <|@ <|@
      nr  602  <|@ instruction r8|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  604  <|@ instruction r8|QWORD = AND x: r8|QWORD y: -8 size: QWORD <|@ <|@
      nr  606  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r10|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  610  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  694  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  696  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  698  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  700  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  702  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = LEA address: [r8|QWORD - 16] size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction MOV x: [rsi|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  750  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rcx|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  896  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  898  <|@ instruction CMPBRANCH (x: r13|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction MOV x: [r9|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  960  <|@ instruction CMP x: rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr  962  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr  964  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  994  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  996  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1166  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1168  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1170  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1172  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1174  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1178  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 5] size: DWORD <|@ <|@
      nr 1180  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 6] size: DWORD <|@ <|@
      nr 1184  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1186  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 7] size: DWORD <|@ <|@
      nr 1188  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1190  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 8] size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 9] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1198  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 10] size: DWORD <|@ <|@
      nr 1200  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1202  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 11] size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1206  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 12] size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 13] size: DWORD <|@ <|@
      nr 1212  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 14] size: DWORD <|@ <|@
      nr 1216  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 15] size: DWORD <|@ <|@
      nr 1220  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1222  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 16] size: DWORD <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1262  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = DEC value: r14|DWORD size: DWORD <|@ <|@
      nr 1336  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1338  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1366  <|@ instruction CMP x: r14|DWORD y: 3 size: DWORD <|@ <|@
      nr 1368  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r14|DWORD) condition: |<| <|@ <|@
      nr 1370  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1400  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1402  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction rcx|DWORD = LEA address: [r14|DWORD - 4] size: DWORD <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction rdi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1474  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1476  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1478  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1480  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1482  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction CMPBRANCH (x: r14|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1524  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rcx|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1566  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr 1568  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1590  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD + 80] size: QWORD <|@ <|@
      nr 1592  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1662  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 336] instr: 0 <|@ <|@
      nr 1664  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1666  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr 1668  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1670  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1672  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1674  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr 1678  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rcx|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr 1682  <|@ instruction MOV x: [rcx|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rcx|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr 1686  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1688  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1692  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1750  <|@ instruction MOV (x: [rax|QWORD[.] + 68], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1752  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1754  <|@ instruction MOV (x: [rax|QWORD[.] + 64], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1756  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction MOV (x: [rax|QWORD[.] + 60], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1760  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1762  <|@ instruction MOV (x: [rax|QWORD[.] + 56], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1764  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1766  <|@ instruction MOV (x: [rax|QWORD[.] + 52], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1768  <|@ instruction MOVB x: [rax|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr 1770  <|@ instruction MOV x: [rax|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr 1772  <|@ instruction MOV x: [rax|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction MOV x: [rax|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr 1776  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1778  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1780  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1782  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr 1618  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr 1620  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr  638  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  648  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  154  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  396  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:40|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rax|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r10|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  804  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction ZERO_MEMORY (pointer: [r9|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  294  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1854  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1856  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr 1874  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr 1876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1808  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1810  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1822  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1824  <|@ instruction r11|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd] <|@ <|@
      nr 1826  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1786  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1790  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1800  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction r11|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1846  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1848  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5] <|@ <|@
      nr  938  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  940  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1882  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[1944|0x798] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5] <|@ <|@
      nr 1894  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1896  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1898  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1918  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1920  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: rcx|DWORD 
locals: r8|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = MOVZXB input: [r10|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   98  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  100  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP x: rax|DWORD y: 10 size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  106  <|@ instruction rbx|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = SHL x: r13|QWORD y: 2 size: QWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV (x: [r9|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction MOV x: [r9|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  350  <|@ instruction r14|DWORD = MOV input: [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction rax|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  358  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  436  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  438  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  440  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  442  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  444  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  594  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  596  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction r8|QWORD = SHL x: r8|QWORD y: 2 size: QWORD <|@ <|@
      nr  602  <|@ instruction r8|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  604  <|@ instruction r8|QWORD = AND x: r8|QWORD y: -8 size: QWORD <|@ <|@
      nr  606  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r10|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  610  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  694  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  696  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  698  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  700  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  702  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = LEA address: [r8|QWORD - 16] size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction MOV x: [rsi|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  750  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rcx|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  896  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  898  <|@ instruction CMPBRANCH (x: r13|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction MOV x: [r9|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  960  <|@ instruction CMP x: rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr  962  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr  964  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  994  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  996  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1166  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1168  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1170  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1172  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1174  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1178  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 5] size: DWORD <|@ <|@
      nr 1180  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 6] size: DWORD <|@ <|@
      nr 1184  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1186  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 7] size: DWORD <|@ <|@
      nr 1188  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1190  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 8] size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 9] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1198  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 10] size: DWORD <|@ <|@
      nr 1200  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1202  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 11] size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1206  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 12] size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 13] size: DWORD <|@ <|@
      nr 1212  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 14] size: DWORD <|@ <|@
      nr 1216  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 15] size: DWORD <|@ <|@
      nr 1220  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1222  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 16] size: DWORD <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1262  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = DEC value: r14|DWORD size: DWORD <|@ <|@
      nr 1336  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1338  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1366  <|@ instruction CMP x: r14|DWORD y: 3 size: DWORD <|@ <|@
      nr 1368  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r14|DWORD) condition: |<| <|@ <|@
      nr 1370  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1400  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1402  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction rcx|DWORD = LEA address: [r14|DWORD - 4] size: DWORD <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction rdi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1474  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1476  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1478  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1480  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1482  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction CMPBRANCH (x: r14|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1524  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rcx|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1566  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr 1568  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1590  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD + 80] size: QWORD <|@ <|@
      nr 1592  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1662  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 336] instr: 0 <|@ <|@
      nr 1664  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1666  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr 1668  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1670  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1672  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1674  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr 1678  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rcx|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr 1682  <|@ instruction MOV x: [rcx|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rcx|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr 1686  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1688  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1692  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1750  <|@ instruction MOV (x: [rax|QWORD[.] + 68], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1752  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1754  <|@ instruction MOV (x: [rax|QWORD[.] + 64], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1756  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction MOV (x: [rax|QWORD[.] + 60], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1760  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1762  <|@ instruction MOV (x: [rax|QWORD[.] + 56], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1764  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1766  <|@ instruction MOV (x: [rax|QWORD[.] + 52], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1768  <|@ instruction MOVB x: [rax|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr 1770  <|@ instruction MOV x: [rax|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr 1772  <|@ instruction MOV x: [rax|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction MOV x: [rax|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr 1776  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1778  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1780  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1782  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr 1618  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr 1620  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr  638  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  648  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  154  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  396  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:40|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rax|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r10|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  804  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction ZERO_MEMORY (pointer: [r9|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  294  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1854  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1856  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr 1874  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr 1876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1808  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1810  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1822  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1824  <|@ instruction r11|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd] <|@ <|@
      nr 1826  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1786  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1790  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1800  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction r11|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1846  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1848  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1882  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[1944|0x798] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5] <|@ <|@
      nr 1898  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1918  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1920  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: rcx|DWORD 
locals: r8|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = MOVZXB input: [r10|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   98  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  100  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP x: rax|DWORD y: 10 size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  106  <|@ instruction rbx|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = SHL x: r13|QWORD y: 2 size: QWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV (x: [r9|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction MOV x: [r9|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  350  <|@ instruction r14|DWORD = MOV input: [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction rax|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  358  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  436  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  438  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  440  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  442  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  444  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  594  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  596  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction r8|QWORD = SHL x: r8|QWORD y: 2 size: QWORD <|@ <|@
      nr  602  <|@ instruction r8|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  604  <|@ instruction r8|QWORD = AND x: r8|QWORD y: -8 size: QWORD <|@ <|@
      nr  606  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r10|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  610  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  694  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  696  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  698  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  700  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  702  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = LEA address: [r8|QWORD - 16] size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction MOV x: [rsi|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  750  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rcx|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  896  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  898  <|@ instruction CMPBRANCH (x: r13|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction MOV x: [r9|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  960  <|@ instruction CMP x: rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr  962  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr  964  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  994  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  996  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1166  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1168  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1170  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1172  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1174  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1178  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 5] size: DWORD <|@ <|@
      nr 1180  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 6] size: DWORD <|@ <|@
      nr 1184  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1186  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 7] size: DWORD <|@ <|@
      nr 1188  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1190  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 8] size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 9] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1198  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 10] size: DWORD <|@ <|@
      nr 1200  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1202  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 11] size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1206  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 12] size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 13] size: DWORD <|@ <|@
      nr 1212  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 14] size: DWORD <|@ <|@
      nr 1216  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 15] size: DWORD <|@ <|@
      nr 1220  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1222  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 16] size: DWORD <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1262  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = DEC value: r14|DWORD size: DWORD <|@ <|@
      nr 1336  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1338  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1366  <|@ instruction CMP x: r14|DWORD y: 3 size: DWORD <|@ <|@
      nr 1368  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r14|DWORD) condition: |<| <|@ <|@
      nr 1370  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1400  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1402  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction rcx|DWORD = LEA address: [r14|DWORD - 4] size: DWORD <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction rdi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1474  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1476  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1478  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1480  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1482  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction CMPBRANCH (x: r14|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1524  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rcx|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1566  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr 1568  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1590  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD + 80] size: QWORD <|@ <|@
      nr 1592  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1662  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 336] instr: 0 <|@ <|@
      nr 1664  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1666  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr 1668  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1670  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1672  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1674  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr 1678  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rcx|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr 1682  <|@ instruction MOV x: [rcx|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rcx|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr 1686  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1688  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1692  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1750  <|@ instruction MOV (x: [rax|QWORD[.] + 68], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1752  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1754  <|@ instruction MOV (x: [rax|QWORD[.] + 64], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1756  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction MOV (x: [rax|QWORD[.] + 60], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1760  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1762  <|@ instruction MOV (x: [rax|QWORD[.] + 56], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1764  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1766  <|@ instruction MOV (x: [rax|QWORD[.] + 52], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1768  <|@ instruction MOVB x: [rax|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr 1770  <|@ instruction MOV x: [rax|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr 1772  <|@ instruction MOV x: [rax|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction MOV x: [rax|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr 1776  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1778  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1780  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1782  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr 1618  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr 1620  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr  638  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  648  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  154  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  396  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:40|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rax|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r10|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  804  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction ZERO_MEMORY (pointer: [r9|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1854  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1856  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr 1874  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr 1876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1808  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1810  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1824  <|@ instruction r11|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd] <|@ <|@
      nr 1826  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1786  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1790  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1802  <|@ instruction r11|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1846  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1848  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1882  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[1944|0x798] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5] <|@ <|@
      nr 1898  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1918  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1920  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: rcx|DWORD 
locals: r8|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = MOVZXB input: [r10|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   98  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  100  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP x: rax|DWORD y: 10 size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  106  <|@ instruction rbx|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = SHL x: r13|QWORD y: 2 size: QWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV (x: [r9|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction MOV x: [r9|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  350  <|@ instruction r14|DWORD = MOV input: [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction rax|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  358  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  436  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  438  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  440  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  442  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  444  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  594  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  596  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction r8|QWORD = SHL x: r8|QWORD y: 2 size: QWORD <|@ <|@
      nr  602  <|@ instruction r8|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  604  <|@ instruction r8|QWORD = AND x: r8|QWORD y: -8 size: QWORD <|@ <|@
      nr  606  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r10|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  610  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  694  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  696  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  698  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  700  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  702  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = LEA address: [r8|QWORD - 16] size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction MOV x: [rsi|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  750  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rcx|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  896  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  898  <|@ instruction CMPBRANCH (x: r13|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction MOV x: [r9|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  960  <|@ instruction CMP x: rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr  962  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr  964  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  994  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  996  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1166  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1168  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1170  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1172  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1174  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1178  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 5] size: DWORD <|@ <|@
      nr 1180  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 6] size: DWORD <|@ <|@
      nr 1184  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1186  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 7] size: DWORD <|@ <|@
      nr 1188  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1190  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 8] size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 9] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1198  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 10] size: DWORD <|@ <|@
      nr 1200  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1202  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 11] size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1206  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 12] size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 13] size: DWORD <|@ <|@
      nr 1212  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 14] size: DWORD <|@ <|@
      nr 1216  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 15] size: DWORD <|@ <|@
      nr 1220  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1222  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 16] size: DWORD <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1262  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = DEC value: r14|DWORD size: DWORD <|@ <|@
      nr 1336  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1338  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1366  <|@ instruction CMP x: r14|DWORD y: 3 size: DWORD <|@ <|@
      nr 1368  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r14|DWORD) condition: |<| <|@ <|@
      nr 1370  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1400  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1402  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction rcx|DWORD = LEA address: [r14|DWORD - 4] size: DWORD <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction rdi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1474  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1476  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1478  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1480  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1482  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction CMPBRANCH (x: r14|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1524  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rcx|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1566  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr 1568  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1590  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD + 80] size: QWORD <|@ <|@
      nr 1592  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1662  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 336] instr: 0 <|@ <|@
      nr 1664  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1666  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr 1668  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1670  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1672  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1674  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr 1678  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rcx|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr 1682  <|@ instruction MOV x: [rcx|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rcx|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr 1686  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1688  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1692  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1750  <|@ instruction MOV (x: [rax|QWORD[.] + 68], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1752  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1754  <|@ instruction MOV (x: [rax|QWORD[.] + 64], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1756  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction MOV (x: [rax|QWORD[.] + 60], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1760  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1762  <|@ instruction MOV (x: [rax|QWORD[.] + 56], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1764  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1766  <|@ instruction MOV (x: [rax|QWORD[.] + 52], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1768  <|@ instruction MOVB x: [rax|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr 1770  <|@ instruction MOV x: [rax|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr 1772  <|@ instruction MOV x: [rax|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction MOV x: [rax|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr 1776  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1778  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1780  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1782  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr 1618  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr 1620  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr  638  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  648  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  154  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  396  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:40|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rax|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r10|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  804  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction ZERO_MEMORY (pointer: [r9|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1854  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1856  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr 1874  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr 1876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1808  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1810  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1824  <|@ instruction r11|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd] <|@ <|@
      nr 1826  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1786  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1790  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1802  <|@ instruction r11|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1846  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1848  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1882  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[1944|0x798] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5] <|@ <|@
      nr 1898  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1918  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1920  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: rcx|DWORD 
locals: r8|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = MOVZXB input: [r10|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   98  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  100  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP x: rax|DWORD y: 10 size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  106  <|@ instruction rbx|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = SHL x: r13|QWORD y: 2 size: QWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV (x: [r9|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction MOV x: [r9|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  350  <|@ instruction r14|DWORD = MOV input: [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction rax|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  358  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  436  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  438  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  440  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  442  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  444  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  594  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  596  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction r8|QWORD = SHL x: r8|QWORD y: 2 size: QWORD <|@ <|@
      nr  602  <|@ instruction r8|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  604  <|@ instruction r8|QWORD = AND x: r8|QWORD y: -8 size: QWORD <|@ <|@
      nr  606  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r10|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  610  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  694  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  696  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  698  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  700  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  702  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = LEA address: [r8|QWORD - 16] size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction MOV x: [rsi|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  750  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rcx|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  896  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  898  <|@ instruction CMPBRANCH (x: r13|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction MOV x: [r9|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  960  <|@ instruction CMP x: rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr  962  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr  964  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  994  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  996  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1166  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1168  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1170  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1172  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1174  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1178  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 5] size: DWORD <|@ <|@
      nr 1180  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 6] size: DWORD <|@ <|@
      nr 1184  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1186  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 7] size: DWORD <|@ <|@
      nr 1188  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1190  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 8] size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 9] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1198  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 10] size: DWORD <|@ <|@
      nr 1200  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1202  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 11] size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1206  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 12] size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 13] size: DWORD <|@ <|@
      nr 1212  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 14] size: DWORD <|@ <|@
      nr 1216  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 15] size: DWORD <|@ <|@
      nr 1220  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1222  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 16] size: DWORD <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1262  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = DEC value: r14|DWORD size: DWORD <|@ <|@
      nr 1336  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1338  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1366  <|@ instruction CMP x: r14|DWORD y: 3 size: DWORD <|@ <|@
      nr 1368  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r14|DWORD) condition: |<| <|@ <|@
      nr 1370  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1400  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1402  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction rcx|DWORD = LEA address: [r14|DWORD - 4] size: DWORD <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction rdi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1474  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1476  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1478  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1480  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1482  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction CMPBRANCH (x: r14|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1524  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rcx|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1566  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr 1568  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1590  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD + 80] size: QWORD <|@ <|@
      nr 1592  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1662  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 336] instr: 0 <|@ <|@
      nr 1664  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1666  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr 1668  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1670  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1672  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1674  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr 1678  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rcx|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr 1682  <|@ instruction MOV x: [rcx|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rcx|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr 1686  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1688  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1692  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1750  <|@ instruction MOV (x: [rax|QWORD[.] + 68], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1752  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1754  <|@ instruction MOV (x: [rax|QWORD[.] + 64], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1756  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction MOV (x: [rax|QWORD[.] + 60], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1760  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1762  <|@ instruction MOV (x: [rax|QWORD[.] + 56], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1764  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1766  <|@ instruction MOV (x: [rax|QWORD[.] + 52], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1768  <|@ instruction MOVB x: [rax|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr 1770  <|@ instruction MOV x: [rax|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr 1772  <|@ instruction MOV x: [rax|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction MOV x: [rax|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr 1776  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1778  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1780  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1782  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr 1618  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr 1620  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr  638  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  648  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  154  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  396  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:40|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rax|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r10|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  804  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction ZERO_MEMORY (pointer: [r9|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1854  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1856  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr 1874  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr 1876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1808  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1810  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1824  <|@ instruction r11|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd] <|@ <|@
      nr 1826  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1786  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1790  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1802  <|@ instruction r11|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1846  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1848  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1882  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[1944|0x798] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5] <|@ <|@
      nr 1898  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1918  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1920  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: rcx|DWORD 
locals: r8|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = MOVZXB input: [r10|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   98  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  100  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP x: rax|DWORD y: 10 size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  106  <|@ instruction rbx|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = SHL x: r13|QWORD y: 2 size: QWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV (x: [r9|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction MOV x: [r9|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  350  <|@ instruction r14|DWORD = MOV input: [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction rax|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  358  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  436  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  438  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  440  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  442  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  444  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  594  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  596  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction r8|QWORD = SHL x: r8|QWORD y: 2 size: QWORD <|@ <|@
      nr  602  <|@ instruction r8|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  604  <|@ instruction r8|QWORD = AND x: r8|QWORD y: -8 size: QWORD <|@ <|@
      nr  606  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r10|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  610  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  694  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  696  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  698  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  700  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  702  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = LEA address: [r8|QWORD - 16] size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction MOV x: [rsi|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  750  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rcx|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  896  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  898  <|@ instruction CMPBRANCH (x: r13|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction MOV x: [r9|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  960  <|@ instruction CMP x: rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr  962  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr  964  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  994  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  996  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1166  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1168  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1170  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1172  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1174  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1178  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 5] size: DWORD <|@ <|@
      nr 1180  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 6] size: DWORD <|@ <|@
      nr 1184  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1186  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 7] size: DWORD <|@ <|@
      nr 1188  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1190  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 8] size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 9] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1198  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 10] size: DWORD <|@ <|@
      nr 1200  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1202  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 11] size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1206  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 12] size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 13] size: DWORD <|@ <|@
      nr 1212  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 14] size: DWORD <|@ <|@
      nr 1216  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 15] size: DWORD <|@ <|@
      nr 1220  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1222  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 16] size: DWORD <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1262  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = DEC value: r14|DWORD size: DWORD <|@ <|@
      nr 1336  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1338  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1366  <|@ instruction CMP x: r14|DWORD y: 3 size: DWORD <|@ <|@
      nr 1368  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r14|DWORD) condition: |<| <|@ <|@
      nr 1370  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1400  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1402  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction rcx|DWORD = LEA address: [r14|DWORD - 4] size: DWORD <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction rdi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1474  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1476  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1478  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1480  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1482  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1524  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction CMPBRANCH (x: r14|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rcx|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1566  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr 1568  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1590  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD + 80] size: QWORD <|@ <|@
      nr 1592  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1662  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 336] instr: 0 <|@ <|@
      nr 1664  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1666  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr 1668  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1670  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1672  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1674  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr 1678  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rcx|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr 1682  <|@ instruction MOV x: [rcx|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rcx|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr 1686  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1688  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1692  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1750  <|@ instruction MOV (x: [rax|QWORD[.] + 68], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1752  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1754  <|@ instruction MOV (x: [rax|QWORD[.] + 64], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1756  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction MOV (x: [rax|QWORD[.] + 60], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1760  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1762  <|@ instruction MOV (x: [rax|QWORD[.] + 56], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1764  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1766  <|@ instruction MOV (x: [rax|QWORD[.] + 52], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1768  <|@ instruction MOVB x: [rax|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr 1770  <|@ instruction MOV x: [rax|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr 1772  <|@ instruction MOV x: [rax|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction MOV x: [rax|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr 1776  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1778  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1780  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1782  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr 1618  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr 1620  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  396  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  154  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr  638  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  648  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:40|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rax|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r10|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  804  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction ZERO_MEMORY (pointer: [r9|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1854  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1856  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr 1874  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr 1876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1918  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1920  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: rcx|DWORD 
locals: r8|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1786  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1790  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1802  <|@ instruction r11|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1846  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1848  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1882  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[1944|0x798] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5] <|@ <|@
      nr 1898  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1808  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1810  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1824  <|@ instruction r11|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd] <|@ <|@
      nr 1826  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = MOVZXB input: [r10|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   98  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  100  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP x: rax|DWORD y: 10 size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  106  <|@ instruction rbx|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = SHL x: r13|QWORD y: 2 size: QWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV (x: [r9|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction MOV x: [r9|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  350  <|@ instruction r14|DWORD = MOV input: [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction rax|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  358  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  436  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  438  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  440  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  442  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  444  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  594  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  596  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction r8|QWORD = SHL x: r8|QWORD y: 2 size: QWORD <|@ <|@
      nr  602  <|@ instruction r8|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  604  <|@ instruction r8|QWORD = AND x: r8|QWORD y: -8 size: QWORD <|@ <|@
      nr  606  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r10|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  610  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  694  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  696  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  698  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  700  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  702  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = LEA address: [r8|QWORD - 16] size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction MOV x: [rsi|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  750  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rcx|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  896  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  898  <|@ instruction CMPBRANCH (x: r13|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction MOV x: [r9|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  960  <|@ instruction CMP x: rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr  962  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr  964  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  994  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  996  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1166  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1168  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1170  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1172  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1174  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1178  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 5] size: DWORD <|@ <|@
      nr 1180  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 6] size: DWORD <|@ <|@
      nr 1184  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1186  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 7] size: DWORD <|@ <|@
      nr 1188  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1190  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 8] size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 9] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1198  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 10] size: DWORD <|@ <|@
      nr 1200  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1202  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 11] size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1206  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 12] size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 13] size: DWORD <|@ <|@
      nr 1212  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 14] size: DWORD <|@ <|@
      nr 1216  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 15] size: DWORD <|@ <|@
      nr 1220  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1222  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 16] size: DWORD <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1262  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = DEC value: r14|DWORD size: DWORD <|@ <|@
      nr 1336  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1338  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1366  <|@ instruction CMP x: r14|DWORD y: 3 size: DWORD <|@ <|@
      nr 1368  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r14|DWORD) condition: |<| <|@ <|@
      nr 1370  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1400  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1402  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction rcx|DWORD = LEA address: [r14|DWORD - 4] size: DWORD <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction rdi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1474  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1476  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1478  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1480  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1482  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1524  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction CMPBRANCH (x: r14|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rcx|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1566  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr 1568  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1590  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD + 80] size: QWORD <|@ <|@
      nr 1592  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1662  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 336] instr: 0 <|@ <|@
      nr 1664  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1666  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr 1668  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1670  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1672  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1674  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr 1678  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rcx|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr 1682  <|@ instruction MOV x: [rcx|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rcx|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr 1686  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1688  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1692  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1750  <|@ instruction MOV (x: [rax|QWORD[.] + 68], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1752  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1754  <|@ instruction MOV (x: [rax|QWORD[.] + 64], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1756  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction MOV (x: [rax|QWORD[.] + 60], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1760  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1762  <|@ instruction MOV (x: [rax|QWORD[.] + 56], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1764  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1766  <|@ instruction MOV (x: [rax|QWORD[.] + 52], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1768  <|@ instruction MOVB x: [rax|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr 1770  <|@ instruction MOV x: [rax|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr 1772  <|@ instruction MOV x: [rax|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction MOV x: [rax|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr 1776  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1778  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1780  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1782  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr 1618  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr 1620  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  396  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  154  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr  638  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  648  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:40|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rax|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r10|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  804  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction ZERO_MEMORY (pointer: [r9|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1854  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1856  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr 1874  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr 1876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1918  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1920  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: rcx|DWORD 
locals: r8|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1786  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1790  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1802  <|@ instruction r11|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1846  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1848  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1882  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[1944|0x798] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5] <|@ <|@
      nr 1898  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1808  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1810  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1824  <|@ instruction r11|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd] <|@ <|@
      nr 1826  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = MOVZXB input: [r10|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   98  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  100  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP x: rax|DWORD y: 10 size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  106  <|@ instruction rbx|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = SHL x: r13|QWORD y: 2 size: QWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV (x: [r9|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction MOV x: [r9|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  350  <|@ instruction r14|DWORD = MOV input: [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction rax|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  358  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  436  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  438  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  440  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  442  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  444  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  594  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  596  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction r8|QWORD = SHL x: r8|QWORD y: 2 size: QWORD <|@ <|@
      nr  602  <|@ instruction r8|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  604  <|@ instruction r8|QWORD = AND x: r8|QWORD y: -8 size: QWORD <|@ <|@
      nr  606  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r10|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  610  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  694  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  696  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  698  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  700  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  702  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = LEA address: [r8|QWORD - 16] size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction MOV x: [rsi|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  750  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rcx|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  896  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  898  <|@ instruction CMPBRANCH (x: r13|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction MOV x: [r9|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  960  <|@ instruction CMP x: rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr  962  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr  964  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  994  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  996  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1166  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1168  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1170  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1172  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1174  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1178  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 5] size: DWORD <|@ <|@
      nr 1180  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 6] size: DWORD <|@ <|@
      nr 1184  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1186  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 7] size: DWORD <|@ <|@
      nr 1188  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1190  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 8] size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 9] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1198  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 10] size: DWORD <|@ <|@
      nr 1200  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1202  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 11] size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1206  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 12] size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 13] size: DWORD <|@ <|@
      nr 1212  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 14] size: DWORD <|@ <|@
      nr 1216  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 15] size: DWORD <|@ <|@
      nr 1220  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1222  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 16] size: DWORD <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1262  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = DEC value: r14|DWORD size: DWORD <|@ <|@
      nr 1336  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1338  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1366  <|@ instruction CMP x: r14|DWORD y: 3 size: DWORD <|@ <|@
      nr 1368  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r14|DWORD) condition: |<| <|@ <|@
      nr 1370  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1400  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1402  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction rcx|DWORD = LEA address: [r14|DWORD - 4] size: DWORD <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction rdi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1474  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1476  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1478  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1480  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1482  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1524  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction CMPBRANCH (x: r14|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rcx|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1566  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr 1568  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1590  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD + 80] size: QWORD <|@ <|@
      nr 1592  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1662  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 336] instr: 0 <|@ <|@
      nr 1664  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1666  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr 1668  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1670  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1672  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1674  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr 1678  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rcx|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr 1682  <|@ instruction MOV x: [rcx|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rcx|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr 1686  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1688  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1692  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1750  <|@ instruction MOV (x: [rax|QWORD[.] + 68], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1752  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1754  <|@ instruction MOV (x: [rax|QWORD[.] + 64], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1756  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction MOV (x: [rax|QWORD[.] + 60], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1760  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1762  <|@ instruction MOV (x: [rax|QWORD[.] + 56], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1764  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1766  <|@ instruction MOV (x: [rax|QWORD[.] + 52], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1768  <|@ instruction MOVB x: [rax|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr 1770  <|@ instruction MOV x: [rax|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr 1772  <|@ instruction MOV x: [rax|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction MOV x: [rax|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr 1776  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1778  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1780  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1782  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr 1618  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr 1620  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  396  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  154  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr  638  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  648  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:40|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rax|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r10|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  804  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction ZERO_MEMORY (pointer: [r9|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1854  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1856  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr 1874  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr 1876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1918  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1920  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: rcx|DWORD 
locals: r8|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1786  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1790  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1802  <|@ instruction r11|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1846  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1848  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1882  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[1944|0x798] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5] <|@ <|@
      nr 1898  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1808  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1810  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1824  <|@ instruction r11|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd] <|@ <|@
      nr 1826  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = MOVZXB input: [r10|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   98  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  100  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP x: rax|DWORD y: 10 size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  106  <|@ instruction rbx|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = SHL x: r13|QWORD y: 2 size: QWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV (x: [r9|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction MOV x: [r9|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  350  <|@ instruction r14|DWORD = MOV input: [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction rax|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  358  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  436  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  438  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  440  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  442  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  444  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  594  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  596  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction r8|QWORD = SHL x: r8|QWORD y: 2 size: QWORD <|@ <|@
      nr  602  <|@ instruction r8|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  604  <|@ instruction r8|QWORD = AND x: r8|QWORD y: -8 size: QWORD <|@ <|@
      nr  606  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r10|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  610  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  694  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  696  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  698  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  700  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  702  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = LEA address: [r8|QWORD - 16] size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction MOV x: [rsi|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  750  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rcx|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  896  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  898  <|@ instruction CMPBRANCH (x: r13|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction MOV x: [r9|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  960  <|@ instruction CMP x: rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr  962  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr  964  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  994  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  996  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1166  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1168  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1170  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1172  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1174  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1178  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 5] size: DWORD <|@ <|@
      nr 1180  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 6] size: DWORD <|@ <|@
      nr 1184  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1186  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 7] size: DWORD <|@ <|@
      nr 1188  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1190  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 8] size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 9] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1198  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 10] size: DWORD <|@ <|@
      nr 1200  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1202  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 11] size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1206  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 12] size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 13] size: DWORD <|@ <|@
      nr 1212  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 14] size: DWORD <|@ <|@
      nr 1216  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 15] size: DWORD <|@ <|@
      nr 1220  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1222  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 16] size: DWORD <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1262  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = DEC value: r14|DWORD size: DWORD <|@ <|@
      nr 1336  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1338  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1366  <|@ instruction CMP x: r14|DWORD y: 3 size: DWORD <|@ <|@
      nr 1368  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r14|DWORD) condition: |<| <|@ <|@
      nr 1370  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1400  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1402  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction rcx|DWORD = LEA address: [r14|DWORD - 4] size: DWORD <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction rdi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1474  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1476  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1478  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1480  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1482  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1524  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction CMPBRANCH (x: r14|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ st <@st|@reference-map: [rdx:0, r9:0, r10:0, r11:0, stack:8]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rcx|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1566  <|@ st <@st|@reference-map: [rdx:0, r9:0, r10:0, r11:0, stack:8]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr 1568  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1590  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD + 80] size: QWORD <|@ <|@
      nr 1592  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1662  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 336] instr: 0 <|@ <|@
      nr 1664  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1666  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr 1668  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1670  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1672  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1674  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr 1678  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rcx|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr 1682  <|@ instruction MOV x: [rcx|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rcx|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr 1686  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1688  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1692  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1750  <|@ instruction MOV (x: [rax|QWORD[.] + 68], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1752  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1754  <|@ instruction MOV (x: [rax|QWORD[.] + 64], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1756  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction MOV (x: [rax|QWORD[.] + 60], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1760  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1762  <|@ instruction MOV (x: [rax|QWORD[.] + 56], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1764  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1766  <|@ instruction MOV (x: [rax|QWORD[.] + 52], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1768  <|@ instruction MOVB x: [rax|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr 1770  <|@ instruction MOV x: [rax|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr 1772  <|@ instruction MOV x: [rax|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction MOV x: [rax|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr 1776  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1778  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1780  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1782  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr 1618  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr 1620  <|@ st <@st|@reference-map: [rax:0, rdx:0, r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ st <@st|@reference-map: [r8:0, r9:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  394  <|@ st <@st|@reference-map: [rax:0, r8:0, r9:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  396  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ st <@st|@reference-map: [r8:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [rax:0, r8:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  154  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr  638  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ st <@st|@reference-map: [rcx:0, r8:0, r9:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  646  <|@ st <@st|@reference-map: [rax:0, rcx:0, r8:0, r9:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  648  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:40|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rax|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r10|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  804  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction ZERO_MEMORY (pointer: [r9|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1854  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1856  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr 1874  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr 1876  <|@ st <@st|@reference-map: [r8:0, r9:0, r10:0, r11:0, stack:16]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1918  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1920  <|@ st <@st|@reference-map: [r8:0, r9:0]
live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: rcx|DWORD 
locals: r8|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1786  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1790  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1802  <|@ instruction r11|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1846  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1848  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, r10:0, stack:16]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1882  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[1944|0x798] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5] <|@ <|@
      nr 1898  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1808  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1810  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1824  <|@ instruction r11|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd] <|@ <|@
      nr 1826  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = MOVZXB input: [r10|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   98  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  100  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP x: rax|DWORD y: 10 size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  106  <|@ instruction rbx|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = SHL x: r13|QWORD y: 2 size: QWORD <|@ <|@
      nr  114  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV x: [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV (x: [r9|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction MOV x: [r9|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B3" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  350  <|@ instruction r14|DWORD = MOV input: [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction rax|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  358  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  436  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  438  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  440  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  442  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  444  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B12" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  594  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD <|@ <|@
      nr  596  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  598  <|@ instruction r8|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction r8|QWORD = SHL x: r8|QWORD y: 2 size: QWORD <|@ <|@
      nr  602  <|@ instruction r8|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  604  <|@ instruction r8|QWORD = AND x: r8|QWORD y: -8 size: QWORD <|@ <|@
      nr  606  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r10|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  610  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B27" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  694  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  696  <|@ instruction AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  698  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  700  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  702  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = LEA address: [r8|QWORD - 16] size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction MOV x: [rsi|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  750  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B25" "B26" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B21" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B73" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rcx|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  896  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  898  <|@ instruction CMPBRANCH (x: r13|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction MOV x: [r9|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  960  <|@ instruction CMP x: rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr  962  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr  964  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  994  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  996  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B39" "B40" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction rcx|DWORD = LEA address: [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1166  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1168  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1170  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1172  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1174  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1176  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1178  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 5] size: DWORD <|@ <|@
      nr 1180  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 6] size: DWORD <|@ <|@
      nr 1184  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1186  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 7] size: DWORD <|@ <|@
      nr 1188  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1190  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 8] size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 9] size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1198  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 10] size: DWORD <|@ <|@
      nr 1200  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1202  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 11] size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1206  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 12] size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 13] size: DWORD <|@ <|@
      nr 1212  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 14] size: DWORD <|@ <|@
      nr 1216  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = LEA address: [rsi|DWORD + 15] size: DWORD <|@ <|@
      nr 1220  <|@ instruction MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1222  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 16] size: DWORD <|@ <|@
      nr 1224  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1262  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" 
    successors "B45" "B46" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B30" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B72" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = DEC value: r14|DWORD size: DWORD <|@ <|@
      nr 1336  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1338  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1366  <|@ instruction CMP x: r14|DWORD y: 3 size: DWORD <|@ <|@
      nr 1368  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r14|DWORD) condition: |<| <|@ <|@
      nr 1370  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1400  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1402  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors "B55" "B56" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction rcx|DWORD = LEA address: [r14|DWORD - 4] size: DWORD <|@ <|@
      nr 1420  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction rdi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1474  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1476  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1478  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1480  <|@ instruction rdi|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1482  <|@ instruction MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B58" "B59" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1524  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B61" "B62" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction CMPBRANCH (x: r14|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B48" 
    successors "B64" "B70" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ st <@st|@reference-map: [rdx:0, r9:0, r10:0, r11:0, stack:8]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rcx|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1566  <|@ st <@st|@reference-map: [rdx:0, r9:0, r10:0, r11:0, stack:8]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:56|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38] <|@ <|@
      nr 1568  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1590  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD + 80] size: QWORD <|@ <|@
      nr 1592  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4607092346807470000
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1662  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 336] instr: 0 <|@ <|@
      nr 1664  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1666  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr 1668  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1670  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1672  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr 1674  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr 1678  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rcx|QWORD + 56] y: 0 size: QWORD <|@ <|@
      nr 1682  <|@ instruction MOV x: [rcx|QWORD + 64] y: 0 size: QWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rcx|QWORD + 72] y: 0 size: QWORD <|@ <|@
      nr 1686  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1688  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1692  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1750  <|@ instruction MOV (x: [rax|QWORD[.] + 68], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1752  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1754  <|@ instruction MOV (x: [rax|QWORD[.] + 64], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1756  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction MOV (x: [rax|QWORD[.] + 60], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1760  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1762  <|@ instruction MOV (x: [rax|QWORD[.] + 56], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1764  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1766  <|@ instruction MOV (x: [rax|QWORD[.] + 52], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1768  <|@ instruction MOVB x: [rax|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr 1770  <|@ instruction MOV x: [rax|QWORD[.] + 44] y: 1 size: DWORD <|@ <|@
      nr 1772  <|@ instruction MOV x: [rax|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction MOV x: [rax|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr 1776  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1778  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1780  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1782  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B63" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4576918229304087681
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr 1618  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38] <|@ <|@
      nr 1620  <|@ st <@st|@reference-map: [rax:0, rdx:0, r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] r11|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:63, 90, 38] <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ st <@st|@reference-map: [r8:0, r9:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  394  <|@ st <@st|@reference-map: [rax:0, r8:0, r9:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  396  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ st <@st|@reference-map: [r8:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [rax:0, r8:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  154  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr  638  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ st <@st|@reference-map: [rcx:0, r8:0, r9:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4] <|@ <|@
      nr  646  <|@ st <@st|@reference-map: [rax:0, rcx:0, r8:0, r9:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: stack:28|DWORD 
locals: r8|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr  648  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:40|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rax|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r10|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  804  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction ZERO_MEMORY (pointer: [r9|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1854  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1856  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD <|@ <|@
      nr 1874  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD <|@ <|@
      nr 1876  <|@ st <@st|@reference-map: [r8:0, r9:0, r10:0, r11:0, stack:16]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] r11|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:39, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B1" "B36" "B73" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1918  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1920  <|@ st <@st|@reference-map: [r8:0, r9:0]
live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4]
stack: rcx|DWORD 
locals: r8|QWORD[.] r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1786  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1788  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1790  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1802  <|@ instruction r11|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed] <|@ <|@
      nr 1804  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1846  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1848  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, r10:0, stack:16]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r8|QWORD[.] r9|QWORD[.] stack:48|QWORD[.] rdx|QWORD[.] r10|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:63, 90, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1882  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE input: long[1944|0x798] <|@ <|@
      nr 1892  <|@ instruction r10|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5] <|@ <|@
      nr 1898  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1808  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1810  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 1824  <|@ instruction r11|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd] <|@ <|@
      nr 1826  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #2          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokevirtual #3          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #19         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #4          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec389041817f20000000000f851b0a000090909090909090909048896c24304c8bd64c8bda450fb642284585c00f8496090000909090909090909090909090909090909090904d8b8fb8010000498b8fc8010000418b421883f80abe0a0000008bd80f4cde8bebd1e5448bed498bc548c1e002488d40174883e0f8488bf04903f1483bf10f875b07000090909090909090909090909090904989b7b8010000420f18840800010000420f18840840010000420f1884088001000049c7010100000041c74108addeadde4189690c488d48f04881f9000800000f83d307000090909048c7c110000000e91d00000066660f1f8400000000009090909090909049c7040900000000488d490890909090483bc177e4909090909090909090909090909090909090909090498b97b8010000498b8fc8010000458b721c418bfe488bc748c1e002488d40174883e0f8488bf04803f2483bf10f875206000090909090909090909090909090904989b7b80100000f188410000100000f188410400100000f1884108001000048c70201000000c74208addeadde4489720c488d48f04881f9000800000f833007000090909048c7c110000000e9300000006666660f1f8400000000006666669066660f1f840000000000666666909090909090909048c7040a00000000488d490890909090483bc177e49090909090909044894424249090909090909090909090909090498bb7b8010000498b8fc8010000418b4214448bc049c1e0024d8d40174983e0f84c895424084d8bd04c03d64c3bd10f87df05000090909090909090909090909090904d8997b8010000410f18843000010000410f18843040010000410f1884308001000048c70601000000c74608addeadde89460c4d8d50f04981fa000800000f83d605000090909048c7c110000000e9270000006666660f1f840000000000666666900f1f4400009090909090909048c7040e00000000488d4908909090904c3bc177e4909090909090904c8bd690909090f7c3ffffff7f0f84870400009090909083fd020f82620400009090909090908bcdffc94863c94c3be90f86db06000090909090909090f7c3ffffff7f0f842206000090909090909041c74110ffffffff83fd03b9020000000f42cdbe01000000e9210000006666660f1f840000000000666666906690909090909041c744b110ffffffffffc6909090903bce7fe89090909090908d4df0e92c0100006666660f1f840000000000666666906666660f1f840000000000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041c744b110ffffffff448bc641ffc043c7448110ffffffff448d460243c7448110ffffffff448d460343c7448110ffffffff448d460443c7448110ffffffff448d460543c7448110ffffffff448d460643c7448110ffffffff448d460743c7448110ffffffff448d460843c7448110ffffffff448d460943c7448110ffffffff448d460a43c7448110ffffffff448d460b43c7448110ffffffff448d460c43c7448110ffffffff448d460d43c7448110ffffffff448d460e43c7448110ffffffff448d460f43c7448110ffffffff8d7610909090903bce0f8fe2feffff909090e92a0000006666660f1f840000000000666666906666660f1f840000000000909090909041c744b110ffffffffffc6909090903bee7fe8909090909090904585f60f846d020000909090904183fe020f8257020000909090909090418bceffc94863c9483bf90f86ea030000909090909090909090c74210ffffffff4183fe03b902000000410f42cebe01000000e91b0000000f1f840000000000666666909090909090c744b210ffffffffffc6909090903bce7fe9909090909090418d4efce9580000006666660f1f840000000000666666906666660f1f8400000000009090909090909090909090909090909090c744b210ffffffff8bfeffc7c744ba10ffffffff8d7e02c744ba10ffffffff8d7e03c744ba10ffffffff8d7604909090903bce7fba909090e9210000006666660f1f840000000000666666906666909090909090c744b210ffffffffffc690909090443bf67fe89090909090909041817b08addeadde0f85e6030000909090909090418b4b148b3ccd0c00000085c00f854d0300009090909090909090498b8fb8010000488d4150493b87c80100000f87240100009090909090909090909090909090909090498987b80100000f18815001000048c70101000000c74108addeaddec7410c0000000048c741100000000048c741180000000048c741200000000048c741280000000048c741300000000048c741380000000048c741400000000048c7414800000000488bc14c8b442408909090909090909090909090909090909090909090909090909049c1ea034489504448c1ea03895040498bcb48c1e90389483c49c1e903448948384d8bd049c1ea0344895034c6403301c7402c01000000c74024ffffffffc7401cffffffff410fbe4b10d3ef897810488b6c24304883c438493ba7500400000f87e4020000c5f877c3909090e9affbffff909090e9bbfdffff909090e99efeffff4c8b442408909090e971fdffff4c8b44240890909090909090909048beaddeaddeaddeaddee8000000000f1f8400000000008500e92cffffff44894424244d8bc248beaddeaddeaddeadde909090909090909090418bd6e8000000000f1f8400000000008500488bd04d8bd0e91afaffff44894424244d8bc248beaddeaddeaddeadde9090909090909090908bd5e8000000000f1f84000000000085004c8bc84d8bd0448b442424e9f9f8ffff4c8b4424089090909090909090909048beaddeaddeaddeadde488bca8bd0448bd0e8000000000f1f8400000000008500488bd14c8944240844895424204c8bd08b442420e973faffff4c895c24104c8b44240848897c2418488bfa8bd0488b442418909090909090909090498bca4c8bdf4c8bd0488d7e104833c0f348aa8bc2498bd3498bfa4c8b5c2410e925faffff44894424244c895c24104d8bc2909090909090909090498d79104833c0f348aa448b442424e93bf8ffff44894424244c895c24104d8bc24c8bd7909090909090909090488d7a104833c0f348aa498bfa4d8bd0448b442424e9e8f8ffff4c895c24104c8b4424084c8bda9090909090909041c78784040000e52affff49c78790040000980a0000e8000000000f1f8400000000004c895c24104c8b44240890909049c7c30000000041bae50fffff8b4c24244c8b4c241090909090909090458997840400004d899f90040000e8000000000f1f8400000000004c895c24104c8b4424084c8bda90909048c7c19402000041bbedb0feff9090909090909045899f8404000049898f90040000e8000000000f1f84000000000044894424244c895c24104d8bc290909049c7c31400000041baedb6feffe974ffffff4c895c24104c8b44240890909049c7c39807000041bae53affffe955ffffff4c895c24104c8b4424084c8bda90909048c7c11405000041bbcd1fffffe97bffffff48896c2430e800000000e9d6f5fffff4488d0d08fdffff49898f68040000e988f5fffff441c78784040000f520ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f51affff49c7879004000000000000e8000000000f1f84000000000041c787840400008ff1fbff49c7879004000000000000e8000000000f1f84000000000041c787840400008f81fcff49c7879004000000000000e8000000000f1f84000000000041c787840400008fc8fcff49c7879004000000000000e8000000000f1f84000000000041c787840400008f39fcff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 72 22 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD  <||@
  Comment 72 24 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 75 26 r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 78 28 r8|DWORD = MOVZXB input: [r10|QWORD[.] + 40] size: DWORD  <||@
  Comment 83 30 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 92 block B2 null  <||@
  Comment 92 56 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 92 58 NOP  <||@
  Comment 93 60 NOP  <||@
  Comment 94 62 NOP  <||@
  Comment 95 64 NOP  <||@
  Comment 96 66 NOP  <||@
  Comment 97 68 NOP  <||@
  Comment 98 70 NOP  <||@
  Comment 99 72 NOP  <||@
  Comment 100 74 NOP  <||@
  Comment 101 76 NOP  <||@
  Comment 102 78 NOP  <||@
  Comment 103 80 NOP  <||@
  Comment 104 82 NOP  <||@
  Comment 105 84 NOP  <||@
  Comment 106 86 NOP  <||@
  Comment 107 88 NOP  <||@
  Comment 108 90 NOP  <||@
  Comment 109 92 NOP  <||@
  Comment 110 94 NOP  <||@
  Comment 111 96 r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 118 98 rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD  <||@
  Comment 125 100 rax|DWORD = MOV input: [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 129 102 CMP x: rax|DWORD y: 10 size: DWORD  <||@
  Comment 132 104 rsi|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 137 106 rbx|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: <  <||@
  Comment 142 108 rbp|DWORD = SHL value: rbx|DWORD size: DWORD  <||@
  Comment 146 110 r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 149 112 rax|QWORD = SHL x: r13|QWORD y: 2 size: QWORD  <||@
  Comment 156 114 rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD  <||@
  Comment 160 116 rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD  <||@
  Comment 164 118 rsi|QWORD = ADD (x: rax|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 170 120 CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 179 block B4 null  <||@
  Comment 179 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 179 164 NOP  <||@
  Comment 180 166 NOP  <||@
  Comment 181 168 NOP  <||@
  Comment 182 170 NOP  <||@
  Comment 183 172 NOP  <||@
  Comment 184 174 NOP  <||@
  Comment 185 176 NOP  <||@
  Comment 186 178 NOP  <||@
  Comment 187 180 NOP  <||@
  Comment 188 182 NOP  <||@
  Comment 189 184 NOP  <||@
  Comment 190 186 NOP  <||@
  Comment 191 188 NOP  <||@
  Comment 192 190 NOP  <||@
  Comment 193 192 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 200 194 AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 256] instr: 0  <||@
  Comment 209 196 AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 320] instr: 0  <||@
  Comment 218 198 AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 384] instr: 0  <||@
  Comment 227 200 MOV x: [r9|QWORD] y: 1 size: QWORD  <||@
  Comment 234 202 MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 234 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 242 204 MOV (x: [r9|QWORD + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 246 206 rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD  <||@
  Comment 250 208 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 263 block B5 null  <||@
  Comment 263 210 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 263 212 NOP  <||@
  Comment 264 214 NOP  <||@
  Comment 265 216 NOP  <||@
  Comment 266 218 rcx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 273 220 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 278 block B7 loop 0 depth 1 header:768|LoopBegin  <||@
  Comment 278 234 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 288 236 NOP  <||@
  Comment 289 238 NOP  <||@
  Comment 290 240 NOP  <||@
  Comment 291 242 NOP  <||@
  Comment 292 244 NOP  <||@
  Comment 293 246 NOP  <||@
  Comment 294 248 NOP  <||@
  Comment 295 250 MOV x: [r9|QWORD + rcx|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 303 252 rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD  <||@
  Comment 307 254 JUMP ~outgoingValues: [] destination: B7 -> B6  <||@
  Comment 307 block B6 loop 0 depth 1 header:768|LoopBegin  <||@
  Comment 307 222 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 307 224 NOP  <||@
  Comment 308 226 NOP  <||@
  Comment 309 228 NOP  <||@
  Comment 310 230 NOP  <||@
  Comment 311 232 CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD  <||@
  Comment 316 block B8 null  <||@
  Comment 316 256 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 316 258 NOP  <||@
  Comment 317 260 NOP  <||@
  Comment 318 262 NOP  <||@
  Comment 319 264 JUMP ~outgoingValues: [] destination: B8 -> B10  <||@
  Comment 319 block B10 null  <||@
  Comment 319 302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 319 304 NOP  <||@
  Comment 320 306 NOP  <||@
  Comment 321 308 NOP  <||@
  Comment 322 310 NOP  <||@
  Comment 323 312 r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 323 314 JUMP ~outgoingValues: [] destination: B10 -> B11  <||@
  Comment 323 block B11 null  <||@
  Comment 323 316 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 323 318 NOP  <||@
  Comment 324 320 NOP  <||@
  Comment 325 322 NOP  <||@
  Comment 326 324 NOP  <||@
  Comment 327 326 NOP  <||@
  Comment 328 328 NOP  <||@
  Comment 329 330 NOP  <||@
  Comment 330 332 NOP  <||@
  Comment 331 334 NOP  <||@
  Comment 332 336 NOP  <||@
  Comment 333 338 NOP  <||@
  Comment 334 340 NOP  <||@
  Comment 335 342 NOP  <||@
  Comment 336 344 NOP  <||@
  Comment 337 346 rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 344 348 rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD  <||@
  Comment 351 350 r14|DWORD = MOV input: [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 355 352 rdi|QWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 358 354 rax|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD  <||@
  Comment 365 356 rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD  <||@
  Comment 369 358 rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD  <||@
  Comment 373 360 rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 379 362 CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD  <||@
  Comment 388 block B13 null  <||@
  Comment 388 402 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 388 404 NOP  <||@
  Comment 389 406 NOP  <||@
  Comment 390 408 NOP  <||@
  Comment 391 410 NOP  <||@
  Comment 392 412 NOP  <||@
  Comment 393 414 NOP  <||@
  Comment 394 416 NOP  <||@
  Comment 395 418 NOP  <||@
  Comment 396 420 NOP  <||@
  Comment 397 422 NOP  <||@
  Comment 398 424 NOP  <||@
  Comment 399 426 NOP  <||@
  Comment 400 428 NOP  <||@
  Comment 401 430 NOP  <||@
  Comment 402 432 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 409 434 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 417 436 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 425 438 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 433 440 MOV x: [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 440 442 MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 440 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 447 444 MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 451 446 rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD  <||@
  Comment 455 448 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 468 block B14 null  <||@
  Comment 468 450 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 468 452 NOP  <||@
  Comment 469 454 NOP  <||@
  Comment 470 456 NOP  <||@
  Comment 471 458 rcx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 478 460 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 483 block B16 loop 1 depth 1 header:848|LoopBegin  <||@
  Comment 483 474 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 512 476 NOP  <||@
  Comment 513 478 NOP  <||@
  Comment 514 480 NOP  <||@
  Comment 515 482 NOP  <||@
  Comment 516 484 NOP  <||@
  Comment 517 486 NOP  <||@
  Comment 518 488 NOP  <||@
  Comment 519 490 MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 527 492 rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD  <||@
  Comment 531 494 JUMP ~outgoingValues: [] destination: B16 -> B15  <||@
  Comment 531 block B15 loop 1 depth 1 header:848|LoopBegin  <||@
  Comment 531 462 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 531 464 NOP  <||@
  Comment 532 466 NOP  <||@
  Comment 533 468 NOP  <||@
  Comment 534 470 NOP  <||@
  Comment 535 472 CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD  <||@
  Comment 540 block B17 null  <||@
  Comment 540 496 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 540 498 NOP  <||@
  Comment 541 500 NOP  <||@
  Comment 542 502 NOP  <||@
  Comment 543 504 JUMP ~outgoingValues: [] destination: B17 -> B19  <||@
  Comment 543 block B19 null  <||@
  Comment 543 546 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 543 548 NOP  <||@
  Comment 544 550 NOP  <||@
  Comment 545 552 NOP  <||@
  Comment 546 554 NOP  <||@
  Comment 547 556 rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 547 558 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 552 560 JUMP ~outgoingValues: [] destination: B19 -> B20  <||@
  Comment 552 block B20 null  <||@
  Comment 552 562 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 552 564 NOP  <||@
  Comment 553 566 NOP  <||@
  Comment 554 568 NOP  <||@
  Comment 555 570 NOP  <||@
  Comment 556 572 NOP  <||@
  Comment 557 574 NOP  <||@
  Comment 558 576 NOP  <||@
  Comment 559 578 NOP  <||@
  Comment 560 580 NOP  <||@
  Comment 561 582 NOP  <||@
  Comment 562 584 NOP  <||@
  Comment 563 586 NOP  <||@
  Comment 564 588 NOP  <||@
  Comment 565 590 NOP  <||@
  Comment 566 592 rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 573 594 rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD  <||@
  Comment 580 596 rax|DWORD = MOV input: [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 584 598 r8|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 587 600 r8|QWORD = SHL x: r8|QWORD y: 2 size: QWORD  <||@
  Comment 591 602 r8|QWORD = LEA address: [r8|QWORD + 23] size: QWORD  <||@
  Comment 595 604 r8|QWORD = AND x: r8|QWORD y: -8 size: QWORD  <||@
  Comment 599 606 stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 604 608 r10|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 610 610 CMPBRANCH (x: r10|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD  <||@
  Comment 619 block B22 null  <||@
  Comment 619 660 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 619 662 NOP  <||@
  Comment 620 664 NOP  <||@
  Comment 621 666 NOP  <||@
  Comment 622 668 NOP  <||@
  Comment 623 670 NOP  <||@
  Comment 624 672 NOP  <||@
  Comment 625 674 NOP  <||@
  Comment 626 676 NOP  <||@
  Comment 627 678 NOP  <||@
  Comment 628 680 NOP  <||@
  Comment 629 682 NOP  <||@
  Comment 630 684 NOP  <||@
  Comment 631 686 NOP  <||@
  Comment 632 688 NOP  <||@
  Comment 633 690 MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD  <||@
  Comment 640 692 AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 649 694 AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 658 696 AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 667 698 MOV x: [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 674 700 MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed}  <||@
  Comment 674 {meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed}}  <||@
  Comment 681 702 MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 684 704 r10|QWORD = LEA address: [r8|QWORD - 16] size: QWORD  <||@
  Comment 688 706 CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 701 block B23 null  <||@
  Comment 701 708 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 701 710 NOP  <||@
  Comment 702 712 NOP  <||@
  Comment 703 714 NOP  <||@
  Comment 704 716 rcx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 711 718 JUMP ~outgoingValues: [] destination: B23 -> B24  <||@
  Comment 716 block B25 loop 2 depth 1 header:920|LoopBegin  <||@
  Comment 716 732 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 736 734 NOP  <||@
  Comment 737 736 NOP  <||@
  Comment 738 738 NOP  <||@
  Comment 739 740 NOP  <||@
  Comment 740 742 NOP  <||@
  Comment 741 744 NOP  <||@
  Comment 742 746 NOP  <||@
  Comment 743 748 MOV x: [rsi|QWORD + rcx|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 751 750 rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD  <||@
  Comment 755 752 JUMP ~outgoingValues: [] destination: B25 -> B24  <||@
  Comment 755 block B24 loop 2 depth 1 header:920|LoopBegin  <||@
  Comment 755 720 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 755 722 NOP  <||@
  Comment 756 724 NOP  <||@
  Comment 757 726 NOP  <||@
  Comment 758 728 NOP  <||@
  Comment 759 730 CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD  <||@
  Comment 764 block B26 null  <||@
  Comment 764 754 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 764 756 NOP  <||@
  Comment 765 758 NOP  <||@
  Comment 766 760 NOP  <||@
  Comment 767 762 JUMP ~outgoingValues: [] destination: B26 -> B28  <||@
  Comment 767 block B28 null  <||@
  Comment 767 816 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 767 818 NOP  <||@
  Comment 768 820 NOP  <||@
  Comment 769 822 NOP  <||@
  Comment 770 824 NOP  <||@
  Comment 771 826 rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD  <||@
  Comment 771 828 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 774 830 JUMP ~outgoingValues: [] destination: B28 -> B29  <||@
  Comment 774 block B29 null  <||@
  Comment 774 832 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 774 834 NOP  <||@
  Comment 775 836 NOP  <||@
  Comment 776 838 NOP  <||@
  Comment 777 840 NOP  <||@
  Comment 778 842 TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD  <||@
  Comment 790 block B31 null  <||@
  Comment 790 858 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 790 860 NOP  <||@
  Comment 791 862 NOP  <||@
  Comment 792 864 NOP  <||@
  Comment 793 866 NOP  <||@
  Comment 794 868 CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null  <||@
  Comment 803 block B33 null  <||@
  Comment 803 880 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 803 882 NOP  <||@
  Comment 804 884 NOP  <||@
  Comment 805 886 NOP  <||@
  Comment 806 888 NOP  <||@
  Comment 807 890 NOP  <||@
  Comment 808 892 NOP  <||@
  Comment 809 894 rcx|DWORD = DEC value: rbp|DWORD size: DWORD  <||@
  Comment 813 896 rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 816 898 CMPBRANCH (x: r13|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD  <||@
  Comment 825 block B34 null  <||@
  Comment 825 900 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 825 902 NOP  <||@
  Comment 826 904 NOP  <||@
  Comment 827 906 NOP  <||@
  Comment 828 908 JUMP ~outgoingValues: [] destination: B34 -> B35  <||@
  Comment 828 block B35 null  <||@
  Comment 828 910 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 828 912 NOP  <||@
  Comment 829 914 NOP  <||@
  Comment 830 916 NOP  <||@
  Comment 831 918 NOP  <||@
  Comment 832 920 TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD  <||@
  Comment 844 block B37 null  <||@
  Comment 844 944 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 844 946 NOP  <||@
  Comment 845 948 NOP  <||@
  Comment 846 950 NOP  <||@
  Comment 847 952 NOP  <||@
  Comment 848 954 NOP  <||@
  Comment 849 956 NOP  <||@
  Comment 850 958 MOV x: [r9|QWORD[.] + 16] y: -1 size: DWORD  <||@
  Comment 858 960 CMP x: rbp|DWORD y: 3 size: DWORD  <||@
  Comment 861 962 rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<|  <||@
  Comment 869 964 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 874 966 JUMP ~outgoingValues: [] destination: B37 -> B38  <||@
  Comment 879 block B39 loop 3 depth 1 header:59|LoopBegin  <||@
  Comment 879 980 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 896 982 NOP  <||@
  Comment 897 984 NOP  <||@
  Comment 898 986 NOP  <||@
  Comment 899 988 NOP  <||@
  Comment 900 990 NOP  <||@
  Comment 901 992 MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 910 994 rsi|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 912 996 JUMP ~outgoingValues: [] destination: B39 -> B38  <||@
  Comment 912 block B38 loop 3 depth 1 header:59|LoopBegin  <||@
  Comment 912 968 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 912 970 NOP  <||@
  Comment 913 972 NOP  <||@
  Comment 914 974 NOP  <||@
  Comment 915 976 NOP  <||@
  Comment 916 978 CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD  <||@
  Comment 920 block B40 null  <||@
  Comment 920 998 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 920 1000 NOP  <||@
  Comment 921 1002 NOP  <||@
  Comment 922 1004 NOP  <||@
  Comment 923 1006 NOP  <||@
  Comment 924 1008 NOP  <||@
  Comment 925 1010 NOP  <||@
  Comment 926 1012 rcx|DWORD = LEA address: [rbp|DWORD - 16] size: DWORD  <||@
  Comment 929 1014 JUMP ~outgoingValues: [] destination: B40 -> B41  <||@
  Comment 934 block B42 loop 4 depth 1 header:378|LoopBegin  <||@
  Comment 934 1028 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 960 1030 NOP  <||@
  Comment 961 1032 NOP  <||@
  Comment 962 1034 NOP  <||@
  Comment 963 1036 NOP  <||@
  Comment 964 1038 NOP  <||@
  Comment 965 1040 NOP  <||@
  Comment 966 1042 NOP  <||@
  Comment 967 1044 NOP  <||@
  Comment 968 1046 NOP  <||@
  Comment 969 1048 NOP  <||@
  Comment 970 1050 NOP  <||@
  Comment 971 1052 NOP  <||@
  Comment 972 1054 NOP  <||@
  Comment 973 1056 NOP  <||@
  Comment 974 1058 NOP  <||@
  Comment 975 1060 NOP  <||@
  Comment 976 1062 NOP  <||@
  Comment 977 1064 NOP  <||@
  Comment 978 1066 NOP  <||@
  Comment 979 1068 NOP  <||@
  Comment 980 1070 NOP  <||@
  Comment 981 1072 NOP  <||@
  Comment 982 1074 NOP  <||@
  Comment 983 1076 NOP  <||@
  Comment 984 1078 NOP  <||@
  Comment 985 1080 NOP  <||@
  Comment 986 1082 NOP  <||@
  Comment 987 1084 NOP  <||@
  Comment 988 1086 NOP  <||@
  Comment 989 1088 NOP  <||@
  Comment 990 1090 NOP  <||@
  Comment 991 1092 NOP  <||@
  Comment 992 1094 NOP  <||@
  Comment 993 1096 NOP  <||@
  Comment 994 1098 NOP  <||@
  Comment 995 1100 NOP  <||@
  Comment 996 1102 NOP  <||@
  Comment 997 1104 NOP  <||@
  Comment 998 1106 NOP  <||@
  Comment 999 1108 NOP  <||@
  Comment 1000 1110 NOP  <||@
  Comment 1001 1112 NOP  <||@
  Comment 1002 1114 NOP  <||@
  Comment 1003 1116 NOP  <||@
  Comment 1004 1118 NOP  <||@
  Comment 1005 1120 NOP  <||@
  Comment 1006 1122 NOP  <||@
  Comment 1007 1124 NOP  <||@
  Comment 1008 1126 NOP  <||@
  Comment 1009 1128 NOP  <||@
  Comment 1010 1130 NOP  <||@
  Comment 1011 1132 NOP  <||@
  Comment 1012 1134 NOP  <||@
  Comment 1013 1136 NOP  <||@
  Comment 1014 1138 NOP  <||@
  Comment 1015 1140 NOP  <||@
  Comment 1016 1142 NOP  <||@
  Comment 1017 1144 NOP  <||@
  Comment 1018 1146 NOP  <||@
  Comment 1019 1148 NOP  <||@
  Comment 1020 1150 NOP  <||@
  Comment 1021 1152 NOP  <||@
  Comment 1022 1154 NOP  <||@
  Comment 1023 1156 NOP  <||@
  Comment 1024 1158 NOP  <||@
  Comment 1025 1160 MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1034 1162 r8|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 1040 1164 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1049 1166 r8|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD  <||@
  Comment 1053 1168 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1062 1170 r8|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD  <||@
  Comment 1066 1172 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1075 1174 r8|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD  <||@
  Comment 1079 1176 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1088 1178 r8|DWORD = LEA address: [rsi|DWORD + 5] size: DWORD  <||@
  Comment 1092 1180 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1101 1182 r8|DWORD = LEA address: [rsi|DWORD + 6] size: DWORD  <||@
  Comment 1105 1184 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1114 1186 r8|DWORD = LEA address: [rsi|DWORD + 7] size: DWORD  <||@
  Comment 1118 1188 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1127 1190 r8|DWORD = LEA address: [rsi|DWORD + 8] size: DWORD  <||@
  Comment 1131 1192 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1140 1194 r8|DWORD = LEA address: [rsi|DWORD + 9] size: DWORD  <||@
  Comment 1144 1196 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1153 1198 r8|DWORD = LEA address: [rsi|DWORD + 10] size: DWORD  <||@
  Comment 1157 1200 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1166 1202 r8|DWORD = LEA address: [rsi|DWORD + 11] size: DWORD  <||@
  Comment 1170 1204 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1179 1206 r8|DWORD = LEA address: [rsi|DWORD + 12] size: DWORD  <||@
  Comment 1183 1208 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1192 1210 r8|DWORD = LEA address: [rsi|DWORD + 13] size: DWORD  <||@
  Comment 1196 1212 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1205 1214 r8|DWORD = LEA address: [rsi|DWORD + 14] size: DWORD  <||@
  Comment 1209 1216 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1218 1218 r8|DWORD = LEA address: [rsi|DWORD + 15] size: DWORD  <||@
  Comment 1222 1220 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1231 1222 rsi|DWORD = LEA address: [rsi|DWORD + 16] size: DWORD  <||@
  Comment 1234 1224 JUMP ~outgoingValues: [] destination: B42 -> B41  <||@
  Comment 1234 block B41 loop 4 depth 1 header:378|LoopBegin  <||@
  Comment 1234 1016 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1234 1018 NOP  <||@
  Comment 1235 1020 NOP  <||@
  Comment 1236 1022 NOP  <||@
  Comment 1237 1024 NOP  <||@
  Comment 1238 1026 CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD  <||@
  Comment 1246 block B43 null  <||@
  Comment 1246 1226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1246 1228 NOP  <||@
  Comment 1247 1230 NOP  <||@
  Comment 1248 1232 NOP  <||@
  Comment 1249 1234 JUMP ~outgoingValues: [] destination: B43 -> B44  <||@
  Comment 1254 block B45 loop 5 depth 1 header:398|LoopBegin  <||@
  Comment 1254 1248 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1280 1250 NOP  <||@
  Comment 1281 1252 NOP  <||@
  Comment 1282 1254 NOP  <||@
  Comment 1283 1256 NOP  <||@
  Comment 1284 1258 NOP  <||@
  Comment 1285 1260 MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1294 1262 rsi|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 1296 1264 JUMP ~outgoingValues: [] destination: B45 -> B44  <||@
  Comment 1296 block B44 loop 5 depth 1 header:398|LoopBegin  <||@
  Comment 1296 1236 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1296 1238 NOP  <||@
  Comment 1297 1240 NOP  <||@
  Comment 1298 1242 NOP  <||@
  Comment 1299 1244 NOP  <||@
  Comment 1300 1246 CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD  <||@
  Comment 1304 block B46 null  <||@
  Comment 1304 1266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1304 1268 NOP  <||@
  Comment 1305 1270 NOP  <||@
  Comment 1306 1272 NOP  <||@
  Comment 1307 1274 JUMP ~outgoingValues: [] destination: B46 -> B47  <||@
  Comment 1307 block B47 null  <||@
  Comment 1307 1276 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1307 1278 NOP  <||@
  Comment 1308 1280 NOP  <||@
  Comment 1309 1282 NOP  <||@
  Comment 1310 1284 NOP  <||@
  Comment 1311 1286 TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD  <||@
  Comment 1320 block B49 null  <||@
  Comment 1320 1298 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1320 1300 NOP  <||@
  Comment 1321 1302 NOP  <||@
  Comment 1322 1304 NOP  <||@
  Comment 1323 1306 NOP  <||@
  Comment 1324 1308 CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null  <||@
  Comment 1334 block B51 null  <||@
  Comment 1334 1320 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1334 1322 NOP  <||@
  Comment 1335 1324 NOP  <||@
  Comment 1336 1326 NOP  <||@
  Comment 1337 1328 NOP  <||@
  Comment 1338 1330 NOP  <||@
  Comment 1339 1332 NOP  <||@
  Comment 1340 1334 rcx|DWORD = DEC value: r14|DWORD size: DWORD  <||@
  Comment 1345 1336 rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 1348 1338 CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD  <||@
  Comment 1357 block B52 null  <||@
  Comment 1357 1340 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1357 1342 NOP  <||@
  Comment 1358 1344 NOP  <||@
  Comment 1359 1346 NOP  <||@
  Comment 1360 1348 JUMP ~outgoingValues: [] destination: B52 -> B53  <||@
  Comment 1360 block B53 null  <||@
  Comment 1360 1350 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1360 1352 NOP  <||@
  Comment 1361 1354 NOP  <||@
  Comment 1362 1356 NOP  <||@
  Comment 1363 1358 NOP  <||@
  Comment 1364 1360 NOP  <||@
  Comment 1365 1362 NOP  <||@
  Comment 1366 1364 MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD  <||@
  Comment 1373 1366 CMP x: r14|DWORD y: 3 size: DWORD  <||@
  Comment 1377 1368 rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r14|DWORD) condition: |<|  <||@
  Comment 1386 1370 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1391 1372 JUMP ~outgoingValues: [] destination: B53 -> B54  <||@
  Comment 1396 block B55 loop 6 depth 1 header:74|LoopBegin  <||@
  Comment 1396 1386 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1408 1388 NOP  <||@
  Comment 1409 1390 NOP  <||@
  Comment 1410 1392 NOP  <||@
  Comment 1411 1394 NOP  <||@
  Comment 1412 1396 NOP  <||@
  Comment 1413 1398 MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1421 1400 rsi|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 1423 1402 JUMP ~outgoingValues: [] destination: B55 -> B54  <||@
  Comment 1423 block B54 loop 6 depth 1 header:74|LoopBegin  <||@
  Comment 1423 1374 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1423 1376 NOP  <||@
  Comment 1424 1378 NOP  <||@
  Comment 1425 1380 NOP  <||@
  Comment 1426 1382 NOP  <||@
  Comment 1427 1384 CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD  <||@
  Comment 1431 block B56 null  <||@
  Comment 1431 1404 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1431 1406 NOP  <||@
  Comment 1432 1408 NOP  <||@
  Comment 1433 1410 NOP  <||@
  Comment 1434 1412 NOP  <||@
  Comment 1435 1414 NOP  <||@
  Comment 1436 1416 NOP  <||@
  Comment 1437 1418 rcx|DWORD = LEA address: [r14|DWORD - 4] size: DWORD  <||@
  Comment 1441 1420 JUMP ~outgoingValues: [] destination: B56 -> B57  <||@
  Comment 1446 block B58 loop 7 depth 1 header:422|LoopBegin  <||@
  Comment 1446 1434 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1472 1436 NOP  <||@
  Comment 1473 1438 NOP  <||@
  Comment 1474 1440 NOP  <||@
  Comment 1475 1442 NOP  <||@
  Comment 1476 1444 NOP  <||@
  Comment 1477 1446 NOP  <||@
  Comment 1478 1448 NOP  <||@
  Comment 1479 1450 NOP  <||@
  Comment 1480 1452 NOP  <||@
  Comment 1481 1454 NOP  <||@
  Comment 1482 1456 NOP  <||@
  Comment 1483 1458 NOP  <||@
  Comment 1484 1460 NOP  <||@
  Comment 1485 1462 NOP  <||@
  Comment 1486 1464 NOP  <||@
  Comment 1487 1466 NOP  <||@
  Comment 1488 1468 NOP  <||@
  Comment 1489 1470 MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1497 1472 rdi|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 1501 1474 MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1509 1476 rdi|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD  <||@
  Comment 1512 1478 MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1520 1480 rdi|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD  <||@
  Comment 1523 1482 MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1531 1484 rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD  <||@
  Comment 1534 1486 JUMP ~outgoingValues: [] destination: B58 -> B57  <||@
  Comment 1534 block B57 loop 7 depth 1 header:422|LoopBegin  <||@
  Comment 1534 1422 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1534 1424 NOP  <||@
  Comment 1535 1426 NOP  <||@
  Comment 1536 1428 NOP  <||@
  Comment 1537 1430 NOP  <||@
  Comment 1538 1432 CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD  <||@
  Comment 1542 block B59 null  <||@
  Comment 1542 1488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1542 1490 NOP  <||@
  Comment 1543 1492 NOP  <||@
  Comment 1544 1494 NOP  <||@
  Comment 1545 1496 JUMP ~outgoingValues: [] destination: B59 -> B60  <||@
  Comment 1550 block B61 loop 8 depth 1 header:442|LoopBegin  <||@
  Comment 1550 1510 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1568 1512 NOP  <||@
  Comment 1569 1514 NOP  <||@
  Comment 1570 1516 NOP  <||@
  Comment 1571 1518 NOP  <||@
  Comment 1572 1520 NOP  <||@
  Comment 1573 1522 MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1581 1524 rsi|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 1583 1526 JUMP ~outgoingValues: [] destination: B61 -> B60  <||@
  Comment 1583 block B60 loop 8 depth 1 header:442|LoopBegin  <||@
  Comment 1583 1498 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1583 1500 NOP  <||@
  Comment 1584 1502 NOP  <||@
  Comment 1585 1504 NOP  <||@
  Comment 1586 1506 NOP  <||@
  Comment 1587 1508 CMPBRANCH (x: r14|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD  <||@
  Comment 1592 block B62 null  <||@
  Comment 1592 1528 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1592 1530 NOP  <||@
  Comment 1593 1532 NOP  <||@
  Comment 1594 1534 NOP  <||@
  Comment 1595 1536 JUMP ~outgoingValues: [] destination: B62 -> B63  <||@
  Comment 1595 block B63 null  <||@
  Comment 1595 1538 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1595 1540 NOP  <||@
  Comment 1596 1542 NOP  <||@
  Comment 1597 1544 NOP  <||@
  Comment 1598 1546 NOP  <||@
  Comment 1599 1548 CMPCONSTBRANCH x: [r11|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38]  <||@
  Comment 1599 [rdx:0, r9:0, r10:0, r11:0, stack:8]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |1 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |   |   |    <||@
  Comment 1599 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1599 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1613 block B64 null  <||@
  Comment 1613 1550 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1613 1552 NOP  <||@
  Comment 1614 1554 NOP  <||@
  Comment 1615 1556 NOP  <||@
  Comment 1616 1558 NOP  <||@
  Comment 1617 1560 NOP  <||@
  Comment 1618 1562 NOP  <||@
  Comment 1619 1564 rcx|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD  <||@
  Comment 1623 1566 rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38]  <||@
  Comment 1623 [rdx:0, r9:0, r10:0, r11:0, stack:8]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |1 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |   |   |    <||@
  Comment 1623 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1630 1568 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD  <||@
  Comment 1638 block B65 null  <||@
  Comment 1638 1570 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1638 1572 NOP  <||@
  Comment 1639 1574 NOP  <||@
  Comment 1640 1576 NOP  <||@
  Comment 1641 1578 NOP  <||@
  Comment 1642 1580 NOP  <||@
  Comment 1643 1582 NOP  <||@
  Comment 1644 1584 NOP  <||@
  Comment 1645 1586 NOP  <||@
  Comment 1646 1588 rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1653 1590 rax|QWORD = LEA address: [rcx|QWORD + 80] size: QWORD  <||@
  Comment 1657 1592 CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD  <||@
  Comment 1670 block B67 null  <||@
  Comment 1670 1624 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1670 1626 NOP  <||@
  Comment 1671 1628 NOP  <||@
  Comment 1672 1630 NOP  <||@
  Comment 1673 1632 NOP  <||@
  Comment 1674 1634 NOP  <||@
  Comment 1675 1636 NOP  <||@
  Comment 1676 1638 NOP  <||@
  Comment 1677 1640 NOP  <||@
  Comment 1678 1642 NOP  <||@
  Comment 1679 1644 NOP  <||@
  Comment 1680 1646 NOP  <||@
  Comment 1681 1648 NOP  <||@
  Comment 1682 1650 NOP  <||@
  Comment 1683 1652 NOP  <||@
  Comment 1684 1654 NOP  <||@
  Comment 1685 1656 NOP  <||@
  Comment 1686 1658 NOP  <||@
  Comment 1687 1660 MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD  <||@
  Comment 1694 1662 AMD64PREFETCH ~address: [rcx|QWORD + 336] instr: 0  <||@
  Comment 1701 1664 MOV x: [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 1708 1666 MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed}  <||@
  Comment 1708 {meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed}}  <||@
  Comment 1715 1668 MOV x: [rcx|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1722 1670 MOV x: [rcx|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 1730 1672 MOV x: [rcx|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 1738 1674 MOV x: [rcx|QWORD + 32] y: 0 size: QWORD  <||@
  Comment 1746 1676 MOV x: [rcx|QWORD + 40] y: 0 size: QWORD  <||@
  Comment 1754 1678 MOV x: [rcx|QWORD + 48] y: 0 size: QWORD  <||@
  Comment 1762 1680 MOV x: [rcx|QWORD + 56] y: 0 size: QWORD  <||@
  Comment 1770 1682 MOV x: [rcx|QWORD + 64] y: 0 size: QWORD  <||@
  Comment 1778 1684 MOV x: [rcx|QWORD + 72] y: 0 size: QWORD  <||@
  Comment 1786 1686 rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 1786 1688 rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1789 1690 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1794 1692 JUMP ~outgoingValues: [] destination: B67 -> B68  <||@
  Comment 1794 block B68 null  <||@
  Comment 1794 1694 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1794 1696 NOP  <||@
  Comment 1795 1698 NOP  <||@
  Comment 1796 1700 NOP  <||@
  Comment 1797 1702 NOP  <||@
  Comment 1798 1704 NOP  <||@
  Comment 1799 1706 NOP  <||@
  Comment 1800 1708 NOP  <||@
  Comment 1801 1710 NOP  <||@
  Comment 1802 1712 NOP  <||@
  Comment 1803 1714 NOP  <||@
  Comment 1804 1716 NOP  <||@
  Comment 1805 1718 NOP  <||@
  Comment 1806 1720 NOP  <||@
  Comment 1807 1722 NOP  <||@
  Comment 1808 1724 NOP  <||@
  Comment 1809 1726 NOP  <||@
  Comment 1810 1728 NOP  <||@
  Comment 1811 1730 NOP  <||@
  Comment 1812 1732 NOP  <||@
  Comment 1813 1734 NOP  <||@
  Comment 1814 1736 NOP  <||@
  Comment 1815 1738 NOP  <||@
  Comment 1816 1740 NOP  <||@
  Comment 1817 1742 NOP  <||@
  Comment 1818 1744 NOP  <||@
  Comment 1819 1746 NOP  <||@
  Comment 1820 1748 r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3  <||@
  Comment 1824 1750 MOV (x: [rax|QWORD[.] + 68], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 1828 1752 rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3  <||@
  Comment 1832 1754 MOV (x: [rax|QWORD[.] + 64], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 1835 1756 rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3  <||@
  Comment 1842 1758 MOV (x: [rax|QWORD[.] + 60], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 1845 1760 r9|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3  <||@
  Comment 1849 1762 MOV (x: [rax|QWORD[.] + 56], y: r9|DWORD[_]) size: DWORD  <||@
  Comment 1853 1764 r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3  <||@
  Comment 1860 1766 MOV (x: [rax|QWORD[.] + 52], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 1864 1768 MOVB x: [rax|QWORD[.] + 51] y: 1 size: BYTE  <||@
  Comment 1868 1770 MOV x: [rax|QWORD[.] + 44] y: 1 size: DWORD  <||@
  Comment 1875 1772 MOV x: [rax|QWORD[.] + 36] y: -1 size: DWORD  <||@
  Comment 1882 1774 MOV x: [rax|QWORD[.] + 28] y: -1 size: DWORD  <||@
  Comment 1889 1776 rcx|DWORD = MOVSXB input: [r11|QWORD[.] + 16] size: DWORD  <||@
  Comment 1894 1778 rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1896 1780 MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 1899 1782 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1908 POLL_RETURN_FAR  <||@
  Comment 1925 block B32 null  <||@
  Comment 1925 870 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1925 872 NOP  <||@
  Comment 1926 874 NOP  <||@
  Comment 1927 876 NOP  <||@
  Comment 1928 878 JUMP ~outgoingValues: [] destination: B32 -> B35  <||@
  Comment 1933 block B50 null  <||@
  Comment 1933 1310 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1933 1312 NOP  <||@
  Comment 1934 1314 NOP  <||@
  Comment 1935 1316 NOP  <||@
  Comment 1936 1318 JUMP ~outgoingValues: [] destination: B50 -> B53  <||@
  Comment 1941 block B48 null  <||@
  Comment 1941 1288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1941 1290 NOP  <||@
  Comment 1942 1292 NOP  <||@
  Comment 1943 1294 NOP  <||@
  Comment 1944 1296 JUMP ~outgoingValues: [] destination: B48 -> B63  <||@
  Comment 1949 block B30 null  <||@
  Comment 1949 844 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1949 846 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1954 848 NOP  <||@
  Comment 1955 850 NOP  <||@
  Comment 1956 852 NOP  <||@
  Comment 1957 856 JUMP ~outgoingValues: [] destination: B30 -> B47  <||@
  Comment 1962 block B66 null  <||@
  Comment 1962 1594 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1962 1596 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1967 1598 NOP  <||@
  Comment 1968 1600 NOP  <||@
  Comment 1969 1602 NOP  <||@
  Comment 1970 1604 NOP  <||@
  Comment 1971 1606 NOP  <||@
  Comment 1972 1608 NOP  <||@
  Comment 1973 1610 NOP  <||@
  Comment 1974 1612 NOP  <||@
  Comment 1975 1614 NOP  <||@
  Comment 1976 1616 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>}  <||@
  Comment 1976 {meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>}}  <||@
  Comment 1986 1618 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38]  <||@
  Comment 1986 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1991 [rdx:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |1 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |   |   |    <||@
  Comment 1999 1620 NULLCHECK address: [rax|QWORD[.]] state [bci:63, 90, 38]  <||@
  Comment 1999 [rax:0, rdx:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |1 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |   |   |    <||@
  Comment 1999 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2001 1622 JUMP ~outgoingValues: [] destination: B66 -> B68  <||@
  Comment 2006 block B12 null  <||@
  Comment 2006 364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2006 366 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 2011 368 r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2014 370 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2014 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2024 372 NOP  <||@
  Comment 2025 374 NOP  <||@
  Comment 2026 376 NOP  <||@
  Comment 2027 378 NOP  <||@
  Comment 2028 380 NOP  <||@
  Comment 2029 382 NOP  <||@
  Comment 2030 384 NOP  <||@
  Comment 2031 386 NOP  <||@
  Comment 2032 388 NOP  <||@
  Comment 2033 390 rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 2036 392 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4]  <||@
  Comment 2036 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2041 [r8:0, r9:0, r11:0]at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4, duringCall: false, rethrow: false]
              |0               |1             |2  |3 
     locals:  |r8|QWORD[.]     |r11|QWORD[.]  |-  |- 
     stack:   |stack:28|DWORD  |              |   |    <||@
  Comment 2049 394 NULLCHECK address: [rax|QWORD[.]] state [bci:4]  <||@
  Comment 2049 [rax:0, r8:0, r9:0, r11:0]at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4, duringCall: false, rethrow: false]
              |0               |1             |2  |3 
     locals:  |r8|QWORD[.]     |r11|QWORD[.]  |-  |- 
     stack:   |stack:28|DWORD  |              |   |    <||@
  Comment 2049 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2051 396 rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2054 398 r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2057 400 JUMP ~outgoingValues: [] destination: B12 -> B20  <||@
  Comment 2062 block B3 null  <||@
  Comment 2062 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2062 124 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 2067 126 r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2070 128 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2070 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2080 130 NOP  <||@
  Comment 2081 132 NOP  <||@
  Comment 2082 134 NOP  <||@
  Comment 2083 136 NOP  <||@
  Comment 2084 138 NOP  <||@
  Comment 2085 140 NOP  <||@
  Comment 2086 142 NOP  <||@
  Comment 2087 144 NOP  <||@
  Comment 2088 146 NOP  <||@
  Comment 2089 148 rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2091 150 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4]  <||@
  Comment 2091 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2096 [r8:0, r11:0]at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4, duringCall: false, rethrow: false]
              |0               |1             |2  |3 
     locals:  |r8|QWORD[.]     |r11|QWORD[.]  |-  |- 
     stack:   |stack:28|DWORD  |              |   |    <||@
  Comment 2104 152 NULLCHECK address: [rax|QWORD[.]] state [bci:4]  <||@
  Comment 2104 [rax:0, r8:0, r11:0]at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4, duringCall: false, rethrow: false]
              |0               |1             |2  |3 
     locals:  |r8|QWORD[.]     |r11|QWORD[.]  |-  |- 
     stack:   |stack:28|DWORD  |              |   |    <||@
  Comment 2104 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2106 154 r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2109 156 r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2112 158 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2117 160 JUMP ~outgoingValues: [] destination: B3 -> B11  <||@
  Comment 2122 block B21 null  <||@
  Comment 2122 612 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2122 614 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2127 616 NOP  <||@
  Comment 2128 618 NOP  <||@
  Comment 2129 620 NOP  <||@
  Comment 2130 622 NOP  <||@
  Comment 2131 624 NOP  <||@
  Comment 2132 626 NOP  <||@
  Comment 2133 628 NOP  <||@
  Comment 2134 630 NOP  <||@
  Comment 2135 632 NOP  <||@
  Comment 2136 634 NOP  <||@
  Comment 2137 636 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>}  <||@
  Comment 2137 {meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>}}  <||@
  Comment 2147 638 rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2150 640 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 2152 642 r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 2155 644 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4]  <||@
  Comment 2155 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2160 [rcx:0, r8:0, r9:0, r11:0]at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4, duringCall: false, rethrow: false]
              |0               |1             |2  |3 
     locals:  |r8|QWORD[.]     |r11|QWORD[.]  |-  |- 
     stack:   |stack:28|DWORD  |              |   |    <||@
  Comment 2168 646 NULLCHECK address: [rax|QWORD[.]] state [bci:4]  <||@
  Comment 2168 [rax:0, rcx:0, r8:0, r9:0, r11:0]at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4, duringCall: false, rethrow: false]
              |0               |1             |2  |3 
     locals:  |r8|QWORD[.]     |r11|QWORD[.]  |-  |- 
     stack:   |stack:28|DWORD  |              |   |    <||@
  Comment 2168 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2170 648 rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2173 650 stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2178 652 stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 2183 654 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2186 656 rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2190 658 JUMP ~outgoingValues: [] destination: B21 -> B29  <||@
  Comment 2195 block B27 null  <||@
  Comment 2195 764 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2195 766 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2200 768 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2205 770 stack:40|QWORD = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 2210 772 rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2213 774 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 2215 776 rax|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD  <||@
  Comment 2220 778 NOP  <||@
  Comment 2221 780 NOP  <||@
  Comment 2222 782 NOP  <||@
  Comment 2223 784 NOP  <||@
  Comment 2224 786 NOP  <||@
  Comment 2225 788 NOP  <||@
  Comment 2226 790 NOP  <||@
  Comment 2227 792 NOP  <||@
  Comment 2228 794 NOP  <||@
  Comment 2229 796 rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 2232 798 r11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2235 800 r10|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 2238 802 ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 2248 804 rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 2250 806 rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2253 808 rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 2256 810 r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2261 814 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 2266 block B9 null  <||@
  Comment 2266 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2266 268 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 2271 270 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2276 272 r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2279 274 NOP  <||@
  Comment 2280 276 NOP  <||@
  Comment 2281 278 NOP  <||@
  Comment 2282 280 NOP  <||@
  Comment 2283 282 NOP  <||@
  Comment 2284 284 NOP  <||@
  Comment 2285 286 NOP  <||@
  Comment 2286 288 NOP  <||@
  Comment 2287 290 NOP  <||@
  Comment 2288 292 ZERO_MEMORY (pointer: [r9|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 2298 298 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2303 300 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 2308 block B18 null  <||@
  Comment 2308 506 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2308 508 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 2313 510 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2318 512 r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2321 514 r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 2324 516 NOP  <||@
  Comment 2325 518 NOP  <||@
  Comment 2326 520 NOP  <||@
  Comment 2327 522 NOP  <||@
  Comment 2328 524 NOP  <||@
  Comment 2329 526 NOP  <||@
  Comment 2330 528 NOP  <||@
  Comment 2331 530 NOP  <||@
  Comment 2332 532 NOP  <||@
  Comment 2333 534 ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 2343 536 rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 2346 540 r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2349 542 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2354 544 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 2359 block B72 null  <||@
  Comment 2359 1850 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2359 1852 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2364 1854 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2369 1856 r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2372 1858 NOP  <||@
  Comment 2373 1860 NOP  <||@
  Comment 2374 1862 NOP  <||@
  Comment 2375 1864 NOP  <||@
  Comment 2376 1866 NOP  <||@
  Comment 2377 1868 NOP  <||@
  Comment 2378 1870 NOP  <||@
  Comment 2379 1872 MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD  <||@
  Comment 2390 1874 MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD  <||@
  Comment 2401 1876 DEOPT info [bci:39, 90, 38]  <||@
  Comment 2401 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2406 [r8:0, r9:0, r10:0, r11:0, stack:16]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |1 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |   |   |    <||@
  Comment 2414 block B36 null  <||@
  Comment 2414 922 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2414 924 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2419 926 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2424 928 NOP  <||@
  Comment 2425 930 NOP  <||@
  Comment 2426 932 NOP  <||@
  Comment 2427 934 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2434 936 r10|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5]  <||@
  Comment 2440 942 JUMP ~outgoingValues: [] destination: B36 -> B74  <||@
  Comment 2440 block B74 null  <||@
  Comment 2440 1900 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2440 50 rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2444 52 r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2449 1902 NOP  <||@
  Comment 2450 1904 NOP  <||@
  Comment 2451 1906 NOP  <||@
  Comment 2452 1908 NOP  <||@
  Comment 2453 1910 NOP  <||@
  Comment 2454 1912 NOP  <||@
  Comment 2455 1914 NOP  <||@
  Comment 2456 1916 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2463 1918 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2470 1920 DEOPT info [bci:4]  <||@
  Comment 2470 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2475 [r8:0, r9:0]at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4, duringCall: false, rethrow: false]
              |0            |1            |2  |3 
     locals:  |r8|QWORD[.]  |r9|QWORD[.]  |-  |- 
     stack:   |rcx|DWORD    |             |   |    <||@
  Comment 2483 block B69 null  <||@
  Comment 2483 1784 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2483 1786 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2488 1788 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2493 1790 r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2496 1792 NOP  <||@
  Comment 2497 1794 NOP  <||@
  Comment 2498 1796 NOP  <||@
  Comment 2499 1798 rcx|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 2506 1802 r11|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed]  <||@
  Comment 2512 1804 JUMP ~outgoingValues: [] destination: B69 -> B71  <||@
  Comment 2512 block B71 null  <||@
  Comment 2512 1828 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2512 1830 NOP  <||@
  Comment 2513 1832 NOP  <||@
  Comment 2514 1834 NOP  <||@
  Comment 2515 1836 NOP  <||@
  Comment 2516 1838 NOP  <||@
  Comment 2517 1840 NOP  <||@
  Comment 2518 1842 NOP  <||@
  Comment 2519 1844 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 2526 1846 MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD  <||@
  Comment 2533 1848 DEOPT info [bci:63, 90, 38]  <||@
  Comment 2533 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2538 [rdx:0, r8:0, r9:0, r10:0, stack:16]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |1 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |   |   |    <||@
  Comment 2546 block B1 null  <||@
  Comment 2546 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2546 34 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 2551 36 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2556 38 r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2559 40 NOP  <||@
  Comment 2560 42 NOP  <||@
  Comment 2561 44 NOP  <||@
  Comment 2562 46 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 2569 48 r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed]  <||@
  Comment 2575 54 JUMP ~outgoingValues: [] destination: B1 -> B74  <||@
  Comment 2580 block B73 null  <||@
  Comment 2580 1878 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2580 1880 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2585 1882 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2590 1884 NOP  <||@
  Comment 2591 1886 NOP  <||@
  Comment 2592 1888 NOP  <||@
  Comment 2593 1890 r11|QWORD = MOVE input: long[1944|0x798]  <||@
  Comment 2600 1892 r10|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5]  <||@
  Comment 2606 1898 JUMP ~outgoingValues: [] destination: B73 -> B74  <||@
  Comment 2611 block B70 null  <||@
  Comment 2611 1806 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2611 1808 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2616 1810 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2621 1812 r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2624 1814 NOP  <||@
  Comment 2625 1816 NOP  <||@
  Comment 2626 1818 NOP  <||@
  Comment 2627 1820 rcx|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 2634 1824 r11|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd]  <||@
  Comment 2640 1826 JUMP ~outgoingValues: [] destination: B70 -> B71  <||@
  Comment 2650 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2675 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2703 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2708 [rdx:0, r9:0, r10:0, r11:0, stack:8]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |1 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |   |   |    <||@
  Comment 2738 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2743 [rdx:0, r9:0, r10:0, r11:0, stack:8]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |1 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |   |   |    <||@
  Comment 2773 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2778 [rax:0, rdx:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |1 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |   |   |    <||@
  Comment 2808 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2813 [rax:0, r8:0, r9:0, r11:0]at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4, duringCall: false, rethrow: false]
              |0               |1             |2  |3 
     locals:  |r8|QWORD[.]     |r11|QWORD[.]  |-  |- 
     stack:   |stack:28|DWORD  |              |   |    <||@
  Comment 2843 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2848 [rax:0, r8:0, r11:0]at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4, duringCall: false, rethrow: false]
              |0               |1             |2  |3 
     locals:  |r8|QWORD[.]     |r11|QWORD[.]  |-  |- 
     stack:   |stack:28|DWORD  |              |   |    <||@
  Comment 2878 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2883 [rax:0, rcx:0, r8:0, r9:0, r11:0]at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4, duringCall: false, rethrow: false]
              |0               |1             |2  |3 
     locals:  |r8|QWORD[.]     |r11|QWORD[.]  |-  |- 
     stack:   |stack:28|DWORD  |              |   |    <||@
  Comment 2891 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2891 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2897 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2897 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8036[java.util.regex.Pattern.matcher(CharSequence)]"
  method "HotSpotCompilation-8036[java.util.regex.Pattern.matcher(CharSequence)]"
  date 1724269752141
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789aed75c0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85a3da8afe66669089842400c0feff4883ec389041817f20000000000f851b0a000090909090909090909048896c24304c8bd64c8bda450fb642284585c00f8496090000909090909090909090909090909090909090904d8b8fb8010000498b8fc8010000418b421883f80abe0a0000008bd80f4cde8bebd1e5448bed498bc548c1e002488d40174883e0f8488bf04903f1483bf10f875b07000090909090909090909090909090904989b7b8010000420f18840800010000420f18840840010000420f1884088001000049c7010100000041c74108a02600004189690c488d48f04881f9000800000f83d307000090909048c7c110000000e91d00000066660f1f8400000000009090909090909049c7040900000000488d490890909090483bc177e4909090909090909090909090909090909090909090498b97b8010000498b8fc8010000458b721c418bfe488bc748c1e002488d40174883e0f8488bf04803f2483bf10f875206000090909090909090909090909090904989b7b80100000f188410000100000f188410400100000f1884108001000048c70201000000c74208a02600004489720c488d48f04881f9000800000f833007000090909048c7c110000000e9300000006666660f1f8400000000006666669066660f1f840000000000666666909090909090909048c7040a00000000488d490890909090483bc177e49090909090909044894424249090909090909090909090909090498bb7b8010000498b8fc8010000418b4214448bc049c1e0024d8d40174983e0f84c895424084d8bd04c03d64c3bd10f87df05000090909090909090909090909090904d8997b8010000410f18843000010000410f18843040010000410f1884308001000048c70601000000c74608b8fd050189460c4d8d50f04981fa000800000f83d605000090909048c7c110000000e9270000006666660f1f840000000000666666900f1f4400009090909090909048c7040e00000000488d4908909090904c3bc177e4909090909090904c8bd690909090f7c3ffffff7f0f84870400009090909083fd020f82620400009090909090908bcdffc94863c94c3be90f86db06000090909090909090f7c3ffffff7f0f842206000090909090909041c74110ffffffff83fd03b9020000000f42cdbe01000000e9210000006666660f1f840000000000666666906690909090909041c744b110ffffffffffc6909090903bce7fe89090909090908d4df0e92c0100006666660f1f840000000000666666906666660f1f840000000000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041c744b110ffffffff448bc641ffc043c7448110ffffffff448d460243c7448110ffffffff448d460343c7448110ffffffff448d460443c7448110ffffffff448d460543c7448110ffffffff448d460643c7448110ffffffff448d460743c7448110ffffffff448d460843c7448110ffffffff448d460943c7448110ffffffff448d460a43c7448110ffffffff448d460b43c7448110ffffffff448d460c43c7448110ffffffff448d460d43c7448110ffffffff448d460e43c7448110ffffffff448d460f43c7448110ffffffff8d7610909090903bce0f8fe2feffff909090e92a0000006666660f1f840000000000666666906666660f1f840000000000909090909041c744b110ffffffffffc6909090903bee7fe8909090909090904585f60f846d020000909090904183fe020f8257020000909090909090418bceffc94863c9483bf90f86ea030000909090909090909090c74210ffffffff4183fe03b902000000410f42cebe01000000e91b0000000f1f840000000000666666909090909090c744b210ffffffffffc6909090903bce7fe9909090909090418d4efce9580000006666660f1f840000000000666666906666660f1f8400000000009090909090909090909090909090909090c744b210ffffffff8bfeffc7c744ba10ffffffff8d7e02c744ba10ffffffff8d7e03c744ba10ffffffff8d7604909090903bce7fba909090e9210000006666660f1f840000000000666666906666909090909090c744b210ffffffffffc690909090443bf67fe89090909090909041817b08d8e800000f85e6030000909090909090418b4b148b3ccd0c00000085c00f854d0300009090909090909090498b8fb8010000488d4150493b87c80100000f87240100009090909090909090909090909090909090498987b80100000f18815001000048c70101000000c7410800fd0c00c7410c0000000048c741100000000048c741180000000048c741200000000048c741280000000048c741300000000048c741380000000048c741400000000048c7414800000000488bc14c8b442408909090909090909090909090909090909090909090909090909049c1ea034489504448c1ea03895040498bcb48c1e90389483c49c1e903448948384d8bd049c1ea0344895034c6403301c7402c01000000c74024ffffffffc7401cffffffff410fbe4b10d3ef897810488b6c24304883c438493ba7500400000f87e4020000c5f877c3909090e9affbffff909090e9bbfdffff909090e99efeffff4c8b442408909090e971fdffff4c8b44240890909090909090909048be00fd0c2b787f0000e8f904a0fe0f1f8400000000008500e92cffffff44894424244d8bc248bea026002b787f0000909090909090909090418bd6e8476e9ffe0f1f8400000000008500488bd04d8bd0e91afaffff44894424244d8bc248bea026002b787f00009090909090909090908bd5e8106e9ffe0f1f84000000000085004c8bc84d8bd0448b442424e9f9f8ffff4c8b4424089090909090909090909048beb8fd052c787f0000488bca8bd0448bd0e8d06d9ffe0f1f8400000000008500488bd14c8944240844895424204c8bd08b442420e973faffff4c895c24104c8b44240848897c2418488bfa8bd0488b442418909090909090909090498bca4c8bdf4c8bd0488d7e104833c0f348aa8bc2498bd3498bfa4c8b5c2410e925faffff44894424244c895c24104d8bc2909090909090909090498d79104833c0f348aa448b442424e93bf8ffff44894424244c895c24104d8bc24c8bd7909090909090909090488d7a104833c0f348aa498bfa4d8bd0448b442424e9e8f8ffff4c895c24104c8b4424084c8bda9090909090909041c78784040000e52affff49c78790040000980a0000e854328bfe0f1f8400000000004c895c24104c8b44240890909049c7c30000000041bae50fffff8b4c24244c8b4c241090909090909090458997840400004d899f90040000e80f328bfe0f1f8400000000004c895c24104c8b4424084c8bda90909048c7c19402000041bbedb0feff9090909090909045899f8404000049898f90040000e8d0318bfe0f1f84000000000044894424244c895c24104d8bc290909049c7c31400000041baedb6feffe974ffffff4c895c24104c8b44240890909049c7c39807000041bae53affffe955ffffff4c895c24104c8b4424084c8bda90909048c7c11405000041bbcd1fffffe97bffffff48896c2430e8013289fee9d6f5fffff4488d0d08fdffff49898f68040000e9c83f8bfef441c78784040000f520ffff49c7879004000000000000e826318bfe0f1f84000000000041c78784040000f51affff49c7879004000000000000e803318bfe0f1f84000000000041c787840400008ff1fbff49c7879004000000000000e8e0308bfe0f1f84000000000041c787840400008f81fcff49c7879004000000000000e8bd308bfe0f1f84000000000041c787840400008fc8fcff49c7879004000000000000e89a308bfe0f1f84000000000041c787840400008f39fcff49c7879004000000000000e877308bfe0f1f840000000000e8f0d19efef4e80a2e8bfef4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 72 22 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@12f61d5 slotKind: QWORD  <||@
  Comment 72 24 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 75 26 r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 78 28 r8|DWORD = MOVZXB input: [r10|QWORD[.] + 40] size: DWORD  <||@
  Comment 83 30 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 92 block B2 null  <||@
  Comment 92 56 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 92 58 NOP  <||@
  Comment 93 60 NOP  <||@
  Comment 94 62 NOP  <||@
  Comment 95 64 NOP  <||@
  Comment 96 66 NOP  <||@
  Comment 97 68 NOP  <||@
  Comment 98 70 NOP  <||@
  Comment 99 72 NOP  <||@
  Comment 100 74 NOP  <||@
  Comment 101 76 NOP  <||@
  Comment 102 78 NOP  <||@
  Comment 103 80 NOP  <||@
  Comment 104 82 NOP  <||@
  Comment 105 84 NOP  <||@
  Comment 106 86 NOP  <||@
  Comment 107 88 NOP  <||@
  Comment 108 90 NOP  <||@
  Comment 109 92 NOP  <||@
  Comment 110 94 NOP  <||@
  Comment 111 96 r9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 118 98 rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD  <||@
  Comment 125 100 rax|DWORD = MOV input: [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 129 102 CMP x: rax|DWORD y: 10 size: DWORD  <||@
  Comment 132 104 rsi|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 137 106 rbx|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: <  <||@
  Comment 142 108 rbp|DWORD = SHL value: rbx|DWORD size: DWORD  <||@
  Comment 146 110 r13|QWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 149 112 rax|QWORD = SHL x: r13|QWORD y: 2 size: QWORD  <||@
  Comment 156 114 rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD  <||@
  Comment 160 116 rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD  <||@
  Comment 164 118 rsi|QWORD = ADD (x: rax|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 170 120 CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 179 block B4 null  <||@
  Comment 179 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 179 164 NOP  <||@
  Comment 180 166 NOP  <||@
  Comment 181 168 NOP  <||@
  Comment 182 170 NOP  <||@
  Comment 183 172 NOP  <||@
  Comment 184 174 NOP  <||@
  Comment 185 176 NOP  <||@
  Comment 186 178 NOP  <||@
  Comment 187 180 NOP  <||@
  Comment 188 182 NOP  <||@
  Comment 189 184 NOP  <||@
  Comment 190 186 NOP  <||@
  Comment 191 188 NOP  <||@
  Comment 192 190 NOP  <||@
  Comment 193 192 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 200 194 AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 256] instr: 0  <||@
  Comment 209 196 AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 320] instr: 0  <||@
  Comment 218 198 AMD64PREFETCH ~address: [rax|QWORD + r9|QWORD * 1 + 384] instr: 0  <||@
  Comment 227 200 MOV x: [r9|QWORD] y: 1 size: QWORD  <||@
  Comment 234 202 MOV x: [r9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 234 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 242 204 MOV (x: [r9|QWORD + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 246 206 rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD  <||@
  Comment 250 208 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 263 block B5 null  <||@
  Comment 263 210 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 263 212 NOP  <||@
  Comment 264 214 NOP  <||@
  Comment 265 216 NOP  <||@
  Comment 266 218 rcx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 273 220 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 278 block B7 loop 0 depth 1 header:768|LoopBegin  <||@
  Comment 278 234 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 288 236 NOP  <||@
  Comment 289 238 NOP  <||@
  Comment 290 240 NOP  <||@
  Comment 291 242 NOP  <||@
  Comment 292 244 NOP  <||@
  Comment 293 246 NOP  <||@
  Comment 294 248 NOP  <||@
  Comment 295 250 MOV x: [r9|QWORD + rcx|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 303 252 rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD  <||@
  Comment 307 254 JUMP ~outgoingValues: [] destination: B7 -> B6  <||@
  Comment 307 block B6 loop 0 depth 1 header:768|LoopBegin  <||@
  Comment 307 222 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 307 224 NOP  <||@
  Comment 308 226 NOP  <||@
  Comment 309 228 NOP  <||@
  Comment 310 230 NOP  <||@
  Comment 311 232 CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD  <||@
  Comment 316 block B8 null  <||@
  Comment 316 256 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 316 258 NOP  <||@
  Comment 317 260 NOP  <||@
  Comment 318 262 NOP  <||@
  Comment 319 264 JUMP ~outgoingValues: [] destination: B8 -> B10  <||@
  Comment 319 block B10 null  <||@
  Comment 319 302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 319 304 NOP  <||@
  Comment 320 306 NOP  <||@
  Comment 321 308 NOP  <||@
  Comment 322 310 NOP  <||@
  Comment 323 312 r9|QWORD[.] = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 323 314 JUMP ~outgoingValues: [] destination: B10 -> B11  <||@
  Comment 323 block B11 null  <||@
  Comment 323 316 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 323 318 NOP  <||@
  Comment 324 320 NOP  <||@
  Comment 325 322 NOP  <||@
  Comment 326 324 NOP  <||@
  Comment 327 326 NOP  <||@
  Comment 328 328 NOP  <||@
  Comment 329 330 NOP  <||@
  Comment 330 332 NOP  <||@
  Comment 331 334 NOP  <||@
  Comment 332 336 NOP  <||@
  Comment 333 338 NOP  <||@
  Comment 334 340 NOP  <||@
  Comment 335 342 NOP  <||@
  Comment 336 344 NOP  <||@
  Comment 337 346 rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 344 348 rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD  <||@
  Comment 351 350 r14|DWORD = MOV input: [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 355 352 rdi|QWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 358 354 rax|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD  <||@
  Comment 365 356 rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD  <||@
  Comment 369 358 rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD  <||@
  Comment 373 360 rsi|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 379 362 CMPBRANCH (x: rsi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD  <||@
  Comment 388 block B13 null  <||@
  Comment 388 402 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 388 404 NOP  <||@
  Comment 389 406 NOP  <||@
  Comment 390 408 NOP  <||@
  Comment 391 410 NOP  <||@
  Comment 392 412 NOP  <||@
  Comment 393 414 NOP  <||@
  Comment 394 416 NOP  <||@
  Comment 395 418 NOP  <||@
  Comment 396 420 NOP  <||@
  Comment 397 422 NOP  <||@
  Comment 398 424 NOP  <||@
  Comment 399 426 NOP  <||@
  Comment 400 428 NOP  <||@
  Comment 401 430 NOP  <||@
  Comment 402 432 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 409 434 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 417 436 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 425 438 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 433 440 MOV x: [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 440 442 MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 440 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 447 444 MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 451 446 rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD  <||@
  Comment 455 448 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 468 block B14 null  <||@
  Comment 468 450 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 468 452 NOP  <||@
  Comment 469 454 NOP  <||@
  Comment 470 456 NOP  <||@
  Comment 471 458 rcx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 478 460 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 483 block B16 loop 1 depth 1 header:848|LoopBegin  <||@
  Comment 483 474 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 512 476 NOP  <||@
  Comment 513 478 NOP  <||@
  Comment 514 480 NOP  <||@
  Comment 515 482 NOP  <||@
  Comment 516 484 NOP  <||@
  Comment 517 486 NOP  <||@
  Comment 518 488 NOP  <||@
  Comment 519 490 MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 527 492 rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD  <||@
  Comment 531 494 JUMP ~outgoingValues: [] destination: B16 -> B15  <||@
  Comment 531 block B15 loop 1 depth 1 header:848|LoopBegin  <||@
  Comment 531 462 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 531 464 NOP  <||@
  Comment 532 466 NOP  <||@
  Comment 533 468 NOP  <||@
  Comment 534 470 NOP  <||@
  Comment 535 472 CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD  <||@
  Comment 540 block B17 null  <||@
  Comment 540 496 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 540 498 NOP  <||@
  Comment 541 500 NOP  <||@
  Comment 542 502 NOP  <||@
  Comment 543 504 JUMP ~outgoingValues: [] destination: B17 -> B19  <||@
  Comment 543 block B19 null  <||@
  Comment 543 546 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 543 548 NOP  <||@
  Comment 544 550 NOP  <||@
  Comment 545 552 NOP  <||@
  Comment 546 554 NOP  <||@
  Comment 547 556 rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 547 558 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 552 560 JUMP ~outgoingValues: [] destination: B19 -> B20  <||@
  Comment 552 block B20 null  <||@
  Comment 552 562 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 552 564 NOP  <||@
  Comment 553 566 NOP  <||@
  Comment 554 568 NOP  <||@
  Comment 555 570 NOP  <||@
  Comment 556 572 NOP  <||@
  Comment 557 574 NOP  <||@
  Comment 558 576 NOP  <||@
  Comment 559 578 NOP  <||@
  Comment 560 580 NOP  <||@
  Comment 561 582 NOP  <||@
  Comment 562 584 NOP  <||@
  Comment 563 586 NOP  <||@
  Comment 564 588 NOP  <||@
  Comment 565 590 NOP  <||@
  Comment 566 592 rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 573 594 rcx|QWORD = MOV input: [r15|QWORD + 456] size: QWORD  <||@
  Comment 580 596 rax|DWORD = MOV input: [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 584 598 r8|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 587 600 r8|QWORD = SHL x: r8|QWORD y: 2 size: QWORD  <||@
  Comment 591 602 r8|QWORD = LEA address: [r8|QWORD + 23] size: QWORD  <||@
  Comment 595 604 r8|QWORD = AND x: r8|QWORD y: -8 size: QWORD  <||@
  Comment 599 606 stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 604 608 r10|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 610 610 CMPBRANCH (x: r10|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD  <||@
  Comment 619 block B22 null  <||@
  Comment 619 660 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 619 662 NOP  <||@
  Comment 620 664 NOP  <||@
  Comment 621 666 NOP  <||@
  Comment 622 668 NOP  <||@
  Comment 623 670 NOP  <||@
  Comment 624 672 NOP  <||@
  Comment 625 674 NOP  <||@
  Comment 626 676 NOP  <||@
  Comment 627 678 NOP  <||@
  Comment 628 680 NOP  <||@
  Comment 629 682 NOP  <||@
  Comment 630 684 NOP  <||@
  Comment 631 686 NOP  <||@
  Comment 632 688 NOP  <||@
  Comment 633 690 MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD  <||@
  Comment 640 692 AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 649 694 AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 658 696 AMD64PREFETCH ~address: [r8|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 667 698 MOV x: [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 674 700 MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed}  <||@
  Comment 674 {meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed}}  <||@
  Comment 681 702 MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 684 704 r10|QWORD = LEA address: [r8|QWORD - 16] size: QWORD  <||@
  Comment 688 706 CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B27 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 701 block B23 null  <||@
  Comment 701 708 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 701 710 NOP  <||@
  Comment 702 712 NOP  <||@
  Comment 703 714 NOP  <||@
  Comment 704 716 rcx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 711 718 JUMP ~outgoingValues: [] destination: B23 -> B24  <||@
  Comment 716 block B25 loop 2 depth 1 header:920|LoopBegin  <||@
  Comment 716 732 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 736 734 NOP  <||@
  Comment 737 736 NOP  <||@
  Comment 738 738 NOP  <||@
  Comment 739 740 NOP  <||@
  Comment 740 742 NOP  <||@
  Comment 741 744 NOP  <||@
  Comment 742 746 NOP  <||@
  Comment 743 748 MOV x: [rsi|QWORD + rcx|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 751 750 rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD  <||@
  Comment 755 752 JUMP ~outgoingValues: [] destination: B25 -> B24  <||@
  Comment 755 block B24 loop 2 depth 1 header:920|LoopBegin  <||@
  Comment 755 720 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 755 722 NOP  <||@
  Comment 756 724 NOP  <||@
  Comment 757 726 NOP  <||@
  Comment 758 728 NOP  <||@
  Comment 759 730 CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: QWORD  <||@
  Comment 764 block B26 null  <||@
  Comment 764 754 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 764 756 NOP  <||@
  Comment 765 758 NOP  <||@
  Comment 766 760 NOP  <||@
  Comment 767 762 JUMP ~outgoingValues: [] destination: B26 -> B28  <||@
  Comment 767 block B28 null  <||@
  Comment 767 816 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 767 818 NOP  <||@
  Comment 768 820 NOP  <||@
  Comment 769 822 NOP  <||@
  Comment 770 824 NOP  <||@
  Comment 771 826 rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD  <||@
  Comment 771 828 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 774 830 JUMP ~outgoingValues: [] destination: B28 -> B29  <||@
  Comment 774 block B29 null  <||@
  Comment 774 832 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 774 834 NOP  <||@
  Comment 775 836 NOP  <||@
  Comment 776 838 NOP  <||@
  Comment 777 840 NOP  <||@
  Comment 778 842 TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2147483647 size: DWORD  <||@
  Comment 790 block B31 null  <||@
  Comment 790 858 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 790 860 NOP  <||@
  Comment 791 862 NOP  <||@
  Comment 792 864 NOP  <||@
  Comment 793 866 NOP  <||@
  Comment 794 868 CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null  <||@
  Comment 803 block B33 null  <||@
  Comment 803 880 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 803 882 NOP  <||@
  Comment 804 884 NOP  <||@
  Comment 805 886 NOP  <||@
  Comment 806 888 NOP  <||@
  Comment 807 890 NOP  <||@
  Comment 808 892 NOP  <||@
  Comment 809 894 rcx|DWORD = DEC value: rbp|DWORD size: DWORD  <||@
  Comment 813 896 rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 816 898 CMPBRANCH (x: r13|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B73 size: QWORD  <||@
  Comment 825 block B34 null  <||@
  Comment 825 900 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 825 902 NOP  <||@
  Comment 826 904 NOP  <||@
  Comment 827 906 NOP  <||@
  Comment 828 908 JUMP ~outgoingValues: [] destination: B34 -> B35  <||@
  Comment 828 block B35 null  <||@
  Comment 828 910 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 828 912 NOP  <||@
  Comment 829 914 NOP  <||@
  Comment 830 916 NOP  <||@
  Comment 831 918 NOP  <||@
  Comment 832 920 TESTCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2147483647 size: DWORD  <||@
  Comment 844 block B37 null  <||@
  Comment 844 944 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 844 946 NOP  <||@
  Comment 845 948 NOP  <||@
  Comment 846 950 NOP  <||@
  Comment 847 952 NOP  <||@
  Comment 848 954 NOP  <||@
  Comment 849 956 NOP  <||@
  Comment 850 958 MOV x: [r9|QWORD[.] + 16] y: -1 size: DWORD  <||@
  Comment 858 960 CMP x: rbp|DWORD y: 3 size: DWORD  <||@
  Comment 861 962 rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<|  <||@
  Comment 869 964 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 874 966 JUMP ~outgoingValues: [] destination: B37 -> B38  <||@
  Comment 879 block B39 loop 3 depth 1 header:59|LoopBegin  <||@
  Comment 879 980 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 896 982 NOP  <||@
  Comment 897 984 NOP  <||@
  Comment 898 986 NOP  <||@
  Comment 899 988 NOP  <||@
  Comment 900 990 NOP  <||@
  Comment 901 992 MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 910 994 rsi|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 912 996 JUMP ~outgoingValues: [] destination: B39 -> B38  <||@
  Comment 912 block B38 loop 3 depth 1 header:59|LoopBegin  <||@
  Comment 912 968 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 912 970 NOP  <||@
  Comment 913 972 NOP  <||@
  Comment 914 974 NOP  <||@
  Comment 915 976 NOP  <||@
  Comment 916 978 CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD  <||@
  Comment 920 block B40 null  <||@
  Comment 920 998 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 920 1000 NOP  <||@
  Comment 921 1002 NOP  <||@
  Comment 922 1004 NOP  <||@
  Comment 923 1006 NOP  <||@
  Comment 924 1008 NOP  <||@
  Comment 925 1010 NOP  <||@
  Comment 926 1012 rcx|DWORD = LEA address: [rbp|DWORD - 16] size: DWORD  <||@
  Comment 929 1014 JUMP ~outgoingValues: [] destination: B40 -> B41  <||@
  Comment 934 block B42 loop 4 depth 1 header:378|LoopBegin  <||@
  Comment 934 1028 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 960 1030 NOP  <||@
  Comment 961 1032 NOP  <||@
  Comment 962 1034 NOP  <||@
  Comment 963 1036 NOP  <||@
  Comment 964 1038 NOP  <||@
  Comment 965 1040 NOP  <||@
  Comment 966 1042 NOP  <||@
  Comment 967 1044 NOP  <||@
  Comment 968 1046 NOP  <||@
  Comment 969 1048 NOP  <||@
  Comment 970 1050 NOP  <||@
  Comment 971 1052 NOP  <||@
  Comment 972 1054 NOP  <||@
  Comment 973 1056 NOP  <||@
  Comment 974 1058 NOP  <||@
  Comment 975 1060 NOP  <||@
  Comment 976 1062 NOP  <||@
  Comment 977 1064 NOP  <||@
  Comment 978 1066 NOP  <||@
  Comment 979 1068 NOP  <||@
  Comment 980 1070 NOP  <||@
  Comment 981 1072 NOP  <||@
  Comment 982 1074 NOP  <||@
  Comment 983 1076 NOP  <||@
  Comment 984 1078 NOP  <||@
  Comment 985 1080 NOP  <||@
  Comment 986 1082 NOP  <||@
  Comment 987 1084 NOP  <||@
  Comment 988 1086 NOP  <||@
  Comment 989 1088 NOP  <||@
  Comment 990 1090 NOP  <||@
  Comment 991 1092 NOP  <||@
  Comment 992 1094 NOP  <||@
  Comment 993 1096 NOP  <||@
  Comment 994 1098 NOP  <||@
  Comment 995 1100 NOP  <||@
  Comment 996 1102 NOP  <||@
  Comment 997 1104 NOP  <||@
  Comment 998 1106 NOP  <||@
  Comment 999 1108 NOP  <||@
  Comment 1000 1110 NOP  <||@
  Comment 1001 1112 NOP  <||@
  Comment 1002 1114 NOP  <||@
  Comment 1003 1116 NOP  <||@
  Comment 1004 1118 NOP  <||@
  Comment 1005 1120 NOP  <||@
  Comment 1006 1122 NOP  <||@
  Comment 1007 1124 NOP  <||@
  Comment 1008 1126 NOP  <||@
  Comment 1009 1128 NOP  <||@
  Comment 1010 1130 NOP  <||@
  Comment 1011 1132 NOP  <||@
  Comment 1012 1134 NOP  <||@
  Comment 1013 1136 NOP  <||@
  Comment 1014 1138 NOP  <||@
  Comment 1015 1140 NOP  <||@
  Comment 1016 1142 NOP  <||@
  Comment 1017 1144 NOP  <||@
  Comment 1018 1146 NOP  <||@
  Comment 1019 1148 NOP  <||@
  Comment 1020 1150 NOP  <||@
  Comment 1021 1152 NOP  <||@
  Comment 1022 1154 NOP  <||@
  Comment 1023 1156 NOP  <||@
  Comment 1024 1158 NOP  <||@
  Comment 1025 1160 MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1034 1162 r8|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 1040 1164 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1049 1166 r8|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD  <||@
  Comment 1053 1168 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1062 1170 r8|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD  <||@
  Comment 1066 1172 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1075 1174 r8|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD  <||@
  Comment 1079 1176 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1088 1178 r8|DWORD = LEA address: [rsi|DWORD + 5] size: DWORD  <||@
  Comment 1092 1180 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1101 1182 r8|DWORD = LEA address: [rsi|DWORD + 6] size: DWORD  <||@
  Comment 1105 1184 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1114 1186 r8|DWORD = LEA address: [rsi|DWORD + 7] size: DWORD  <||@
  Comment 1118 1188 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1127 1190 r8|DWORD = LEA address: [rsi|DWORD + 8] size: DWORD  <||@
  Comment 1131 1192 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1140 1194 r8|DWORD = LEA address: [rsi|DWORD + 9] size: DWORD  <||@
  Comment 1144 1196 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1153 1198 r8|DWORD = LEA address: [rsi|DWORD + 10] size: DWORD  <||@
  Comment 1157 1200 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1166 1202 r8|DWORD = LEA address: [rsi|DWORD + 11] size: DWORD  <||@
  Comment 1170 1204 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1179 1206 r8|DWORD = LEA address: [rsi|DWORD + 12] size: DWORD  <||@
  Comment 1183 1208 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1192 1210 r8|DWORD = LEA address: [rsi|DWORD + 13] size: DWORD  <||@
  Comment 1196 1212 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1205 1214 r8|DWORD = LEA address: [rsi|DWORD + 14] size: DWORD  <||@
  Comment 1209 1216 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1218 1218 r8|DWORD = LEA address: [rsi|DWORD + 15] size: DWORD  <||@
  Comment 1222 1220 MOV x: [r9|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1231 1222 rsi|DWORD = LEA address: [rsi|DWORD + 16] size: DWORD  <||@
  Comment 1234 1224 JUMP ~outgoingValues: [] destination: B42 -> B41  <||@
  Comment 1234 block B41 loop 4 depth 1 header:378|LoopBegin  <||@
  Comment 1234 1016 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1234 1018 NOP  <||@
  Comment 1235 1020 NOP  <||@
  Comment 1236 1022 NOP  <||@
  Comment 1237 1024 NOP  <||@
  Comment 1238 1026 CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD  <||@
  Comment 1246 block B43 null  <||@
  Comment 1246 1226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1246 1228 NOP  <||@
  Comment 1247 1230 NOP  <||@
  Comment 1248 1232 NOP  <||@
  Comment 1249 1234 JUMP ~outgoingValues: [] destination: B43 -> B44  <||@
  Comment 1254 block B45 loop 5 depth 1 header:398|LoopBegin  <||@
  Comment 1254 1248 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1280 1250 NOP  <||@
  Comment 1281 1252 NOP  <||@
  Comment 1282 1254 NOP  <||@
  Comment 1283 1256 NOP  <||@
  Comment 1284 1258 NOP  <||@
  Comment 1285 1260 MOV x: [r9|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1294 1262 rsi|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 1296 1264 JUMP ~outgoingValues: [] destination: B45 -> B44  <||@
  Comment 1296 block B44 loop 5 depth 1 header:398|LoopBegin  <||@
  Comment 1296 1236 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1296 1238 NOP  <||@
  Comment 1297 1240 NOP  <||@
  Comment 1298 1242 NOP  <||@
  Comment 1299 1244 NOP  <||@
  Comment 1300 1246 CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD  <||@
  Comment 1304 block B46 null  <||@
  Comment 1304 1266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1304 1268 NOP  <||@
  Comment 1305 1270 NOP  <||@
  Comment 1306 1272 NOP  <||@
  Comment 1307 1274 JUMP ~outgoingValues: [] destination: B46 -> B47  <||@
  Comment 1307 block B47 null  <||@
  Comment 1307 1276 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1307 1278 NOP  <||@
  Comment 1308 1280 NOP  <||@
  Comment 1309 1282 NOP  <||@
  Comment 1310 1284 NOP  <||@
  Comment 1311 1286 TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD  <||@
  Comment 1320 block B49 null  <||@
  Comment 1320 1298 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1320 1300 NOP  <||@
  Comment 1321 1302 NOP  <||@
  Comment 1322 1304 NOP  <||@
  Comment 1323 1306 NOP  <||@
  Comment 1324 1308 CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: DWORD inlinedY: null  <||@
  Comment 1334 block B51 null  <||@
  Comment 1334 1320 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1334 1322 NOP  <||@
  Comment 1335 1324 NOP  <||@
  Comment 1336 1326 NOP  <||@
  Comment 1337 1328 NOP  <||@
  Comment 1338 1330 NOP  <||@
  Comment 1339 1332 NOP  <||@
  Comment 1340 1334 rcx|DWORD = DEC value: r14|DWORD size: DWORD  <||@
  Comment 1345 1336 rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 1348 1338 CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B72 size: QWORD  <||@
  Comment 1357 block B52 null  <||@
  Comment 1357 1340 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1357 1342 NOP  <||@
  Comment 1358 1344 NOP  <||@
  Comment 1359 1346 NOP  <||@
  Comment 1360 1348 JUMP ~outgoingValues: [] destination: B52 -> B53  <||@
  Comment 1360 block B53 null  <||@
  Comment 1360 1350 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1360 1352 NOP  <||@
  Comment 1361 1354 NOP  <||@
  Comment 1362 1356 NOP  <||@
  Comment 1363 1358 NOP  <||@
  Comment 1364 1360 NOP  <||@
  Comment 1365 1362 NOP  <||@
  Comment 1366 1364 MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD  <||@
  Comment 1373 1366 CMP x: r14|DWORD y: 3 size: DWORD  <||@
  Comment 1377 1368 rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r14|DWORD) condition: |<|  <||@
  Comment 1386 1370 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1391 1372 JUMP ~outgoingValues: [] destination: B53 -> B54  <||@
  Comment 1396 block B55 loop 6 depth 1 header:74|LoopBegin  <||@
  Comment 1396 1386 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1408 1388 NOP  <||@
  Comment 1409 1390 NOP  <||@
  Comment 1410 1392 NOP  <||@
  Comment 1411 1394 NOP  <||@
  Comment 1412 1396 NOP  <||@
  Comment 1413 1398 MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1421 1400 rsi|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 1423 1402 JUMP ~outgoingValues: [] destination: B55 -> B54  <||@
  Comment 1423 block B54 loop 6 depth 1 header:74|LoopBegin  <||@
  Comment 1423 1374 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1423 1376 NOP  <||@
  Comment 1424 1378 NOP  <||@
  Comment 1425 1380 NOP  <||@
  Comment 1426 1382 NOP  <||@
  Comment 1427 1384 CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 size: DWORD  <||@
  Comment 1431 block B56 null  <||@
  Comment 1431 1404 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1431 1406 NOP  <||@
  Comment 1432 1408 NOP  <||@
  Comment 1433 1410 NOP  <||@
  Comment 1434 1412 NOP  <||@
  Comment 1435 1414 NOP  <||@
  Comment 1436 1416 NOP  <||@
  Comment 1437 1418 rcx|DWORD = LEA address: [r14|DWORD - 4] size: DWORD  <||@
  Comment 1441 1420 JUMP ~outgoingValues: [] destination: B56 -> B57  <||@
  Comment 1446 block B58 loop 7 depth 1 header:422|LoopBegin  <||@
  Comment 1446 1434 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1472 1436 NOP  <||@
  Comment 1473 1438 NOP  <||@
  Comment 1474 1440 NOP  <||@
  Comment 1475 1442 NOP  <||@
  Comment 1476 1444 NOP  <||@
  Comment 1477 1446 NOP  <||@
  Comment 1478 1448 NOP  <||@
  Comment 1479 1450 NOP  <||@
  Comment 1480 1452 NOP  <||@
  Comment 1481 1454 NOP  <||@
  Comment 1482 1456 NOP  <||@
  Comment 1483 1458 NOP  <||@
  Comment 1484 1460 NOP  <||@
  Comment 1485 1462 NOP  <||@
  Comment 1486 1464 NOP  <||@
  Comment 1487 1466 NOP  <||@
  Comment 1488 1468 NOP  <||@
  Comment 1489 1470 MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1497 1472 rdi|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 1501 1474 MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1509 1476 rdi|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD  <||@
  Comment 1512 1478 MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1520 1480 rdi|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD  <||@
  Comment 1523 1482 MOV x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1531 1484 rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD  <||@
  Comment 1534 1486 JUMP ~outgoingValues: [] destination: B58 -> B57  <||@
  Comment 1534 block B57 loop 7 depth 1 header:422|LoopBegin  <||@
  Comment 1534 1422 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1534 1424 NOP  <||@
  Comment 1535 1426 NOP  <||@
  Comment 1536 1428 NOP  <||@
  Comment 1537 1430 NOP  <||@
  Comment 1538 1432 CMPBRANCH (x: rcx|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD  <||@
  Comment 1542 block B59 null  <||@
  Comment 1542 1488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1542 1490 NOP  <||@
  Comment 1543 1492 NOP  <||@
  Comment 1544 1494 NOP  <||@
  Comment 1545 1496 JUMP ~outgoingValues: [] destination: B59 -> B60  <||@
  Comment 1550 block B61 loop 8 depth 1 header:442|LoopBegin  <||@
  Comment 1550 1510 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1568 1512 NOP  <||@
  Comment 1569 1514 NOP  <||@
  Comment 1570 1516 NOP  <||@
  Comment 1571 1518 NOP  <||@
  Comment 1572 1520 NOP  <||@
  Comment 1573 1522 MOV x: [rdx|QWORD[.] + rsi|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1581 1524 rsi|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 1583 1526 JUMP ~outgoingValues: [] destination: B61 -> B60  <||@
  Comment 1583 block B60 loop 8 depth 1 header:442|LoopBegin  <||@
  Comment 1583 1498 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1583 1500 NOP  <||@
  Comment 1584 1502 NOP  <||@
  Comment 1585 1504 NOP  <||@
  Comment 1586 1506 NOP  <||@
  Comment 1587 1508 CMPBRANCH (x: r14|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 size: DWORD  <||@
  Comment 1592 block B62 null  <||@
  Comment 1592 1528 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1592 1530 NOP  <||@
  Comment 1593 1532 NOP  <||@
  Comment 1594 1534 NOP  <||@
  Comment 1595 1536 JUMP ~outgoingValues: [] destination: B62 -> B63  <||@
  Comment 1595 block B63 null  <||@
  Comment 1595 1538 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1595 1540 NOP  <||@
  Comment 1596 1542 NOP  <||@
  Comment 1597 1544 NOP  <||@
  Comment 1598 1546 NOP  <||@
  Comment 1599 1548 CMPCONSTBRANCH x: [r11|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B70 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90, 38]  <||@
  Comment 1599 [rdx:0, r9:0, r10:0, r11:0, stack:8]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |1 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |   |   |    <||@
  Comment 1599 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1599 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1613 block B64 null  <||@
  Comment 1613 1550 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1613 1552 NOP  <||@
  Comment 1614 1554 NOP  <||@
  Comment 1615 1556 NOP  <||@
  Comment 1616 1558 NOP  <||@
  Comment 1617 1560 NOP  <||@
  Comment 1618 1562 NOP  <||@
  Comment 1619 1564 rcx|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD  <||@
  Comment 1623 1566 rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90, 38]  <||@
  Comment 1623 [rdx:0, r9:0, r10:0, r11:0, stack:8]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |1 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |   |   |    <||@
  Comment 1623 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1630 1568 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B69 size: DWORD  <||@
  Comment 1638 block B65 null  <||@
  Comment 1638 1570 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1638 1572 NOP  <||@
  Comment 1639 1574 NOP  <||@
  Comment 1640 1576 NOP  <||@
  Comment 1641 1578 NOP  <||@
  Comment 1642 1580 NOP  <||@
  Comment 1643 1582 NOP  <||@
  Comment 1644 1584 NOP  <||@
  Comment 1645 1586 NOP  <||@
  Comment 1646 1588 rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1653 1590 rax|QWORD = LEA address: [rcx|QWORD + 80] size: QWORD  <||@
  Comment 1657 1592 CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: QWORD  <||@
  Comment 1670 block B67 null  <||@
  Comment 1670 1624 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1670 1626 NOP  <||@
  Comment 1671 1628 NOP  <||@
  Comment 1672 1630 NOP  <||@
  Comment 1673 1632 NOP  <||@
  Comment 1674 1634 NOP  <||@
  Comment 1675 1636 NOP  <||@
  Comment 1676 1638 NOP  <||@
  Comment 1677 1640 NOP  <||@
  Comment 1678 1642 NOP  <||@
  Comment 1679 1644 NOP  <||@
  Comment 1680 1646 NOP  <||@
  Comment 1681 1648 NOP  <||@
  Comment 1682 1650 NOP  <||@
  Comment 1683 1652 NOP  <||@
  Comment 1684 1654 NOP  <||@
  Comment 1685 1656 NOP  <||@
  Comment 1686 1658 NOP  <||@
  Comment 1687 1660 MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD  <||@
  Comment 1694 1662 AMD64PREFETCH ~address: [rcx|QWORD + 336] instr: 0  <||@
  Comment 1701 1664 MOV x: [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 1708 1666 MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed}  <||@
  Comment 1708 {meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed}}  <||@
  Comment 1715 1668 MOV x: [rcx|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1722 1670 MOV x: [rcx|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 1730 1672 MOV x: [rcx|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 1738 1674 MOV x: [rcx|QWORD + 32] y: 0 size: QWORD  <||@
  Comment 1746 1676 MOV x: [rcx|QWORD + 40] y: 0 size: QWORD  <||@
  Comment 1754 1678 MOV x: [rcx|QWORD + 48] y: 0 size: QWORD  <||@
  Comment 1762 1680 MOV x: [rcx|QWORD + 56] y: 0 size: QWORD  <||@
  Comment 1770 1682 MOV x: [rcx|QWORD + 64] y: 0 size: QWORD  <||@
  Comment 1778 1684 MOV x: [rcx|QWORD + 72] y: 0 size: QWORD  <||@
  Comment 1786 1686 rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 1786 1688 rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1789 1690 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1794 1692 JUMP ~outgoingValues: [] destination: B67 -> B68  <||@
  Comment 1794 block B68 null  <||@
  Comment 1794 1694 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1794 1696 NOP  <||@
  Comment 1795 1698 NOP  <||@
  Comment 1796 1700 NOP  <||@
  Comment 1797 1702 NOP  <||@
  Comment 1798 1704 NOP  <||@
  Comment 1799 1706 NOP  <||@
  Comment 1800 1708 NOP  <||@
  Comment 1801 1710 NOP  <||@
  Comment 1802 1712 NOP  <||@
  Comment 1803 1714 NOP  <||@
  Comment 1804 1716 NOP  <||@
  Comment 1805 1718 NOP  <||@
  Comment 1806 1720 NOP  <||@
  Comment 1807 1722 NOP  <||@
  Comment 1808 1724 NOP  <||@
  Comment 1809 1726 NOP  <||@
  Comment 1810 1728 NOP  <||@
  Comment 1811 1730 NOP  <||@
  Comment 1812 1732 NOP  <||@
  Comment 1813 1734 NOP  <||@
  Comment 1814 1736 NOP  <||@
  Comment 1815 1738 NOP  <||@
  Comment 1816 1740 NOP  <||@
  Comment 1817 1742 NOP  <||@
  Comment 1818 1744 NOP  <||@
  Comment 1819 1746 NOP  <||@
  Comment 1820 1748 r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3  <||@
  Comment 1824 1750 MOV (x: [rax|QWORD[.] + 68], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 1828 1752 rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3  <||@
  Comment 1832 1754 MOV (x: [rax|QWORD[.] + 64], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 1835 1756 rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3  <||@
  Comment 1842 1758 MOV (x: [rax|QWORD[.] + 60], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 1845 1760 r9|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3  <||@
  Comment 1849 1762 MOV (x: [rax|QWORD[.] + 56], y: r9|DWORD[_]) size: DWORD  <||@
  Comment 1853 1764 r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1e262dd4 encoding: base: 0 shift: 3  <||@
  Comment 1860 1766 MOV (x: [rax|QWORD[.] + 52], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 1864 1768 MOVB x: [rax|QWORD[.] + 51] y: 1 size: BYTE  <||@
  Comment 1868 1770 MOV x: [rax|QWORD[.] + 44] y: 1 size: DWORD  <||@
  Comment 1875 1772 MOV x: [rax|QWORD[.] + 36] y: -1 size: DWORD  <||@
  Comment 1882 1774 MOV x: [rax|QWORD[.] + 28] y: -1 size: DWORD  <||@
  Comment 1889 1776 rcx|DWORD = MOVSXB input: [r11|QWORD[.] + 16] size: DWORD  <||@
  Comment 1894 1778 rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1896 1780 MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 1899 1782 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1908 POLL_RETURN_FAR  <||@
  Comment 1925 block B32 null  <||@
  Comment 1925 870 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1925 872 NOP  <||@
  Comment 1926 874 NOP  <||@
  Comment 1927 876 NOP  <||@
  Comment 1928 878 JUMP ~outgoingValues: [] destination: B32 -> B35  <||@
  Comment 1933 block B50 null  <||@
  Comment 1933 1310 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1933 1312 NOP  <||@
  Comment 1934 1314 NOP  <||@
  Comment 1935 1316 NOP  <||@
  Comment 1936 1318 JUMP ~outgoingValues: [] destination: B50 -> B53  <||@
  Comment 1941 block B48 null  <||@
  Comment 1941 1288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1941 1290 NOP  <||@
  Comment 1942 1292 NOP  <||@
  Comment 1943 1294 NOP  <||@
  Comment 1944 1296 JUMP ~outgoingValues: [] destination: B48 -> B63  <||@
  Comment 1949 block B30 null  <||@
  Comment 1949 844 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1949 846 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1954 848 NOP  <||@
  Comment 1955 850 NOP  <||@
  Comment 1956 852 NOP  <||@
  Comment 1957 856 JUMP ~outgoingValues: [] destination: B30 -> B47  <||@
  Comment 1962 block B66 null  <||@
  Comment 1962 1594 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1962 1596 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1967 1598 NOP  <||@
  Comment 1968 1600 NOP  <||@
  Comment 1969 1602 NOP  <||@
  Comment 1970 1604 NOP  <||@
  Comment 1971 1606 NOP  <||@
  Comment 1972 1608 NOP  <||@
  Comment 1973 1610 NOP  <||@
  Comment 1974 1612 NOP  <||@
  Comment 1975 1614 NOP  <||@
  Comment 1976 1616 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>}  <||@
  Comment 1976 {meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>}}  <||@
  Comment 1986 1618 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:63, 90, 38]  <||@
  Comment 1986 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1991 [rdx:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |1 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |   |   |    <||@
  Comment 1999 1620 NULLCHECK address: [rax|QWORD[.]] state [bci:63, 90, 38]  <||@
  Comment 1999 [rax:0, rdx:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |1 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |   |   |    <||@
  Comment 1999 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2001 1622 JUMP ~outgoingValues: [] destination: B66 -> B68  <||@
  Comment 2006 block B12 null  <||@
  Comment 2006 364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2006 366 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 2011 368 r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2014 370 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2014 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2024 372 NOP  <||@
  Comment 2025 374 NOP  <||@
  Comment 2026 376 NOP  <||@
  Comment 2027 378 NOP  <||@
  Comment 2028 380 NOP  <||@
  Comment 2029 382 NOP  <||@
  Comment 2030 384 NOP  <||@
  Comment 2031 386 NOP  <||@
  Comment 2032 388 NOP  <||@
  Comment 2033 390 rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 2036 392 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4]  <||@
  Comment 2036 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2041 [r8:0, r9:0, r11:0]at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4, duringCall: false, rethrow: false]
              |0               |1             |2  |3 
     locals:  |r8|QWORD[.]     |r11|QWORD[.]  |-  |- 
     stack:   |stack:28|DWORD  |              |   |    <||@
  Comment 2049 394 NULLCHECK address: [rax|QWORD[.]] state [bci:4]  <||@
  Comment 2049 [rax:0, r8:0, r9:0, r11:0]at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4, duringCall: false, rethrow: false]
              |0               |1             |2  |3 
     locals:  |r8|QWORD[.]     |r11|QWORD[.]  |-  |- 
     stack:   |stack:28|DWORD  |              |   |    <||@
  Comment 2049 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2051 396 rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2054 398 r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2057 400 JUMP ~outgoingValues: [] destination: B12 -> B20  <||@
  Comment 2062 block B3 null  <||@
  Comment 2062 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2062 124 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 2067 126 r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2070 128 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2070 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2080 130 NOP  <||@
  Comment 2081 132 NOP  <||@
  Comment 2082 134 NOP  <||@
  Comment 2083 136 NOP  <||@
  Comment 2084 138 NOP  <||@
  Comment 2085 140 NOP  <||@
  Comment 2086 142 NOP  <||@
  Comment 2087 144 NOP  <||@
  Comment 2088 146 NOP  <||@
  Comment 2089 148 rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2091 150 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4]  <||@
  Comment 2091 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2096 [r8:0, r11:0]at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4, duringCall: false, rethrow: false]
              |0               |1             |2  |3 
     locals:  |r8|QWORD[.]     |r11|QWORD[.]  |-  |- 
     stack:   |stack:28|DWORD  |              |   |    <||@
  Comment 2104 152 NULLCHECK address: [rax|QWORD[.]] state [bci:4]  <||@
  Comment 2104 [rax:0, r8:0, r11:0]at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4, duringCall: false, rethrow: false]
              |0               |1             |2  |3 
     locals:  |r8|QWORD[.]     |r11|QWORD[.]  |-  |- 
     stack:   |stack:28|DWORD  |              |   |    <||@
  Comment 2104 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2106 154 r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2109 156 r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2112 158 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2117 160 JUMP ~outgoingValues: [] destination: B3 -> B11  <||@
  Comment 2122 block B21 null  <||@
  Comment 2122 612 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2122 614 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2127 616 NOP  <||@
  Comment 2128 618 NOP  <||@
  Comment 2129 620 NOP  <||@
  Comment 2130 622 NOP  <||@
  Comment 2131 624 NOP  <||@
  Comment 2132 626 NOP  <||@
  Comment 2133 628 NOP  <||@
  Comment 2134 630 NOP  <||@
  Comment 2135 632 NOP  <||@
  Comment 2136 634 NOP  <||@
  Comment 2137 636 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>}  <||@
  Comment 2137 {meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>}}  <||@
  Comment 2147 638 rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2150 640 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 2152 642 r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 2155 644 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:4]  <||@
  Comment 2155 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2160 [rcx:0, r8:0, r9:0, r11:0]at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4, duringCall: false, rethrow: false]
              |0               |1             |2  |3 
     locals:  |r8|QWORD[.]     |r11|QWORD[.]  |-  |- 
     stack:   |stack:28|DWORD  |              |   |    <||@
  Comment 2168 646 NULLCHECK address: [rax|QWORD[.]] state [bci:4]  <||@
  Comment 2168 [rax:0, rcx:0, r8:0, r9:0, r11:0]at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4, duringCall: false, rethrow: false]
              |0               |1             |2  |3 
     locals:  |r8|QWORD[.]     |r11|QWORD[.]  |-  |- 
     stack:   |stack:28|DWORD  |              |   |    <||@
  Comment 2168 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2170 648 rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2173 650 stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2178 652 stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 2183 654 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2186 656 rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2190 658 JUMP ~outgoingValues: [] destination: B21 -> B29  <||@
  Comment 2195 block B27 null  <||@
  Comment 2195 764 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2195 766 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2200 768 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2205 770 stack:40|QWORD = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 2210 772 rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2213 774 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 2215 776 rax|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD  <||@
  Comment 2220 778 NOP  <||@
  Comment 2221 780 NOP  <||@
  Comment 2222 782 NOP  <||@
  Comment 2223 784 NOP  <||@
  Comment 2224 786 NOP  <||@
  Comment 2225 788 NOP  <||@
  Comment 2226 790 NOP  <||@
  Comment 2227 792 NOP  <||@
  Comment 2228 794 NOP  <||@
  Comment 2229 796 rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 2232 798 r11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2235 800 r10|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 2238 802 ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 2248 804 rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 2250 806 rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2253 808 rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 2256 810 r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2261 814 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 2266 block B9 null  <||@
  Comment 2266 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2266 268 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 2271 270 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2276 272 r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2279 274 NOP  <||@
  Comment 2280 276 NOP  <||@
  Comment 2281 278 NOP  <||@
  Comment 2282 280 NOP  <||@
  Comment 2283 282 NOP  <||@
  Comment 2284 284 NOP  <||@
  Comment 2285 286 NOP  <||@
  Comment 2286 288 NOP  <||@
  Comment 2287 290 NOP  <||@
  Comment 2288 292 ZERO_MEMORY (pointer: [r9|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 2298 298 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2303 300 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 2308 block B18 null  <||@
  Comment 2308 506 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2308 508 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 2313 510 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2318 512 r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2321 514 r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 2324 516 NOP  <||@
  Comment 2325 518 NOP  <||@
  Comment 2326 520 NOP  <||@
  Comment 2327 522 NOP  <||@
  Comment 2328 524 NOP  <||@
  Comment 2329 526 NOP  <||@
  Comment 2330 528 NOP  <||@
  Comment 2331 530 NOP  <||@
  Comment 2332 532 NOP  <||@
  Comment 2333 534 ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 2343 536 rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 2346 540 r10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2349 542 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2354 544 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 2359 block B72 null  <||@
  Comment 2359 1850 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2359 1852 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2364 1854 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2369 1856 r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2372 1858 NOP  <||@
  Comment 2373 1860 NOP  <||@
  Comment 2374 1862 NOP  <||@
  Comment 2375 1864 NOP  <||@
  Comment 2376 1866 NOP  <||@
  Comment 2377 1868 NOP  <||@
  Comment 2378 1870 NOP  <||@
  Comment 2379 1872 MOV x: [r15|QWORD + 1156] y: -54555 size: DWORD  <||@
  Comment 2390 1874 MOV x: [r15|QWORD + 1168] y: 2712 size: QWORD  <||@
  Comment 2401 1876 DEOPT info [bci:39, 90, 38]  <||@
  Comment 2401 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2406 [r8:0, r9:0, r10:0, r11:0, stack:16]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |1 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=r11|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |   |   |    <||@
  Comment 2414 block B36 null  <||@
  Comment 2414 922 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2414 924 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2419 926 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2424 928 NOP  <||@
  Comment 2425 930 NOP  <||@
  Comment 2426 932 NOP  <||@
  Comment 2427 934 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2434 936 r10|DWORD = MOVE input: int[-61467|0xffffffffffff0fe5]  <||@
  Comment 2440 942 JUMP ~outgoingValues: [] destination: B36 -> B74  <||@
  Comment 2440 block B74 null  <||@
  Comment 2440 1900 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2440 50 rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2444 52 r9|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2449 1902 NOP  <||@
  Comment 2450 1904 NOP  <||@
  Comment 2451 1906 NOP  <||@
  Comment 2452 1908 NOP  <||@
  Comment 2453 1910 NOP  <||@
  Comment 2454 1912 NOP  <||@
  Comment 2455 1914 NOP  <||@
  Comment 2456 1916 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2463 1918 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2470 1920 DEOPT info [bci:4]  <||@
  Comment 2470 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2475 [r8:0, r9:0]at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4, duringCall: false, rethrow: false]
              |0            |1            |2  |3 
     locals:  |r8|QWORD[.]  |r9|QWORD[.]  |-  |- 
     stack:   |rcx|DWORD    |             |   |    <||@
  Comment 2483 block B69 null  <||@
  Comment 2483 1784 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2483 1786 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2488 1788 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2493 1790 r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2496 1792 NOP  <||@
  Comment 2497 1794 NOP  <||@
  Comment 2498 1796 NOP  <||@
  Comment 2499 1798 rcx|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 2506 1802 r11|DWORD = MOVE input: int[-85779|0xfffffffffffeb0ed]  <||@
  Comment 2512 1804 JUMP ~outgoingValues: [] destination: B69 -> B71  <||@
  Comment 2512 block B71 null  <||@
  Comment 2512 1828 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2512 1830 NOP  <||@
  Comment 2513 1832 NOP  <||@
  Comment 2514 1834 NOP  <||@
  Comment 2515 1836 NOP  <||@
  Comment 2516 1838 NOP  <||@
  Comment 2517 1840 NOP  <||@
  Comment 2518 1842 NOP  <||@
  Comment 2519 1844 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 2526 1846 MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD  <||@
  Comment 2533 1848 DEOPT info [bci:63, 90, 38]  <||@
  Comment 2533 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2538 [rdx:0, r8:0, r9:0, r10:0, stack:16]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |1 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=stack:48|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |   |   |    <||@
  Comment 2546 block B1 null  <||@
  Comment 2546 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2546 34 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 2551 36 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2556 38 r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2559 40 NOP  <||@
  Comment 2560 42 NOP  <||@
  Comment 2561 44 NOP  <||@
  Comment 2562 46 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 2569 48 r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed]  <||@
  Comment 2575 54 JUMP ~outgoingValues: [] destination: B1 -> B74  <||@
  Comment 2580 block B73 null  <||@
  Comment 2580 1878 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2580 1880 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2585 1882 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2590 1884 NOP  <||@
  Comment 2591 1886 NOP  <||@
  Comment 2592 1888 NOP  <||@
  Comment 2593 1890 r11|QWORD = MOVE input: long[1944|0x798]  <||@
  Comment 2600 1892 r10|DWORD = MOVE input: int[-50459|0xffffffffffff3ae5]  <||@
  Comment 2606 1898 JUMP ~outgoingValues: [] destination: B73 -> B74  <||@
  Comment 2611 block B70 null  <||@
  Comment 2611 1806 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2611 1808 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2616 1810 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2621 1812 r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2624 1814 NOP  <||@
  Comment 2625 1816 NOP  <||@
  Comment 2626 1818 NOP  <||@
  Comment 2627 1820 rcx|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 2634 1824 r11|DWORD = MOVE input: int[-57395|0xffffffffffff1fcd]  <||@
  Comment 2640 1826 JUMP ~outgoingValues: [] destination: B70 -> B71  <||@
  Comment 2650 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2675 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2703 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2708 [rdx:0, r9:0, r10:0, r11:0, stack:8]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |1 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |   |   |    <||@
  Comment 2738 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2743 [rdx:0, r9:0, r10:0, r11:0, stack:8]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |1 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:56|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |   |   |    <||@
  Comment 2773 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2778 [rax:0, rdx:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |1 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1180) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],modCount=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r8|QWORD[.],groups=r9|QWORD[.],text=r11|QWORD[.],locals=rdx|QWORD[.],localsPos=r10|QWORD[.],namedGroups=Object[null]}  |   |   |    <||@
  Comment 2808 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2813 [rax:0, r8:0, r9:0, r11:0]at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4, duringCall: false, rethrow: false]
              |0               |1             |2  |3 
     locals:  |r8|QWORD[.]     |r11|QWORD[.]  |-  |- 
     stack:   |stack:28|DWORD  |              |   |    <||@
  Comment 2843 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2848 [rax:0, r8:0, r11:0]at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4, duringCall: false, rethrow: false]
              |0               |1             |2  |3 
     locals:  |r8|QWORD[.]     |r11|QWORD[.]  |-  |- 
     stack:   |stack:28|DWORD  |              |   |    <||@
  Comment 2878 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2883 [rax:0, rcx:0, r8:0, r9:0, r11:0]at java.util.regex.Pattern.matcher(Pattern.java:1174) [bci: 4, duringCall: false, rethrow: false]
              |0               |1             |2  |3 
     locals:  |r8|QWORD[.]     |r11|QWORD[.]  |-  |- 
     stack:   |stack:28|DWORD  |              |   |    <||@
  Comment 2891 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2891 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2897 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2897 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
