begin_compilation
  name " HotSpotCompilation-8554[org.graalvm.collections.EconomicMapImpl$3.next()]"
  method "HotSpotCompilation-8554[org.graalvm.collections.EconomicMapImpl$3.next()]"
  date 1724269718047
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a149 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a149  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# org.graalvm.collections.EconomicMapImpl$3
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 ?6 v156 ?12 v158 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a149 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# org.graalvm.collections.EconomicMapImpl
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl$3.this$0
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 1]
stamp: n# org.graalvm.collections.EconomicMapImpl
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v156 
lastLocationAccess: - 
=== Succesors ===
next: a150 
=== Usages ===
a58 v157 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v156 lastLocationAccess: - #next: a150  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<EconomicMapImpl$3.next()>
localsSize: 2
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 862
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v162 a150 i151 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a149 
=== Succesors ===
=== Usages ===
a150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a150 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: int[-15115|0xffffffffffffc4f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 1]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stamp: n java.lang.Object[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v157 
lastLocationAccess: - 
=== Succesors ===
next: i151 
=== Usages ===
a63 v159 
=== Predecessor ===
a149 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v157 lastLocationAccess: - #next: i151  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a150 
=== Succesors ===
=== Usages ===
i151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i151 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-17675|0xffffffffffffbaf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v159 
lastLocationAccess: - 
=== Succesors ===
next: i152 
=== Usages ===
v73 v86 
=== Predecessor ===
a150 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v159 lastLocationAccess: - #next: i152  <|@  <|@
f <@~|@floating>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i152 v67 v84 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i152 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl$SparseMapIterator.current
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 6]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v158 
lastLocationAccess: - 
=== Succesors ===
next: v122 
=== Usages ===
i32 i35 
=== Predecessor ===
i151 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v158 lastLocationAccess: - #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 10]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 i18 i32 i35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 6]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i152 
y: i9 
=== Succesors ===
=== Usages ===
j97 v73 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i152 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i35 
y: i151 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i35 y: i151  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v121 
=== Usages ===
=== Predecessor ===
i152 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v119 #falseSuccessor: v121  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 11]
stamp: i32
=== Inputs ===
x: i152 
y: i9 
=== Succesors ===
=== Usages ===
v67 i49 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i152 y: i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: EconomicMapImpl$SparseMapIterator.current
location: EconomicMapImpl$SparseMapIterator.current
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v158 
lastLocationAccess: - 
value: i32 
stateAfter: - 
=== Succesors ===
next: a153 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v158 lastLocationAccess: - value: i32 stateAfter: - #next: a153  <|@  <|@
f <@~|@floating>@ <|@
tid a63 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 1]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a150 
=== Succesors ===
=== Usages ===
v161 v160 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a150  <|@  <|@
f <@~|@floating>@ <|@
tid j97 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i35 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i35  <|@  <|@
f <@~|@floating>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a63 
index: j97 
=== Succesors ===
=== Usages ===
a153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a63 index: j97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a153 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v160 
lastLocationAccess: - 
=== Succesors ===
next: v40 
=== Usages ===
a83 v98 
=== Predecessor ===
v67 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v160 lastLocationAccess: - #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 20]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a153 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a153  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 20]
profileData: PROFILED designatedSuccessorProbability: 0.001947617801808077
stamp: void
=== Inputs ===
condition: v98 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v38 
=== Usages ===
=== Predecessor ===
a153 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v98 #trueSuccessor: v39 #falseSuccessor: v38  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v4  <|@  <|@
f <@~|@floating>@ <|@
tid a58 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 1]
op: Uncompress
stamp: a# org.graalvm.collections.EconomicMapImpl
=== Inputs ===
value: a149 
=== Succesors ===
=== Usages ===
?12 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a149  <|@  <|@
f <@*|@fixed>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 
=== Predecessor ===
v39 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v5 
values: i32 i10 
=== Succesors ===
=== Usages ===
i10 ?12 i18 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v5 values: i32 i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v4 
=== Succesors ===
next: v126 
=== Usages ===
v23 v28 i49 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v4 #next: v126  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 6]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i49 
y: i9 
=== Succesors ===
=== Usages ===
j99 v86 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i49 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i151 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i18 y: i151  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v86 
=== Succesors ===
trueSuccessor: v123 
falseSuccessor: v125 
=== Usages ===
=== Predecessor ===
v5 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v86 #trueSuccessor: v123 #falseSuccessor: v125  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 11]
stamp: i32
=== Inputs ===
x: i49 
y: i9 
=== Succesors ===
=== Usages ===
v84 i49 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i49 y: i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: EconomicMapImpl$SparseMapIterator.current
location: EconomicMapImpl$SparseMapIterator.current
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v158 
lastLocationAccess: - 
value: i10 
stateAfter: - 
=== Succesors ===
next: a154 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v158 lastLocationAccess: - value: i10 stateAfter: - #next: a154  <|@  <|@
f <@~|@floating>@ <|@
tid j99 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i18 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i18  <|@  <|@
f <@~|@floating>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a63 
index: j99 
=== Succesors ===
=== Usages ===
a154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a63 index: j99  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a154 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v161 
lastLocationAccess: - 
=== Succesors ===
next: v27 
=== Usages ===
a94 v100 
=== Predecessor ===
v84 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v161 lastLocationAccess: - #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 20]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a154 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a154  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v100 
=== Succesors ===
trueSuccessor: v26 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
a154 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v100 #trueSuccessor: v26 #falseSuccessor: v23  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl$3.next()>
localsSize: 2
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 12]
sourceFile: EconomicMapImpl.java
sourceLine: 862
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a58 i49 a1 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a58 i49 a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
stamp: void
=== Inputs ===
stateBefore: ?12 
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?12 #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
stamp: void
=== Inputs ===
loopBegin: v5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v5  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:865) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v5 
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v5 #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid a94 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a154 
=== Succesors ===
=== Usages ===
a48 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a154  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:865) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
v23 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<EconomicMapImpl$3.next()>
localsSize: 2
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 862
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 87
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:865) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid a83 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a153 
=== Succesors ===
=== Usages ===
a48 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a153  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:865) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
v38 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:865) [bci: 26]
stamp: a java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v43 
values: a94 a83 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v43 values: a94 a83  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:865) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v44 v45 
=== Succesors ===
next: v29 
=== Usages ===
a48 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v44 v45 #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:865) [bci: 27]
stamp: void
=== Inputs ===
memoryMap: - 
result: a48 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a48  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 74
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v7|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: v9|QWORD[.] v10|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: v14|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a149 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a149  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# org.graalvm.collections.EconomicMapImpl$3
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 ?6 v156 ?12 v158 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a149 <|@
result v1|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# org.graalvm.collections.EconomicMapImpl
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl$3.this$0
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 1]
stamp: n# org.graalvm.collections.EconomicMapImpl
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v156 
lastLocationAccess: - 
=== Succesors ===
next: a150 
=== Usages ===
a58 v157 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v156 lastLocationAccess: - #next: a150  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<EconomicMapImpl$3.next()>
localsSize: 2
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 862
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v162 a150 i151 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
result [v1|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a149 
=== Succesors ===
=== Usages ===
a150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a150 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: int[-15115|0xffffffffffffc4f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 1]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stamp: n java.lang.Object[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v157 
lastLocationAccess: - 
=== Succesors ===
next: i151 
=== Usages ===
a63 v159 
=== Predecessor ===
a149 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v157 lastLocationAccess: - #next: i151  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a150 
=== Succesors ===
=== Usages ===
i151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i151 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-17675|0xffffffffffffbaf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v159 
lastLocationAccess: - 
=== Succesors ===
next: i152 
=== Usages ===
v73 v86 
=== Predecessor ===
a150 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v159 lastLocationAccess: - #next: i152  <|@  <|@
f <@~|@floating>@ <|@
tid v158 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i152 v67 v84 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i152 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl$SparseMapIterator.current
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 6]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v158 
lastLocationAccess: - 
=== Succesors ===
next: v122 
=== Usages ===
i32 i35 
=== Predecessor ===
i151 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v158 lastLocationAccess: - #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 10]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 i18 i32 i35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 6]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i152 
y: i9 
=== Succesors ===
=== Usages ===
j97 v73 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i152 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i35 
y: i151 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i35 y: i151  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v121 
=== Usages ===
=== Predecessor ===
i152 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v119 #falseSuccessor: v121  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 11]
stamp: i32
=== Inputs ===
x: i152 
y: i9 
=== Succesors ===
=== Usages ===
v67 i49 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i152 y: i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: EconomicMapImpl$SparseMapIterator.current
location: EconomicMapImpl$SparseMapIterator.current
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v158 
lastLocationAccess: - 
value: i32 
stateAfter: - 
=== Succesors ===
next: a153 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v158 lastLocationAccess: - value: i32 stateAfter: - #next: a153  <|@  <|@
f <@~|@floating>@ <|@
tid a63 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 1]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a150 
=== Succesors ===
=== Usages ===
v161 v160 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a150  <|@  <|@
f <@~|@floating>@ <|@
tid j97 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i35 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i35  <|@  <|@
f <@~|@floating>@ <|@
tid v160 <|@
result [v7|QWORD[.] + v5|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a63 
index: j97 
=== Succesors ===
=== Usages ===
a153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a63 index: j97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a153 <|@
result v8|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v160 
lastLocationAccess: - 
=== Succesors ===
next: v40 
=== Usages ===
a83 v98 
=== Predecessor ===
v67 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v160 lastLocationAccess: - #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 20]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a153 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a153  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 20]
profileData: PROFILED designatedSuccessorProbability: 0.001947617801808077
stamp: void
=== Inputs ===
condition: v98 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v38 
=== Usages ===
=== Predecessor ===
a153 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v98 #trueSuccessor: v39 #falseSuccessor: v38  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v4  <|@  <|@
f <@~|@floating>@ <|@
tid a58 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 1]
op: Uncompress
stamp: a# org.graalvm.collections.EconomicMapImpl
=== Inputs ===
value: a149 
=== Succesors ===
=== Usages ===
?12 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a149  <|@  <|@
f <@*|@fixed>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 
=== Predecessor ===
v39 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i49 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v5 
values: i32 i10 
=== Succesors ===
=== Usages ===
i10 ?12 i18 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v5 values: i32 i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v4 
=== Succesors ===
next: v126 
=== Usages ===
v23 v28 i49 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v4 #next: v126  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 6]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i49 
y: i9 
=== Succesors ===
=== Usages ===
j99 v86 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i49 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i151 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i18 y: i151  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v86 
=== Succesors ===
trueSuccessor: v123 
falseSuccessor: v125 
=== Usages ===
=== Predecessor ===
v5 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v86 #trueSuccessor: v123 #falseSuccessor: v125  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 11]
stamp: i32
=== Inputs ===
x: i49 
y: i9 
=== Succesors ===
=== Usages ===
v84 i49 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i49 y: i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: EconomicMapImpl$SparseMapIterator.current
location: EconomicMapImpl$SparseMapIterator.current
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v158 
lastLocationAccess: - 
value: i10 
stateAfter: - 
=== Succesors ===
next: a154 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v158 lastLocationAccess: - value: i10 stateAfter: - #next: a154  <|@  <|@
f <@~|@floating>@ <|@
tid j99 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i18 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i18  <|@  <|@
f <@~|@floating>@ <|@
tid v161 <|@
result [v7|QWORD[.] + v11|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a63 
index: j99 
=== Succesors ===
=== Usages ===
a154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a63 index: j99  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a154 <|@
result v13|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v161 
lastLocationAccess: - 
=== Succesors ===
next: v27 
=== Usages ===
a94 v100 
=== Predecessor ===
v84 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v161 lastLocationAccess: - #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 20]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a154 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a154  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v100 
=== Succesors ===
trueSuccessor: v26 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
a154 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v100 #trueSuccessor: v26 #falseSuccessor: v23  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v7|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl$3.next()>
localsSize: 2
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 12]
sourceFile: EconomicMapImpl.java
sourceLine: 862
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a58 i49 a1 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a58 i49 a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
stamp: void
=== Inputs ===
stateBefore: ?12 
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?12 #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
stamp: void
=== Inputs ===
loopBegin: v5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v5  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: v9|QWORD[.] v10|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: v14|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:865) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v5 
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v5 #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid a94 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a154 
=== Succesors ===
=== Usages ===
a48 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a154  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:865) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
v23 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<EconomicMapImpl$3.next()>
localsSize: 2
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 862
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 87
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:865) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid a83 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a153 
=== Succesors ===
=== Usages ===
a48 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a153  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:865) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
v38 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a48 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:865) [bci: 26]
stamp: a java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v43 
values: a94 a83 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v43 values: a94 a83  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:865) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v44 v45 
=== Succesors ===
next: v29 
=== Usages ===
a48 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v44 v45 #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:865) [bci: 27]
stamp: void
=== Inputs ===
memoryMap: - 
result: a48 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a48  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 74
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v7|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: v9|QWORD[.] v10|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: v14|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v7|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: v9|QWORD[.] v10|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: v14|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v7|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: v9|QWORD[.] v10|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: v14|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v7|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: v9|QWORD[.] v10|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: v14|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v7|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: v9|QWORD[.] v10|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: v14|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction v5|DWORD = SHL value: v4|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  128  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction v11|DWORD = SHL value: v10|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v12|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction v13|DWORD[_] = MOV input: [v7|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: v9|QWORD[.] v10|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: v14|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction v5|DWORD = SHL value: v4|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  128  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction v11|DWORD = SHL value: v10|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v12|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction v13|DWORD[_] = MOV input: [v7|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: v9|QWORD[.] v10|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: v14|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v17|q [0, 1[[108, 110[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 26[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 30[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [30, 74[[112, 184[[200, 221[[222, 243[30 MustHaveRegister 32 MustHaveRegister 38 MustHaveRegister 66 MustHaveRegister 162 MustHaveRegister 183 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [32, 74[[112, 124[32 MustHaveRegister 34 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [34, 68[34 MustHaveRegister 36 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [36, 74[[112, 184[36 MustHaveRegister 42 MustHaveRegister 142 MustHaveRegister 183 LiveAtLoopEnd  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [38, 64[38 MustHaveRegister 40 ShouldHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d v4|d [40, 70[40 MustHaveRegister 42 ShouldHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d v4|d [64, 74[[112, 127[64 MustHaveRegister 66 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v2|d [68, 74[[112, 184[68 MustHaveRegister 70 MustHaveRegister 164 MustHaveRegister 183 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [70, 86[70 MustHaveRegister 72 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v1|d [124, 184[124 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d v6|d [128, 181[140 ShouldHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v10|d [140, 164[140 MustHaveRegister 142 ShouldHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v10|d [160, 183[160 MustHaveRegister 162 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [164, 168[[184, 196[164 MustHaveRegister 166 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [180, 181[180 MustHaveRegister  "NoDefinitionFound"
  v15|q QWORD "[v15|q]" v15|q v13|d [196, 199[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v8|d [86, 89[86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v16|q [90, 108[108 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v17|q [0, 1[[108, 110[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 26[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 30[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [30, 74[[112, 184[[200, 221[[222, 243[30 MustHaveRegister 32 MustHaveRegister 38 MustHaveRegister 66 MustHaveRegister 162 MustHaveRegister 183 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[r10|d]" v1|d -1 [32, 74[[112, 124[32 MustHaveRegister 34 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [34, 68[34 MustHaveRegister 36 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [36, 74[[112, 184[36 MustHaveRegister 42 MustHaveRegister 142 MustHaveRegister 183 LiveAtLoopEnd  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [38, 64[38 MustHaveRegister 40 ShouldHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r9|d]" v5|d v4|d [40, 70[40 MustHaveRegister 42 ShouldHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r8|d]" v6|d v4|d [64, 74[[112, 127[64 MustHaveRegister 66 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v2|d [68, 74[[112, 184[68 MustHaveRegister 70 MustHaveRegister 164 MustHaveRegister 183 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[r9|d]" v8|d -1 [70, 86[70 MustHaveRegister 72 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r10|q]" v9|q v1|d [124, 184[124 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r8|d]" v10|d v6|d [128, 181[140 ShouldHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r9|d]" v11|d v10|d [140, 164[140 MustHaveRegister 142 ShouldHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rcx|d]" v12|d v10|d [160, 183[160 MustHaveRegister 162 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r9|d]" v13|d -1 [164, 168[[184, 196[164 MustHaveRegister 166 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[r9|q]" v14|q -1 [180, 181[180 MustHaveRegister  "NoDefinitionFound"
  v15|q QWORD "[r9|q]" v15|q v13|d [196, 199[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[r9|q]" v16|q v8|d [86, 89[86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r9|q]" v17|q v16|q [90, 108[108 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction v5|DWORD = SHL value: v4|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  128  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction v11|DWORD = SHL value: v10|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v12|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction v13|DWORD[_] = MOV input: [v7|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: v9|QWORD[.] v10|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: v14|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v17|q [0, 1[[108, 110[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 26[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 30[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [30, 74[[112, 184[[200, 221[[222, 243[30 MustHaveRegister 32 MustHaveRegister 38 MustHaveRegister 66 MustHaveRegister 162 MustHaveRegister 183 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[r10|d]" v1|d -1 [32, 74[[112, 124[32 MustHaveRegister 34 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [34, 68[34 MustHaveRegister 36 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [36, 74[[112, 184[36 MustHaveRegister 42 MustHaveRegister 142 MustHaveRegister 183 LiveAtLoopEnd  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [38, 64[38 MustHaveRegister 40 ShouldHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r9|d]" v5|d v4|d [40, 70[40 MustHaveRegister 42 ShouldHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r8|d]" v6|d v4|d [64, 74[[112, 127[64 MustHaveRegister 66 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v2|d [68, 74[[112, 184[68 MustHaveRegister 70 MustHaveRegister 164 MustHaveRegister 183 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[r9|d]" v8|d -1 [70, 86[70 MustHaveRegister 72 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r10|q]" v9|q v1|d [124, 184[124 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r8|d]" v10|d v6|d [128, 181[140 ShouldHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r9|d]" v11|d v10|d [140, 164[140 MustHaveRegister 142 ShouldHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rcx|d]" v12|d v10|d [160, 183[160 MustHaveRegister 162 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r9|d]" v13|d -1 [164, 168[[184, 196[164 MustHaveRegister 166 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[r9|q]" v14|q -1 [180, 181[180 MustHaveRegister  "NoDefinitionFound"
  v15|q QWORD "[r9|q]" v15|q v13|d [196, 199[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[r9|q]" v16|q v8|d [86, 89[86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r9|q]" v17|q v16|q [90, 108[108 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction v5|DWORD = SHL value: v4|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  128  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction v11|DWORD = SHL value: v10|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v12|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction v13|DWORD[_] = MOV input: [v7|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: v9|QWORD[.] v10|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: v14|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v17|q [0, 1[[108, 110[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 26[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 30[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [30, 74[[112, 184[[200, 221[[222, 243[30 MustHaveRegister 32 MustHaveRegister 38 MustHaveRegister 66 MustHaveRegister 162 MustHaveRegister 183 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[r10|d]" v1|d -1 [32, 74[[112, 124[32 MustHaveRegister 34 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [34, 68[34 MustHaveRegister 36 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [36, 74[[112, 184[36 MustHaveRegister 42 MustHaveRegister 142 MustHaveRegister 183 LiveAtLoopEnd  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [38, 64[38 MustHaveRegister 40 ShouldHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r9|d]" v5|d v4|d [40, 70[40 MustHaveRegister 42 ShouldHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r8|d]" v6|d v4|d [64, 74[[112, 127[64 MustHaveRegister 66 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v2|d [68, 74[[112, 184[68 MustHaveRegister 70 MustHaveRegister 164 MustHaveRegister 183 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[r9|d]" v8|d -1 [70, 86[70 MustHaveRegister 72 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r10|q]" v9|q v1|d [124, 184[124 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r8|d]" v10|d v6|d [128, 181[140 ShouldHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r9|d]" v11|d v10|d [140, 164[140 MustHaveRegister 142 ShouldHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rcx|d]" v12|d v10|d [160, 183[160 MustHaveRegister 162 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r9|d]" v13|d -1 [164, 168[[184, 196[164 MustHaveRegister 166 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[r9|q]" v14|q -1 [180, 181[180 MustHaveRegister  "NoDefinitionFound"
  v15|q QWORD "[r9|q]" v15|q v13|d [196, 199[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[r9|q]" v16|q v8|d [86, 89[86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r9|q]" v17|q v16|q [90, 108[108 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction v5|DWORD = SHL value: v4|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  128  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction v11|DWORD = SHL value: v10|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v12|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction v13|DWORD[_] = MOV input: [v7|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: v9|QWORD[.] v10|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: v14|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction v5|DWORD = SHL value: v4|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction v11|DWORD = SHL value: v10|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v12|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction v13|DWORD[_] = MOV input: [v7|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: v9|QWORD[.] v10|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: v14|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: r10|QWORD[.] r8|DWORD 
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: r10|QWORD[.] r8|DWORD 
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: r10|QWORD[.] r8|DWORD 
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: r10|QWORD[.] r8|DWORD 
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: r10|QWORD[.] r8|DWORD 
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: r10|QWORD[.] r8|DWORD 
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: r10|QWORD[.] r8|DWORD 
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: r10|QWORD[.] r8|DWORD 
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: r10|QWORD[.] r8|DWORD 
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: r10|QWORD[.] r8|DWORD 
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: r10|QWORD[.] r8|DWORD 
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: r10|QWORD[.] r8|DWORD 
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607164876218404442
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4536427642450816652
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15]
stack: r10|QWORD[.] r8|DWORD 
locals: rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4566682686054513757
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4566624624684780544
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  220  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
     4: aload_0       
     5: dup           
     6: getfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
     9: dup_x1        
    10: iconst_1      
    11: iadd          
    12: putfield      #2          // org.graalvm.collections.EconomicMapImpl$SparseMapIterator.current:int
    15: invokevirtual #3          // org.graalvm.collections.EconomicMapImpl.getKey:(int)java.lang.Object
    18: dup           
    19: astore_1      
    20: ifnonnull     26
    23: goto          0
    26: aload_1       
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f854c01000090909090909090909090909048896c2410448b5614428b04d518000000448b1cc50c000000448b460c458bc841d1e1453bd90f86ea00000090909090909090909041ffc04489460c48c1e003468b4c88104585c90f842b000000909090909049c1e1039090909090909090498bc1488b6c24104883c418493ba7500400000f87d8000000c3909090909049c1e203e9420000006666660f1f840000000000666666900f1f400090909090909090418bc8ffc1894e0c468b4c88104585c90f852700000090909090904d8b8f58040000418501448bc19090909090458bc841d1e1453bd977c1e90e000000909090909049c1e103e96bffffff9090909090909041c78784040000e5a8ffff49c7879004000000000000e8000000000f1f8400000000009090909090909041c78784040000e5b5ffff49c7879004000000000000e8000000000f1f84000000000048896c2410e800000000e9a5fefffff4488d0d14ffffff49898f68040000e957fefffff441c78784040000f5c4ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5baffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 75 28 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD  <||@
  Comment 75 32 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 79 34 rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 79 [rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 79 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 87 36 r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 87 [rax:0, rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 87 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 95 38 r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 99 40 r9|DWORD = SHL value: r8|DWORD size: DWORD  <||@
  Comment 105 42 CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD  <||@
  Comment 114 block B1 null  <||@
  Comment 114 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 114 46 NOP  <||@
  Comment 115 48 NOP  <||@
  Comment 116 50 NOP  <||@
  Comment 117 52 NOP  <||@
  Comment 118 54 NOP  <||@
  Comment 119 56 NOP  <||@
  Comment 120 58 NOP  <||@
  Comment 121 60 NOP  <||@
  Comment 122 62 NOP  <||@
  Comment 123 64 r8|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 126 66 MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 130 68 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3  <||@
  Comment 134 70 r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 139 72 TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD  <||@
  Comment 148 block B8 null  <||@
  Comment 148 74 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 148 76 NOP  <||@
  Comment 149 78 NOP  <||@
  Comment 150 80 NOP  <||@
  Comment 151 82 NOP  <||@
  Comment 152 84 NOP  <||@
  Comment 153 86 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3  <||@
  Comment 157 88 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 157 block B9 null  <||@
  Comment 157 90 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 157 92 NOP  <||@
  Comment 158 94 NOP  <||@
  Comment 159 96 NOP  <||@
  Comment 160 98 NOP  <||@
  Comment 161 100 NOP  <||@
  Comment 162 102 NOP  <||@
  Comment 163 104 NOP  <||@
  Comment 164 106 NOP  <||@
  Comment 165 108 rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 168 110 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 177 POLL_RETURN_FAR  <||@
  Comment 191 block B2 null  <||@
  Comment 191 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 191 114 NOP  <||@
  Comment 192 116 NOP  <||@
  Comment 193 118 NOP  <||@
  Comment 194 120 NOP  <||@
  Comment 195 122 NOP  <||@
  Comment 196 124 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3  <||@
  Comment 200 126 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 205 block B4 loop 0 depth 1 header:5|LoopBegin  <||@
  Comment 205 144 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 224 146 NOP  <||@
  Comment 225 148 NOP  <||@
  Comment 226 150 NOP  <||@
  Comment 227 152 NOP  <||@
  Comment 228 154 NOP  <||@
  Comment 229 156 NOP  <||@
  Comment 230 158 NOP  <||@
  Comment 231 160 rcx|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 236 162 MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 239 164 r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 244 166 TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 253 block B5 loop 0 depth 1 header:5|LoopBegin  <||@
  Comment 253 168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 253 170 NOP  <||@
  Comment 254 172 NOP  <||@
  Comment 255 174 NOP  <||@
  Comment 256 176 NOP  <||@
  Comment 257 178 NOP  <||@
  Comment 258 180 SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15]  <||@
  Comment 265 [rax:0, rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15, duringCall: false, rethrow: false]
              |0             |1        
     locals:  |rsi|QWORD[.]  |-        
     stack:   |r10|QWORD[.]  |r8|DWORD   <||@
  Comment 265 {infopoint: SAFEPOINT}  <||@
  Comment 265 POLL_FAR  <||@
  Comment 268 -1 r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 271 182 JUMP ~outgoingValues: [] destination: B5 -> B3  <||@
  Comment 271 block B3 loop 0 depth 1 header:5|LoopBegin  <||@
  Comment 271 128 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 271 130 NOP  <||@
  Comment 272 132 NOP  <||@
  Comment 273 134 NOP  <||@
  Comment 274 136 NOP  <||@
  Comment 275 138 NOP  <||@
  Comment 276 140 r9|DWORD = SHL value: r8|DWORD size: DWORD  <||@
  Comment 282 142 CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD  <||@
  Comment 292 block B6 null  <||@
  Comment 292 184 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 292 186 NOP  <||@
  Comment 293 188 NOP  <||@
  Comment 294 190 NOP  <||@
  Comment 295 192 NOP  <||@
  Comment 296 194 NOP  <||@
  Comment 297 196 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3  <||@
  Comment 301 198 JUMP ~outgoingValues: [] destination: B6 -> B9  <||@
  Comment 306 block B7 null  <||@
  Comment 306 200 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 306 202 NOP  <||@
  Comment 307 204 NOP  <||@
  Comment 308 206 NOP  <||@
  Comment 309 208 NOP  <||@
  Comment 310 210 NOP  <||@
  Comment 311 212 NOP  <||@
  Comment 312 214 NOP  <||@
  Comment 313 216 MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD  <||@
  Comment 324 218 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 335 220 DEOPT info [bci:0]  <||@
  Comment 335 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 340 [rsi:0]at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 348 block B10 null  <||@
  Comment 348 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 348 224 NOP  <||@
  Comment 349 226 NOP  <||@
  Comment 350 228 NOP  <||@
  Comment 351 230 NOP  <||@
  Comment 352 232 NOP  <||@
  Comment 353 234 NOP  <||@
  Comment 354 236 NOP  <||@
  Comment 355 238 MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD  <||@
  Comment 366 240 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 377 242 DEOPT info [bci:0]  <||@
  Comment 377 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 382 [rsi:0]at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 395 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 420 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 448 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 453 [rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 483 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 488 [rax:0, rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 496 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 496 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 502 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 502 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8554[org.graalvm.collections.EconomicMapImpl$3.next()]"
  method "HotSpotCompilation-8554[org.graalvm.collections.EconomicMapImpl$3.next()]"
  date 1724269718334
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ab5bf00 448b560849bc0000002b787f00004d03d44d33e4493bc20f856391c2fe66669089842400c0feff4883ec189041817f20000000000f854c01000090909090909090909090909048896c2410448b5614428b04d518000000448b1cc50c000000448b460c458bc841d1e1453bd90f86ea00000090909090909090909041ffc04489460c48c1e003468b4c88104585c90f842b000000909090909049c1e1039090909090909090498bc1488b6c24104883c418493ba7500400000f87d8000000c3909090909049c1e203e9420000006666660f1f840000000000666666900f1f400090909090909090418bc8ffc1894e0c468b4c88104585c90f852700000090909090904d8b8f58040000418501448bc19090909090458bc841d1e1453bd977c1e90e000000909090909049c1e103e96bffffff9090909090909041c78784040000e5a8ffff49c7879004000000000000e826f1c2fe0f1f8400000000009090909090909041c78784040000e5b5ffff49c7879004000000000000e8fcf0c2fe0f1f84000000000048896c2410e890f1c0fee9a5fefffff4488d0d14ffffff49898f68040000e957ffc2fef441c78784040000f5c4ffff49c7879004000000000000e8b5f0c2fe0f1f84000000000041c78784040000f5baffff49c7879004000000000000e892f0c2fe0f1f840000000000e80b92d6fef4e825eec2fef4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 75 28 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@825a442 slotKind: QWORD  <||@
  Comment 75 32 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 79 34 rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 79 [rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 79 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 87 36 r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 87 [rax:0, rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 87 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 95 38 r8|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 99 40 r9|DWORD = SHL value: r8|DWORD size: DWORD  <||@
  Comment 105 42 CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: DWORD  <||@
  Comment 114 block B1 null  <||@
  Comment 114 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 114 46 NOP  <||@
  Comment 115 48 NOP  <||@
  Comment 116 50 NOP  <||@
  Comment 117 52 NOP  <||@
  Comment 118 54 NOP  <||@
  Comment 119 56 NOP  <||@
  Comment 120 58 NOP  <||@
  Comment 121 60 NOP  <||@
  Comment 122 62 NOP  <||@
  Comment 123 64 r8|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 126 66 MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 130 68 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3  <||@
  Comment 134 70 r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 139 72 TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.001947617801808077 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD  <||@
  Comment 148 block B8 null  <||@
  Comment 148 74 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 148 76 NOP  <||@
  Comment 149 78 NOP  <||@
  Comment 150 80 NOP  <||@
  Comment 151 82 NOP  <||@
  Comment 152 84 NOP  <||@
  Comment 153 86 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3  <||@
  Comment 157 88 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 157 block B9 null  <||@
  Comment 157 90 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 157 92 NOP  <||@
  Comment 158 94 NOP  <||@
  Comment 159 96 NOP  <||@
  Comment 160 98 NOP  <||@
  Comment 161 100 NOP  <||@
  Comment 162 102 NOP  <||@
  Comment 163 104 NOP  <||@
  Comment 164 106 NOP  <||@
  Comment 165 108 rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 168 110 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 177 POLL_RETURN_FAR  <||@
  Comment 191 block B2 null  <||@
  Comment 191 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 191 114 NOP  <||@
  Comment 192 116 NOP  <||@
  Comment 193 118 NOP  <||@
  Comment 194 120 NOP  <||@
  Comment 195 122 NOP  <||@
  Comment 196 124 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3  <||@
  Comment 200 126 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 205 block B4 loop 0 depth 1 header:5|LoopBegin  <||@
  Comment 205 144 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 224 146 NOP  <||@
  Comment 225 148 NOP  <||@
  Comment 226 150 NOP  <||@
  Comment 227 152 NOP  <||@
  Comment 228 154 NOP  <||@
  Comment 229 156 NOP  <||@
  Comment 230 158 NOP  <||@
  Comment 231 160 rcx|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 236 162 MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 239 164 r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 244 166 TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.01 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 253 block B5 loop 0 depth 1 header:5|LoopBegin  <||@
  Comment 253 168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 253 170 NOP  <||@
  Comment 254 172 NOP  <||@
  Comment 255 174 NOP  <||@
  Comment 256 176 NOP  <||@
  Comment 257 178 NOP  <||@
  Comment 258 180 SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15]  <||@
  Comment 265 [rax:0, rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 15, duringCall: false, rethrow: false]
              |0             |1        
     locals:  |rsi|QWORD[.]  |-        
     stack:   |r10|QWORD[.]  |r8|DWORD   <||@
  Comment 265 {infopoint: SAFEPOINT}  <||@
  Comment 265 POLL_FAR  <||@
  Comment 268 -1 r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 271 182 JUMP ~outgoingValues: [] destination: B5 -> B3  <||@
  Comment 271 block B3 loop 0 depth 1 header:5|LoopBegin  <||@
  Comment 271 128 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 271 130 NOP  <||@
  Comment 272 132 NOP  <||@
  Comment 273 134 NOP  <||@
  Comment 274 136 NOP  <||@
  Comment 275 138 NOP  <||@
  Comment 276 140 r9|DWORD = SHL value: r8|DWORD size: DWORD  <||@
  Comment 282 142 CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD  <||@
  Comment 292 block B6 null  <||@
  Comment 292 184 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 292 186 NOP  <||@
  Comment 293 188 NOP  <||@
  Comment 294 190 NOP  <||@
  Comment 295 192 NOP  <||@
  Comment 296 194 NOP  <||@
  Comment 297 196 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2793dc27 encoding: base: 0 shift: 3  <||@
  Comment 301 198 JUMP ~outgoingValues: [] destination: B6 -> B9  <||@
  Comment 306 block B7 null  <||@
  Comment 306 200 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 306 202 NOP  <||@
  Comment 307 204 NOP  <||@
  Comment 308 206 NOP  <||@
  Comment 309 208 NOP  <||@
  Comment 310 210 NOP  <||@
  Comment 311 212 NOP  <||@
  Comment 312 214 NOP  <||@
  Comment 313 216 MOV x: [r15|QWORD + 1156] y: -22299 size: DWORD  <||@
  Comment 324 218 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 335 220 DEOPT info [bci:0]  <||@
  Comment 335 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 340 [rsi:0]at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 348 block B10 null  <||@
  Comment 348 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 348 224 NOP  <||@
  Comment 349 226 NOP  <||@
  Comment 350 228 NOP  <||@
  Comment 351 230 NOP  <||@
  Comment 352 232 NOP  <||@
  Comment 353 234 NOP  <||@
  Comment 354 236 NOP  <||@
  Comment 355 238 MOV x: [r15|QWORD + 1156] y: -18971 size: DWORD  <||@
  Comment 366 240 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 377 242 DEOPT info [bci:0]  <||@
  Comment 377 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 382 [rsi:0]at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 395 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 420 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 448 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 453 [rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 483 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 488 [rax:0, rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:862) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 496 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 496 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 502 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 502 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
