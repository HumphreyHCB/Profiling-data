begin_compilation
  name " HotSpotCompilation-7558[java.util.WeakHashMap.matchesKey(WeakHashMap$Entry, Object)]"
  method "HotSpotCompilation-7558[java.util.WeakHashMap.matchesKey(WeakHashMap$Entry, Object)]"
  date 1724269725361
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a43 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a43  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.util.WeakHashMap$Entry
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v85 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v88 v14 v57 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<WeakHashMap.matchesKey(WeakHashMap$Entry, Object)>
localsSize: 4
locksSize: 0
sourceFile: WeakHashMap.java
sourceLine: 294
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - a2 a3 
=== Succesors ===
=== Usages ===
v84 a43 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a43 a45 v79 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a43 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: WEAK_REFERS_TO
deoptReasonAndAction: int[-10763|0xffffffffffffd5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Reference.referent
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ref.Reference.refersTo0(Object) [bci: -1]
at java.lang.ref.Reference.refersToImpl(Reference.java:384) [bci: 2]
at java.lang.ref.Reference.refersTo(Reference.java:375) [bci: 2]
at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 2]
stamp: n java.lang.Object
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v85 
lastLocationAccess: - 
=== Succesors ===
next: v20 
=== Usages ===
a44 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v85 lastLocationAccess: - #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid a44 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.Reference.refersTo0(Object) [bci: -1]
at java.lang.ref.Reference.refersToImpl(Reference.java:384) [bci: 2]
at java.lang.ref.Reference.refersTo(Reference.java:375) [bci: 2]
at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 2]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a43 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a43  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ref.Reference.refersTo0(Object) [bci: -1]
at java.lang.ref.Reference.refersToImpl(Reference.java:384) [bci: 2]
at java.lang.ref.Reference.refersTo(Reference.java:375) [bci: 2]
at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a44 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a44  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 5]
profileData: PROFILED designatedSuccessorProbability: 0.9019761342669593
stamp: void
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
a43 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v19 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.Reference.refersTo0(Object) [bci: -1]
at java.lang.ref.Reference.refersToImpl(Reference.java:384) [bci: 2]
at java.lang.ref.Reference.refersTo(Reference.java:375) [bci: 2]
at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 9]
stamp: void
=== Inputs ===
memoryMap: - 
result: i15 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i15  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:297) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a45 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a45 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: REFERENCE_GET
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Reference.referent
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:362) [bci: 1]
at java.util.WeakHashMap.matchesKey(WeakHashMap.java:297) [bci: 11]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v85 
lastLocationAccess: - 
=== Succesors ===
next: v79 
=== Usages ===
a46 v58 
=== Predecessor ===
v18 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v85 lastLocationAccess: - #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid a46 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:362) [bci: 1]
at java.util.WeakHashMap.matchesKey(WeakHashMap.java:297) [bci: 11]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a45 
=== Succesors ===
=== Usages ===
v57 v79 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:362) [bci: 1]
at java.util.WeakHashMap.matchesKey(WeakHashMap.java:297) [bci: 11]
precise: true
stamp: void
=== Inputs ===
address: v85 
value: a46 
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
a45 >@ <|@
instruction <@G1ReferentFieldReadBarrier|@jdk.graal.compiler.nodes.gc.G1ReferentFieldReadBarrierNode>@ address: v85 value: a46 #next: v25  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
barriersString: 
fence: NONE
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:362) [bci: 1]
at java.util.WeakHashMap.matchesKey(WeakHashMap.java:297) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 16]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a45 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a45  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 16]
profileData: PROFILED designatedSuccessorProbability: 1.0645307324419662E-5
stamp: void
=== Inputs ===
condition: v58 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v28 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v58 #trueSuccessor: v29 #falseSuccessor: v28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.Reference.refersTo0(Object) [bci: -1]
at java.lang.ref.Reference.refersToImpl(Reference.java:384) [bci: 2]
at java.lang.ref.Reference.refersTo(Reference.java:375) [bci: 2]
at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
v29 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-12299|0xffffffffffffcff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v88 
lastLocationAccess: - 
=== Succesors ===
next: v53 
=== Usages ===
v83 
=== Predecessor ===
v28 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v88 lastLocationAccess: - #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v84 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v84  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
displacement: 464
stamp: void*
stride: S1
=== Inputs ===
base: v83 
index: - 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v83 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v86 
lastLocationAccess: - 
=== Succesors ===
next: j56 
=== Usages ===
v87 v57 
=== Predecessor ===
v84 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v86 lastLocationAccess: - #next: j56  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v53 
index: - 
=== Succesors ===
=== Usages ===
j56 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v53 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j56 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v87 
lastLocationAccess: - 
=== Succesors ===
next: i32 
=== Usages ===
v57 
=== Predecessor ===
v53 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v87 lastLocationAccess: - #next: i32  <|@  <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j56 
metaspaceMethod: v53 
arguments: a3 a46 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j56 metaspaceMethod: v53 arguments: a3 a46  <|@  <|@
tid ?69 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<WeakHashMap.matchesKey(WeakHashMap$Entry, Object)>
localsSize: 4
locksSize: 0
sourceFile: WeakHashMap.java
sourceLine: 298
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
bci: 21
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v57 
stateDuring: ?69 
=== Succesors ===
next: v36 
=== Usages ===
i39 
=== Predecessor ===
j56 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v57 stateDuring: ?69 #next: v36  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
i32 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 32]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v37 
values: i32 i16 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v37 values: i32 i16  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v36 v38 
=== Succesors ===
next: v41 
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v36 v38 #next: v41  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 32]
stamp: void
=== Inputs ===
memoryMap: - 
result: i39 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i39  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 12], ~expectedObject: v5|QWORD[.]) {temp: v6|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV input: [v10|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a43 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a43  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.util.WeakHashMap$Entry
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v85 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v88 v14 v57 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<WeakHashMap.matchesKey(WeakHashMap$Entry, Object)>
localsSize: 4
locksSize: 0
sourceFile: WeakHashMap.java
sourceLine: 294
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - a2 a3 
=== Succesors ===
=== Usages ===
v84 a43 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a43 a45 v79 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a43 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: WEAK_REFERS_TO
deoptReasonAndAction: int[-10763|0xffffffffffffd5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Reference.referent
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ref.Reference.refersTo0(Object) [bci: -1]
at java.lang.ref.Reference.refersToImpl(Reference.java:384) [bci: 2]
at java.lang.ref.Reference.refersTo(Reference.java:375) [bci: 2]
at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 2]
stamp: n java.lang.Object
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v85 
lastLocationAccess: - 
=== Succesors ===
next: v20 
=== Usages ===
a44 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v85 lastLocationAccess: - #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid a44 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.Reference.refersTo0(Object) [bci: -1]
at java.lang.ref.Reference.refersToImpl(Reference.java:384) [bci: 2]
at java.lang.ref.Reference.refersTo(Reference.java:375) [bci: 2]
at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 2]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a43 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a43  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ref.Reference.refersTo0(Object) [bci: -1]
at java.lang.ref.Reference.refersToImpl(Reference.java:384) [bci: 2]
at java.lang.ref.Reference.refersTo(Reference.java:375) [bci: 2]
at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a44 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a44  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 5]
profileData: PROFILED designatedSuccessorProbability: 0.9019761342669593
stamp: void
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
a43 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v19 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.Reference.refersTo0(Object) [bci: -1]
at java.lang.ref.Reference.refersToImpl(Reference.java:384) [bci: 2]
at java.lang.ref.Reference.refersTo(Reference.java:375) [bci: 2]
at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 9]
stamp: void
=== Inputs ===
memoryMap: - 
result: i15 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i15  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:297) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a45 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a45 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: REFERENCE_GET
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Reference.referent
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:362) [bci: 1]
at java.util.WeakHashMap.matchesKey(WeakHashMap.java:297) [bci: 11]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v85 
lastLocationAccess: - 
=== Succesors ===
next: v79 
=== Usages ===
a46 v58 
=== Predecessor ===
v18 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v85 lastLocationAccess: - #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid a46 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:362) [bci: 1]
at java.util.WeakHashMap.matchesKey(WeakHashMap.java:297) [bci: 11]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a45 
=== Succesors ===
=== Usages ===
v57 v79 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:362) [bci: 1]
at java.util.WeakHashMap.matchesKey(WeakHashMap.java:297) [bci: 11]
precise: true
stamp: void
=== Inputs ===
address: v85 
value: a46 
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
a45 >@ <|@
instruction <@G1ReferentFieldReadBarrier|@jdk.graal.compiler.nodes.gc.G1ReferentFieldReadBarrierNode>@ address: v85 value: a46 #next: v25  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
barriersString: 
fence: NONE
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:362) [bci: 1]
at java.util.WeakHashMap.matchesKey(WeakHashMap.java:297) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 16]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a45 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a45  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 16]
profileData: PROFILED designatedSuccessorProbability: 1.0645307324419662E-5
stamp: void
=== Inputs ===
condition: v58 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v28 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v58 #trueSuccessor: v29 #falseSuccessor: v28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 12], ~expectedObject: v5|QWORD[.]) {temp: v6|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.Reference.refersTo0(Object) [bci: -1]
at java.lang.ref.Reference.refersToImpl(Reference.java:384) [bci: 2]
at java.lang.ref.Reference.refersTo(Reference.java:375) [bci: 2]
at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
v29 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid v88 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v84 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-12299|0xffffffffffffcff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v88 
lastLocationAccess: - 
=== Succesors ===
next: v53 
=== Usages ===
v83 
=== Predecessor ===
v28 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v88 lastLocationAccess: - #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v84 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v84  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
result [v8|QWORD + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
stamp: void*
stride: S1
=== Inputs ===
base: v83 
index: - 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v83 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v53 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v86 
lastLocationAccess: - 
=== Succesors ===
next: j56 
=== Usages ===
v87 v57 
=== Predecessor ===
v84 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v86 lastLocationAccess: - #next: j56  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
result [v10|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v53 
index: - 
=== Succesors ===
=== Usages ===
j56 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v53 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j56 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v87 
lastLocationAccess: - 
=== Succesors ===
next: i32 
=== Usages ===
v57 
=== Predecessor ===
v53 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v87 lastLocationAccess: - #next: i32  <|@  <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j56 
metaspaceMethod: v53 
arguments: a3 a46 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j56 metaspaceMethod: v53 arguments: a3 a46  <|@  <|@
tid ?69 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<WeakHashMap.matchesKey(WeakHashMap$Entry, Object)>
localsSize: 4
locksSize: 0
sourceFile: WeakHashMap.java
sourceLine: 298
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i32 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 21
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v57 
stateDuring: ?69 
=== Succesors ===
next: v36 
=== Usages ===
i39 
=== Predecessor ===
j56 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v57 stateDuring: ?69 #next: v36  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
i32 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV input: [v10|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i39 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 32]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v37 
values: i32 i16 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v37 values: i32 i16  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v36 v38 
=== Succesors ===
next: v41 
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v36 v38 #next: v41  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 32]
stamp: void
=== Inputs ===
memoryMap: - 
result: i39 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i39  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 12], ~expectedObject: v5|QWORD[.]) {temp: v6|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV input: [v10|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 12], ~expectedObject: v5|QWORD[.]) {temp: v6|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV input: [v10|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 12], ~expectedObject: v5|QWORD[.]) {temp: v6|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV input: [v10|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 12], ~expectedObject: v5|QWORD[.]) {temp: v6|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV input: [v10|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 12], ~expectedObject: v5|QWORD[.]) {temp: v6|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV input: [v10|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 12], ~expectedObject: v5|QWORD[.]) {temp: v6|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  148  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  150  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  152  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 464] size: QWORD <|@ <|@
      nr  154  <|@ instruction v11|QWORD = MOV input: [v10|QWORD + 64] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rbx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr  166  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr  170  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 12], ~expectedObject: v5|QWORD[.]) {temp: v6|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  148  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  150  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  152  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 464] size: QWORD <|@ <|@
      nr  154  <|@ instruction v11|QWORD = MOV input: [v10|QWORD + 64] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rbx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr  166  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr  170  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v11|q [0, 1[[56, 58[[162, 166[[188, 190[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 30[[164, 165[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v5|q [0, 28[[158, 165[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v10|q [0, 1[[160, 165[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[164, 165[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v1|q [0, 1[[156, 165[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rdx|- [28, 38[[60, 147[28 MustHaveRegister 32 MustHaveRegister 102 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rcx|- [30, 38[[60, 156[30 MustHaveRegister 36 ShouldHaveRegister 146 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [32, 34[32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q v2|d [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [102, 108[102 MustHaveRegister 104 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v4|d [104, 158[104 MustHaveRegister 106 MustHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [106, 107[106 MustHaveRegister  "NoDefinitionFound"
  v7|d DWORD "[v7|d]" v7|d -1 [146, 150[146 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v7|d [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [148, 151[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [152, 160[152 MustHaveRegister 154 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [154, 162[154 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d rax|d [166, 169[166 MustHaveRegister 168 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d v12|d [170, 188[188 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v11|q [0, 1[[56, 58[[162, 166[[188, 190[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 30[[164, 165[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v5|q [0, 28[[158, 165[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v10|q [0, 1[[160, 165[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[164, 165[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v1|q [0, 1[[156, 165[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  v0|q QWORD "[rdx|q]" v0|q rdx|- [28, 38[[60, 147[28 MustHaveRegister 32 MustHaveRegister 102 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rcx|q]" v1|q rcx|- [30, 38[[60, 156[30 MustHaveRegister 36 ShouldHaveRegister 146 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [32, 34[32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[rax|q]" v3|q v2|d [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rsi|d]" v4|d -1 [102, 108[102 MustHaveRegister 104 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbx|q]" v5|q v4|d [104, 158[104 MustHaveRegister 106 MustHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q -1 [106, 107[106 MustHaveRegister  "NoDefinitionFound"
  v7|d DWORD "[rsi|d]" v7|d -1 [146, 150[146 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q v7|d [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rdx|q]" v9|q -1 [148, 151[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q -1 [152, 160[152 MustHaveRegister 154 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[r10|q]" v11|q -1 [154, 162[154 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d rax|d [166, 169[166 MustHaveRegister 168 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d v12|d [170, 188[188 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 12], ~expectedObject: v5|QWORD[.]) {temp: v6|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  148  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  150  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  152  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 464] size: QWORD <|@ <|@
      nr  154  <|@ instruction v11|QWORD = MOV input: [v10|QWORD + 64] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rbx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr  166  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr  170  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v11|q [0, 1[[56, 58[[162, 166[[188, 190[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 30[[164, 165[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v5|q [0, 28[[158, 165[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v10|q [0, 1[[160, 165[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[164, 165[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v1|q [0, 1[[156, 165[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  v0|q QWORD "[rdx|q]" v0|q rdx|- [28, 38[[60, 147[28 MustHaveRegister 32 MustHaveRegister 102 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rcx|q]" v1|q rcx|- [30, 38[[60, 156[30 MustHaveRegister 36 ShouldHaveRegister 146 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [32, 34[32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[rax|q]" v3|q v2|d [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rsi|d]" v4|d -1 [102, 108[102 MustHaveRegister 104 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbx|q]" v5|q v4|d [104, 158[104 MustHaveRegister 106 MustHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q -1 [106, 107[106 MustHaveRegister  "NoDefinitionFound"
  v7|d DWORD "[rsi|d]" v7|d -1 [146, 150[146 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q v7|d [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rdx|q]" v9|q -1 [148, 151[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q -1 [152, 160[152 MustHaveRegister 154 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[r10|q]" v11|q -1 [154, 162[154 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d rax|d [166, 169[166 MustHaveRegister 168 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d v12|d [170, 188[188 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 12], ~expectedObject: v5|QWORD[.]) {temp: v6|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  148  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  150  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  152  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 464] size: QWORD <|@ <|@
      nr  154  <|@ instruction v11|QWORD = MOV input: [v10|QWORD + 64] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rbx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr  166  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr  170  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v11|q [0, 1[[56, 58[[162, 166[[188, 190[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 30[[164, 165[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v5|q [0, 28[[158, 165[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v10|q [0, 1[[160, 165[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[164, 165[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v1|q [0, 1[[156, 165[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[164, 165[ "NoDefinitionFound"
  v0|q QWORD "[rdx|q]" v0|q rdx|- [28, 38[[60, 147[28 MustHaveRegister 32 MustHaveRegister 102 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rcx|q]" v1|q rcx|- [30, 38[[60, 156[30 MustHaveRegister 36 ShouldHaveRegister 146 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [32, 34[32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[rax|q]" v3|q v2|d [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rsi|d]" v4|d -1 [102, 108[102 MustHaveRegister 104 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbx|q]" v5|q v4|d [104, 158[104 MustHaveRegister 106 MustHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q -1 [106, 107[106 MustHaveRegister  "NoDefinitionFound"
  v7|d DWORD "[rsi|d]" v7|d -1 [146, 150[146 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q v7|d [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rdx|q]" v9|q -1 [148, 151[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q -1 [152, 160[152 MustHaveRegister 154 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[r10|q]" v11|q -1 [154, 162[154 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d rax|d [166, 169[166 MustHaveRegister 168 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d v12|d [170, 188[188 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 12], ~expectedObject: v5|QWORD[.]) {temp: v6|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  148  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  150  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  152  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 464] size: QWORD <|@ <|@
      nr  154  <|@ instruction v11|QWORD = MOV input: [v10|QWORD + 64] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rbx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr  166  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr  170  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 12], ~expectedObject: v5|QWORD[.]) {temp: v6|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  148  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  150  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v7|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  152  <|@ instruction v10|QWORD = MOV input: [v8|QWORD + 464] size: QWORD <|@ <|@
      nr  154  <|@ instruction v11|QWORD = MOV input: [v10|QWORD + 64] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rbx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr  166  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|QWORD[.] + 12], ~expectedObject: rbx|QWORD[.]) {temp: rax|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  152  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  154  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|QWORD[.] + 12], ~expectedObject: rbx|QWORD[.]) {temp: rax|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  152  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  154  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|QWORD[.] + 12], ~expectedObject: rbx|QWORD[.]) {temp: rax|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  152  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  154  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|QWORD[.] + 12], ~expectedObject: rbx|QWORD[.]) {temp: rax|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  152  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  154  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|QWORD[.] + 12], ~expectedObject: rbx|QWORD[.]) {temp: rax|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  152  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  154  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|QWORD[.] + 12], ~expectedObject: rbx|QWORD[.]) {temp: rax|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  152  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  154  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|QWORD[.] + 12], ~expectedObject: rbx|QWORD[.]) {temp: rax|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  152  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  154  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|QWORD[.] + 12], ~expectedObject: rbx|QWORD[.]) {temp: rax|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  152  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  154  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|QWORD[.] + 12], ~expectedObject: rbx|QWORD[.]) {temp: rax|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  152  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  154  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|QWORD[.] + 12], ~expectedObject: rbx|QWORD[.]) {temp: rax|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  152  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  154  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|QWORD[.] + 12], ~expectedObject: rbx|QWORD[.]) {temp: rax|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  152  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  154  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|QWORD[.] + 12], ~expectedObject: rbx|QWORD[.]) {temp: rax|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0]
live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  152  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  154  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606299498309639933
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|QWORD[.] + 12], ~expectedObject: rbx|QWORD[.]) {temp: rax|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4591727709394505023
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0]
live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  152  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  154  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4591727784586184728
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4517534588546368423
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: invokevirtual #21         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
     5: ifeq          10
     8: iconst_1      
     9: ireturn       
    10: aload_1       
    11: invokevirtual #22         // java.lang.ref.Reference.get:()java.lang.Object
    14: astore_3      
    15: aload_3       
    16: ifnull        31
    19: aload_2       
    20: aload_3       
    21: invokevirtual #23         // java.lang.Object.equals:(java.lang.Object)boolean
    24: ifeq          31
    27: iconst_1      
    28: goto          32
    31: iconst_0      
    32: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f8506010000909090909090909090909048896c24108b420c48c1e003483bc10f85240000009090909090909090b801000000488b6c24104883c418493ba7500400000f87d3000000c390909090909090909090909090909090909090908b720c8bde48c1e30341807f40000f84260000004885db0f841d000000498b47284883f8000f84a70000004883e808498947284903473848891885f60f846200000090909090909090909090909090909090908b710848ba0000002b787f0000488d3432488b86d00100004c8b5040488bf1488bd3488bd8498bc2ffd00f1f8400000000009090909090909090488b6c24104883c418493ba7500400000f873e000000c3909090b800000000ebd748896c2410e800000000e9ebfefffff4488d0d19ffffff49898f68040000e99dfefffff448891c24e800000000e95afffffff4488d0daeffffff49898f68040000e97afefffff441c78784040000f5d5ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5cfffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD  <||@
  Comment 74 32 rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 74 [rcx:0, rdx:0]at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-   <||@
  Comment 74 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 77 34 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3  <||@
  Comment 81 36 CMPBRANCH (x: rax|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 90 block B1 null  <||@
  Comment 90 38 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 90 40 NOP  <||@
  Comment 91 42 NOP  <||@
  Comment 92 44 NOP  <||@
  Comment 93 46 NOP  <||@
  Comment 94 48 NOP  <||@
  Comment 95 50 NOP  <||@
  Comment 96 52 NOP  <||@
  Comment 97 54 NOP  <||@
  Comment 98 56 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 103 58 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 112 POLL_RETURN_FAR  <||@
  Comment 126 block B2 null  <||@
  Comment 126 60 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 126 62 NOP  <||@
  Comment 127 64 NOP  <||@
  Comment 128 66 NOP  <||@
  Comment 129 68 NOP  <||@
  Comment 130 70 NOP  <||@
  Comment 131 72 NOP  <||@
  Comment 132 74 NOP  <||@
  Comment 133 76 NOP  <||@
  Comment 134 78 NOP  <||@
  Comment 135 80 NOP  <||@
  Comment 136 82 NOP  <||@
  Comment 137 84 NOP  <||@
  Comment 138 86 NOP  <||@
  Comment 139 88 NOP  <||@
  Comment 140 90 NOP  <||@
  Comment 141 92 NOP  <||@
  Comment 142 94 NOP  <||@
  Comment 143 96 NOP  <||@
  Comment 144 98 NOP  <||@
  Comment 145 100 NOP  <||@
  Comment 146 102 rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 149 104 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3  <||@
  Comment 155 106 AMD64G1PREWRITEBARRIER (~address: [rdx|QWORD[.] + 12], ~expectedObject: rbx|QWORD[.]) {temp: rax|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a  <||@
  Comment 204 108 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 212 block B4 null  <||@
  Comment 212 110 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 212 112 NOP  <||@
  Comment 213 114 NOP  <||@
  Comment 214 116 NOP  <||@
  Comment 215 118 NOP  <||@
  Comment 216 120 NOP  <||@
  Comment 217 122 NOP  <||@
  Comment 218 124 NOP  <||@
  Comment 219 126 NOP  <||@
  Comment 220 128 NOP  <||@
  Comment 221 130 NOP  <||@
  Comment 222 132 NOP  <||@
  Comment 223 134 NOP  <||@
  Comment 224 136 NOP  <||@
  Comment 225 138 NOP  <||@
  Comment 226 140 NOP  <||@
  Comment 227 142 NOP  <||@
  Comment 228 144 NOP  <||@
  Comment 229 146 rsi|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 229 [rcx:0, rdx:0, rbx:0]at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-   <||@
  Comment 229 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 232 148 rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 242 150 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0  <||@
  Comment 246 152 rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD  <||@
  Comment 253 154 r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD  <||@
  Comment 257 156 rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 260 158 rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 263 160 rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 266 162 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 269 164 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21]  <||@
  Comment 269 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 269 INLINE_INVOKE  <||@
  Comment 271 []at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 279 168 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 279 block B5 null  <||@
  Comment 279 170 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 279 172 NOP  <||@
  Comment 280 174 NOP  <||@
  Comment 281 176 NOP  <||@
  Comment 282 178 NOP  <||@
  Comment 283 180 NOP  <||@
  Comment 284 182 NOP  <||@
  Comment 285 184 NOP  <||@
  Comment 286 186 NOP  <||@
  Comment 287 190 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 296 POLL_RETURN_FAR  <||@
  Comment 310 block B3 null  <||@
  Comment 310 192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 310 194 NOP  <||@
  Comment 311 196 NOP  <||@
  Comment 312 198 NOP  <||@
  Comment 313 -1 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 318 200 JUMP ~outgoingValues: [] destination: B3 -> B5  <||@
  Comment 325 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 350 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 360 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 385 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 413 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 418 [rcx:0, rdx:0]at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-   <||@
  Comment 448 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 453 [rcx:0, rdx:0, rbx:0]at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-   <||@
  Comment 461 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 461 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 467 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 467 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-7558[java.util.WeakHashMap.matchesKey(WeakHashMap$Entry, Object)]"
  method "HotSpotCompilation-7558[java.util.WeakHashMap.matchesKey(WeakHashMap$Entry, Object)]"
  date 1724269725462
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789accf480 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e35babfe66669089842400c0feff4883ec189041817f20000000000f8506010000909090909090909090909048896c24108b420c48c1e003483bc10f85240000009090909090909090b801000000488b6c24104883c418493ba7500400000f87d3000000c390909090909090909090909090909090909090908b720c8bde48c1e30341807f40000f84260000004885db0f841d000000498b47284883f8000f84a70000004883e808498947284903473848891885f60f846200000090909090909090909090909090909090908b710848ba0000002b787f0000488d3432488b86d00100004c8b5040488bf1488bd3488bd8498bc2ffd00f1f8400000000009090909090909090488b6c24104883c418493ba7500400000f873e000000c3909090b800000000ebd748896c2410e856bca9fee9ebfefffff4488d0d19ffffff49898f68040000e91dcaabfef448891c24e8138cbffee95afffffff4488d0daeffffff49898f68040000e9fac9abfef441c78784040000f5d5ffff49c7879004000000000000e858bbabfe0f1f84000000000041c78784040000f5cfffff49c7879004000000000000e835bbabfe0f1f840000000000e8ae5cbffef4e8c8b8abfef4f4f4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@53797a01 slotKind: QWORD  <||@
  Comment 74 32 rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 74 [rcx:0, rdx:0]at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-   <||@
  Comment 74 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 77 34 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3  <||@
  Comment 81 36 CMPBRANCH (x: rax|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9019761342669593 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 90 block B1 null  <||@
  Comment 90 38 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 90 40 NOP  <||@
  Comment 91 42 NOP  <||@
  Comment 92 44 NOP  <||@
  Comment 93 46 NOP  <||@
  Comment 94 48 NOP  <||@
  Comment 95 50 NOP  <||@
  Comment 96 52 NOP  <||@
  Comment 97 54 NOP  <||@
  Comment 98 56 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 103 58 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 112 POLL_RETURN_FAR  <||@
  Comment 126 block B2 null  <||@
  Comment 126 60 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 126 62 NOP  <||@
  Comment 127 64 NOP  <||@
  Comment 128 66 NOP  <||@
  Comment 129 68 NOP  <||@
  Comment 130 70 NOP  <||@
  Comment 131 72 NOP  <||@
  Comment 132 74 NOP  <||@
  Comment 133 76 NOP  <||@
  Comment 134 78 NOP  <||@
  Comment 135 80 NOP  <||@
  Comment 136 82 NOP  <||@
  Comment 137 84 NOP  <||@
  Comment 138 86 NOP  <||@
  Comment 139 88 NOP  <||@
  Comment 140 90 NOP  <||@
  Comment 141 92 NOP  <||@
  Comment 142 94 NOP  <||@
  Comment 143 96 NOP  <||@
  Comment 144 98 NOP  <||@
  Comment 145 100 NOP  <||@
  Comment 146 102 rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 149 104 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 0 shift: 3  <||@
  Comment 155 106 AMD64G1PREWRITEBARRIER (~address: [rdx|QWORD[.] + 12], ~expectedObject: rbx|QWORD[.]) {temp: rax|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@38d9e6a  <||@
  Comment 204 108 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 1.0645307324419662E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 212 block B4 null  <||@
  Comment 212 110 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 212 112 NOP  <||@
  Comment 213 114 NOP  <||@
  Comment 214 116 NOP  <||@
  Comment 215 118 NOP  <||@
  Comment 216 120 NOP  <||@
  Comment 217 122 NOP  <||@
  Comment 218 124 NOP  <||@
  Comment 219 126 NOP  <||@
  Comment 220 128 NOP  <||@
  Comment 221 130 NOP  <||@
  Comment 222 132 NOP  <||@
  Comment 223 134 NOP  <||@
  Comment 224 136 NOP  <||@
  Comment 225 138 NOP  <||@
  Comment 226 140 NOP  <||@
  Comment 227 142 NOP  <||@
  Comment 228 144 NOP  <||@
  Comment 229 146 rsi|DWORD = MOV input: [rcx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 229 [rcx:0, rdx:0, rbx:0]at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-   <||@
  Comment 229 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 232 148 rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 242 150 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1514393c encoding: base: 140154094223360 shift: 0  <||@
  Comment 246 152 rax|QWORD = MOV input: [rsi|QWORD + 464] size: QWORD  <||@
  Comment 253 154 r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD  <||@
  Comment 257 156 rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 260 158 rdx|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 263 160 rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 266 162 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 269 164 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:21]  <||@
  Comment 269 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 269 INLINE_INVOKE  <||@
  Comment 271 []at java.util.WeakHashMap.matchesKey(WeakHashMap.java:298) [bci: 21, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 279 168 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 279 block B5 null  <||@
  Comment 279 170 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 279 172 NOP  <||@
  Comment 280 174 NOP  <||@
  Comment 281 176 NOP  <||@
  Comment 282 178 NOP  <||@
  Comment 283 180 NOP  <||@
  Comment 284 182 NOP  <||@
  Comment 285 184 NOP  <||@
  Comment 286 186 NOP  <||@
  Comment 287 190 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 296 POLL_RETURN_FAR  <||@
  Comment 310 block B3 null  <||@
  Comment 310 192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 310 194 NOP  <||@
  Comment 311 196 NOP  <||@
  Comment 312 198 NOP  <||@
  Comment 313 -1 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 318 200 JUMP ~outgoingValues: [] destination: B3 -> B5  <||@
  Comment 325 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 350 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 360 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 385 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 413 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 418 [rcx:0, rdx:0]at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-   <||@
  Comment 448 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 453 [rcx:0, rdx:0, rbx:0]at java.util.WeakHashMap.matchesKey(WeakHashMap.java:294) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-   <||@
  Comment 461 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 461 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 467 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 467 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
